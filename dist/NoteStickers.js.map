{"version":3,"file":"NoteStickers.js","sources":["../src/NoteStickers.ts"],"sourcesContent":["/*******************************************************************************\n*                                                                              *\n*                                Note Stickers                                 *\n*                                                                              *\n*******************************************************************************/\n\n  declare const download\n\n  import {\n    quoted,\n    ValuesAreEqual, ValuesDiffer,\n    ValueIsArray, ValueIsListSatisfying,\n    expectListSatisfying,\n  } from 'javascript-interface-library'\n\n  import localforage from 'localforage'\n\n  import { html } from 'htm/preact'\n\n  import {\n    throwError, throwReadOnlyError,\n    ValueIsBoard, ValueIsSticker,\n    ValueIsName, ValueIsIdentifier, ValueIsGeometry, ValueIsError,\n    SNS_Id, SNS_Name, SNS_Identifier,\n    SNS_Ordinal, SNS_Text, SNS_Textline, SNS_Color, SNS_URL,\n    SNS_Geometry, SNS_FontStyle, SNS_Error,\n    SNS_Visual, SNS_Folder, SNS_Project, SNS_Board, SNS_Sticker,\n    newId, removeIdsFrom, SNS_Change,\n    TemplateOfBehavior,\n    SNS_BehaviorEntryGroup, SNS_BehaviorEntry,\n    groupedBehaviorEntryList,\n  } from 'shareable-note-stickers'\n\n  import { SNS_BoardView } from 'sns-boardview'\n\n  import hyperactiv from 'hyperactiv'\n  const { computed } = hyperactiv\n\n  import {\n    ProtoUX,\n    DragClickRecognizerFor,\n  } from 'protoux'\n\n/**** make some existing types indexable ****/\n\n  interface Indexable { [Key:string]:any }\n\n/**** define serializable types ****/\n\n  type serializableValue  = null | boolean | number | string |\n                            serializableObject | serializableArray\n  type serializableObject = { [Key:string]:serializableValue }\n  type serializableArray  = serializableValue[]\n  type Serializable       = serializableObject\n\n//------------------------------------------------------------------------------\n//--                         Properties and Defaults                          --\n//------------------------------------------------------------------------------\n\n  const noSelection = {}\n  const mixedValues = {}\n  type SNS_Placeholder = typeof noSelection & typeof mixedValues\n\n/**** common Properties ****/\n\n  type SNS_commonProperties = {\n    Id:               SNS_Id        | SNS_Placeholder,\n    Name:             SNS_Name      | SNS_Placeholder,\n    ForegroundColor:  SNS_Color     | SNS_Placeholder,\n    BackgroundColor:  SNS_Color     | SNS_Placeholder,\n    BackgroundTexture:SNS_URL       | SNS_Placeholder,\n    FontFamily:       SNS_Textline  | SNS_Placeholder,\n    FontSize:         SNS_Ordinal   | SNS_Placeholder,\n    FontWeight:       SNS_Ordinal   | SNS_Placeholder,\n    FontStyle:        SNS_FontStyle | SNS_Placeholder,\n    LineHeight:       SNS_Ordinal   | SNS_Placeholder,\n    activeScript:     SNS_Text      | SNS_Placeholder,\n    pendingScript:    SNS_Text      | SNS_Placeholder,\n    Script:           SNS_Text      | SNS_Placeholder,\n    editableValue:    SNS_Text      | SNS_Placeholder,\n    Error:            SNS_Error     | SNS_Placeholder,\n    ScriptError:      SNS_Error     | SNS_Placeholder,\n  }\n\n/**** common Defaults ****/\n\n  const SNS_commonDefaults = {\n    Id:               noSelection,\n    Name:             noSelection,\n    ForegroundColor:  noSelection,\n    BackgroundColor:  noSelection,\n    BackgroundTexture:noSelection,\n    FontFamily:       noSelection,\n    FontSize:         noSelection,\n    FontWeight:       noSelection,\n    FontStyle:        noSelection,\n    LineHeight:       noSelection,\n    activeScript:     noSelection,\n    pendingScript:    noSelection,\n    Script:           noSelection,\n    editableValue:    noSelection,\n    Error:            noSelection,\n    ScriptError:      noSelection,\n  }\n\n/**** Project Properties ****/\n\n  type SNS_ProjectProperties = SNS_commonProperties & {\n    SnapToGrid:boolean | SNS_Placeholder,\n    GridWidth: number  | SNS_Placeholder,\n    GridHeight:number  | SNS_Placeholder,\n  }\n\n/**** Project Defaults ****/\n\n  const SNS_ProjectDefaults = Object.assign({\n    SnapToGrid:noSelection,\n    GridWidth :noSelection,\n    GridHeight:noSelection,\n  }, SNS_commonDefaults)\n\n/**** Board Properties ****/\n\n  type SNS_BoardProperties = SNS_ProjectProperties & {\n    Index:number | SNS_Placeholder,\n  }\n\n/**** Board Defaults ****/\n\n  const SNS_BoardDefaults = Object.assign({\n    Index:noSelection,\n  }, SNS_ProjectDefaults)\n\n/**** Sticker Properties ****/\n\n  type SNS_StickerProperties = SNS_commonProperties & {\n    Lock:       boolean      | SNS_Placeholder,\n    Visibility: boolean      | SNS_Placeholder,\n    Geometry:   SNS_Geometry | SNS_Placeholder,\n    Index:      number       | SNS_Placeholder,\n    Enabling:   boolean      | SNS_Placeholder,\n  }\n\n/**** Sticker Defaults ****/\n\n  const SNS_StickerDefaults = Object.assign({\n    Lock:       noSelection,\n    Visibility: noSelection,\n    Geometry:   noSelection,\n    Index:      noSelection,\n    Enabling:   noSelection,\n  }, SNS_commonDefaults)\n\n//------------------------------------------------------------------------------\n//--                            Application State                             --\n//------------------------------------------------------------------------------\n\n  let PUX = new ProtoUX()   // has to be done here in order to access \"observed\"\n\n  const Application:SNS_Application = PUX.observed as SNS_Application\n\n  type SNS_Application = {\n    persistedProjectList: SNS_Name[],\n    normalizedProjectList:SNS_Name[],\n    selectedProjectName:  SNS_Name|undefined,\n    selectedProjectIndex: number|undefined,\n    ProjectName:          SNS_Name|undefined,    // to create or rename projects\n\n    Project:          SNS_Project|undefined,\n    ProjectProperties:SNS_ProjectProperties,\n\n    ProjectToPersist:    SNS_Project|undefined,\n    DelayTimer:          any,\n    DelayLimitTimer:     any,\n    PersistenceRequested:boolean,\n    PersistenceState:    'idle'|'running'|'failed',\n\n    Mode:     'edit'|'run',\n    ViewState:number,\n\n    BoardTree:                     SNS_Board[],\n    BoardTreeState:                number,\n    selectedBoards:                SNS_Board[],\n    expandedBoards:                SNS_Board[],\n    BoardSelectionMayBeShiftedUp:  boolean,\n    BoardSelectionMayBeShiftedDown:boolean,\n    BoardSelectionMayBeShiftedIn:  boolean,\n    BoardSelectionMayBeShiftedOut: boolean,\n\n    chosenBoard:                     SNS_Board|undefined,\n    BoardProperties:                 SNS_BoardProperties,\n    StickerList:                     SNS_Sticker[],           // sorted by index\n    StickerGeometries:               SNS_Geometry[],\n    selectedStickers:                SNS_Sticker[],\n    StickerSelectionMayBeShiftedUp:  boolean,\n    StickerSelectionMayBeShiftedDown:boolean,\n    StickerSelectionProperties:      Indexable,\n    StickerSelectionGeometries:      SNS_Geometry[],\n\n    OperationHistoryState:number,    // used to trigger mayUndo/Redo calculation\n    mayUndoOperation:     boolean,\n    mayRedoOperation:     boolean,\n\n    ShelfIsFilled:boolean,\n\n    VisitHistoryState:number,   // used to trigger mayVisitPrev/Next calculation\n    mayVisitPrevBoard:boolean,\n    mayVisitNextBoard:boolean,\n\n    InspectorIsOpen:    boolean,\n    InspectorPaneGroup: 'Project'|'Board'|'Stickers',\n    InspectorPaneChoice:'Browser'|'Configuration',\n    InspectorPaneIndex: number,\n    InspectorMessage:   SNS_Textline,\n\n    ValueEditorIsOpen:boolean,\n    ValueEditorMode:  'Project'|'Board'|'Stickers',\n\n    ScriptEditorIsOpen: boolean,\n    ScriptEditorMode:   'Project'|'Board'|'Stickers',\n    ScriptEditorMessage:SNS_Textline,\n\n    ConsoleIsOpen:boolean,\n    ConsoleValue: string,\n  } & Indexable\n\n/**** Application Defaults ****/\n\n  const ApplicationDefaults = {\n    persistedProjectList: [],\n    normalizedProjectList:[],\n    selectedProjectName:  undefined,\n    selectedProjectIndex: undefined,\n\n    Project:          undefined,\n    ProjectProperties:SNS_ProjectDefaults,\n\n    ProjectToPersist:    undefined,\n    DelayTimer:          undefined,\n    DelayLimitTimer:     undefined,\n    PersistenceRequested:false,\n    PersistenceState:    'idle',\n\n    Mode:     'run',\n    ViewState:0,\n\n    BoardTree:                     [],\n    BoardTreeState:                0,\n    selectedBoards:                [],\n    expandedBoards:                [],\n    BoardSelectionMayBeShiftedUp:  false,\n    BoardSelectionMayBeShiftedDown:false,\n    BoardSelectionMayBeShiftedIn:  false,\n    BoardSelectionMayBeShiftedOut: false,\n\n    chosenBoard:                     undefined,\n    BoardProperties:                 SNS_BoardDefaults,\n    StickerList:                     [],\n    StickerGeometries:               [],\n    selectedStickers:                [],\n    StickerSelectionMayBeShiftedUp:  false,\n    StickerSelectionMayBeShiftedDown:false,\n    StickerSelectionProperties:      SNS_StickerDefaults,\n    StickerSelectionGeometries:      [],\n\n    OperationHistoryState:0,\n    mayUndoOperation:     false,\n    mayRedoOperation:     false,\n\n    ShelfIsFilled:false,\n\n    VisitHistoryState:0,\n    mayVisitPrevBoard:false,\n    mayVisitNextBoard:false,\n\n    InspectorIsOpen:false,\n    InspectorPaneGroup: 'Project',\n    InspectorPaneChoice:'Browser',\n    InspectorPaneIndex: 0,\n    InspectorMessage:   '(no project)',\n\n    ValueEditorIsOpen:false,\n    ValueEditorMode:  'Project',\n\n    ScriptEditorIsOpen: false,\n    ScriptEditorMode:   'Project',\n    ScriptEditorMessage:'',\n\n    ConsoleIsOpen:false,\n    ConsoleValue: '',\n  }\n\n  Object.assign(Application,ApplicationDefaults)\n\n//----------------------------------------------------------------------------//\n//                          DesignerButton Handling                           //\n//----------------------------------------------------------------------------//\n\n  let DesignerButtonSlot:Indexable   = {}\n  let DesignerButtonOffset:Indexable = {}\n\n/**** moveDesignerButton ****/\n\n  function moveDesignerButton (x:number, y:number, dx:number, dy:number):void {\n    const DesignerButton = PUX.existingWidgetNamed('DesignerButton')\n      x = DesignerButtonOffset.x + dx\n      y = DesignerButtonOffset.y + dy\n    const MainScreen = PUX.existingScreenNamed('MainScreen')\n      const { width,height } = MainScreen.View.base.getBoundingClientRect()\n\n      x = Math.max(0,Math.min(x,width-32))\n      y = Math.max(0,Math.min(y,height-32))\n    PUX.updateWidget(DesignerButton, {\n      Style:`left:${x}px; top:${y}px`\n    })\n  }\n\n/**** DesignerButtonRecognizer ****/\n\n  const DesignerButtonRecognizer = DragClickRecognizerFor(DesignerButtonSlot, {\n    Threshold:     1,                                // > 0 to remain clickable!\n    onDragStarted: (x:number,y:number, dx:number,dy:number) => {\n      const DesignerButton = PUX.existingWidgetNamed('DesignerButton')\n      const { left,top }   = DesignerButton.View.base.getBoundingClientRect()\n      DesignerButtonOffset = { x:left,y:top }\n      moveDesignerButton(x,y, dx,dy)\n    },\n    onDragContinued:moveDesignerButton,\n    onDragFinished: moveDesignerButton,\n    onDragCancelled:moveDesignerButton,\n    onClicked:      showDesignerTools\n  })\n\n/**** showDesignerTools ****/\n\n  function showDesignerTools (x:number,y:number):void {\n    const DesignerButton = PUX.existingWidgetNamed('DesignerButton')\n    DesignerButton.View.base.style.visibility = 'hidden'\n\n    showDialogAround('Toolbox', x,y)\n\n    if (Application.InspectorIsOpen)    { PUX.openDialog('Inspector') }\n    if (Application.ValueEditorIsOpen)  { PUX.openDialog('ValueEditor') }\n    if (Application.ScriptEditorIsOpen) { PUX.openDialog('ScriptEditor') }\n  }\n\n/**** hideDesignerTools ****/\n\n  function hideDesignerTools ():void {\n    const DesignerButton = PUX.existingWidgetNamed('DesignerButton')\n    DesignerButton.View.base.style.visibility = (\n      Application.Project == null ? 'hidden' : 'visible'\n    )\n\n    PUX.closeDialog('Toolbox')\n    PUX.closeDialog('Inspector')\n    PUX.closeDialog('ValueEditor')\n    PUX.closeDialog('ScriptEditor')\n  }\n\n//------------------------------------------------------------------------------\n//--                                BoardView                                 --\n//------------------------------------------------------------------------------\n\n  function BoardView () {\n    return html`<${SNS_BoardView}\n      Mode=${Application.Mode}\n      Board=${Application.chosenBoard} StickerList=${Application.StickerList}\n      selectedStickers=${Application.selectedStickers}\n      onSelectionChange=${(selectedStickers:SNS_Sticker[]) => {\n        Application.selectedStickers = selectedStickers.slice()\n      }}\n      LassoMode=\"contain\"\n      onGeometryChange=${(StickerList:SNS_Sticker[],GeometryList:SNS_Geometry[]) => {\n        doChangeStickerGeometries(StickerList,GeometryList)\n      }}\n      SnapToGrid=${Application.BoardProperties?.SnapToGrid === true}\n       GridWidth=${IntegerFor(Application.BoardProperties?.GridWidth)  || 10}\n      GridHeight=${IntegerFor(Application.BoardProperties?.GridHeight) || 10}\n    />`\n  }\n\n/**** StickerCreateOptions ****/\n\n  const StickerCreateOptions = html`\n    <option value=\"\" disabled selected>please select</option>\n    ${groupedBehaviorEntryList().map(\n      (BehaviorEntryGroup:SNS_BehaviorEntryGroup) => html`\n        <optgroup label=\"${BehaviorEntryGroup.GroupLabel}\">\n          ${OptionsForBehaviors(BehaviorEntryGroup.BehaviorEntryList)}\n        </optgroup>\n      `\n    )}\n  `\n\n  function OptionsForBehaviors (BehaviorEntryList:SNS_BehaviorEntry[]):any {\n    return html`${BehaviorEntryList.map(\n      (BehaviorEntry:SNS_BehaviorEntry) => OptionForBehavior(BehaviorEntry)\n    )}`\n  }\n\n  function OptionForBehavior (BehaviorEntry:SNS_BehaviorEntry):any {\n    const { Name, Label, disabled } = BehaviorEntry\n    return html`<option value=${Name} disabled=${disabled}>${Label}</>`\n  }\n\n/**** AppletGeneratorOptions ****/\n\n  function AppletGeneratorOptions (StickerList:SNS_Sticker[]):any {\n    const noStickers = (StickerList.length === 0)\n\n    return html`\n      <option value=\"\" disabled selected>please select</option>\n      <optgroup label=\"from current Board\">\n        <option value=\"Board:standalone\">as standalone WebApp</option>\n        <option value=\"Board:embeddable\">as embeddable Element</option>\n      </optgroup>\n      <optgroup label=\"from current Board and successors\">\n        <option value=\"Boards:standalone\">as standalone WebApp</option>\n        <option value=\"Boards:embeddable\">as embeddable Element</option>\n      </optgroup>\n      <optgroup label=\"from selected Stickers\">\n        <option value=\"Stickers:standalone\" disabled=${noStickers}>as standalone WebApp</option>\n        <option value=\"Stickers:embeddable\" disabled=${noStickers}>as embeddable Element</option>\n      </optgroup>\n    `\n  }\n\n//------------------------------------------------------------------------------\n//--                           PUX (User Interface)                           --\n//------------------------------------------------------------------------------\n\n//let PUX = new ProtoUX()                                 // already done before\nwindow['PUX'] = PUX // just for testing\n    PUX.ImageFolder = './icons/'\n\n    PUX.Style = `  #PUX_0 { background-image:url(\"/images/BinaryTexture_white.jpg\") }\n  #PUX_1 { left:31px; top:30px; width:161px; height:90px; right:auto; bottom:auto }\n\n  #PUX_52 {\n    left:210px; top:30px; width:32px; height:32px; right:auto; bottom:auto; \n    border:solid 1px #333333; border-radius:15px; \n  }\n\n  #PUX_68 {\n    left:3px; top:2px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/pen.png\"); \n  }\n\n  #PUX_79 { left:421px; top:629px; width:280px; height:151px; right:auto; bottom:auto }\n\n  #PUX_80 {\n    left:0px; top:31px; width:auto; height:auto; right:0px; bottom:-1px; \n    border:solid 1px #000000; \n  }\n\n  #PUX_81 {\n    left:auto; top:21px; width:24px; height:24px; right:47px; bottom:auto; \n    background-image:url(\"/images/trash.png\"); \n  }\n\n  #PUX_29 { left:31px; top:130px; width:130px; height:251px; right:auto; bottom:auto }\n\n  #PUX_3 {\n    left:8px; top:158px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/rotate-ccw.png\"); \n  }\n\n  #PUX_4 {\n    left:37px; top:158px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/rotate-cw.png\"); \n  }\n\n  #PUX_5 {\n    left:8px; top:68px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/plus.png\"); \n  }\n\n  #PUX_6 {\n    left:37px; top:68px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/clone.png\"); \n  }\n\n  #PUX_7 {\n    left:8px; top:127px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/scissors.png\"); \n  }\n\n  #PUX_8 {\n    left:68px; top:127px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/clipboard-arrow-down.png\"); \n  }\n\n  #PUX_9 {\n    left:37px; top:127px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/image133.png\"); \n  }\n\n  #PUX_34 {\n    left:98px; top:127px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/minus.png\"); \n  }\n\n  #PUX_10 {\n    left:68px; top:68px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/image95.png\"); \n  }\n\n  #PUX_11 {\n    left:68px; top:98px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/arrow-sm-down.png\"); \n  }\n\n  #PUX_12 {\n    left:37px; top:98px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/arrow-sm-up.png\"); \n  }\n\n  #PUX_22 {\n    left:8px; top:98px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/arrow-sm-up.png\"); \n  }\n\n  #PUX_25 {\n    left:98px; top:98px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/arrow-sm-down.png\"); \n  }\n\n  #PUX_13 {\n    left:8px; top:37px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/draw-square.png\"); \n  }\n\n  #PUX_14 {\n    left:98px; top:158px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/arrow-down-to-bracket.png\"); \n  }\n\n  #PUX_15 {\n    left:68px; top:158px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/arrow-up-from-bracket.png\"); \n  }\n\n  #PUX_105 {\n    left:68px; top:158px; width:24px; height:24px; right:auto; bottom:auto; \n    border-radius:0px; \n  }\n\n  #PUX_16 {\n    left:37px; top:37px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/pen-ruler.png\"); \n  }\n\n  #PUX_17 {\n    left:37px; top:188px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/chevron-right.png\"); \n  }\n\n  #PUX_18 {\n    left:8px; top:188px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/chevron-left.png\"); \n  }\n\n  #PUX_19 {\n    left:98px; top:188px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/search.png\"); \n  }\n\n  #PUX_20 {\n    left:68px; top:37px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/message-square-chat.png\"); \n  }\n\n  #PUX_21 {\n    left:68px; top:188px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/house-line.png\"); \n  }\n\n  #PUX_30 {\n    left:98px; top:217px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/printer.png\"); \n  }\n\n  #PUX_33 {\n    left:98px; top:37px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/cloud-wired.png\"); \n  }\n\n  #PUX_32 {\n    left:8px; top:217px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/terminal.png\"); \n  }\n\n  #PUX_31 {\n    left:68px; top:217px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/clapperboard-play.png\"); \n  }\n\n  #PUX_35 {\n    left:98px; top:68px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/square-code.png\"); \n  }\n\n  #PUX_57 { left:421px; top:130px; width:280px; height:220px; right:auto; bottom:auto }\n\n  #PUX_53 {\n    left:auto; top:34px; width:24px; height:24px; right:5px; bottom:auto; \n    background-image:url(\"/images/xmark.png\"); \n  }\n\n  #PUX_54 {\n    left:auto; top:34px; width:24px; height:24px; right:36px; bottom:auto; \n    background-image:url(\"/images/check.png\"); \n  }\n\n  #PUX_55 {\n    left:5px; top:60px; width:auto; height:auto; right:5px; bottom:30px; \n    border:solid 1px #000000; \n  }\n\n  #PUX_56 { left:5px; top:auto; width:auto; height:29px; right:40px; bottom:1px }\n\n  #PUX_58 {\n    left:auto; top:auto; width:24px; height:24px; right:7px; bottom:3px; \n    background-image:url(\"/images/triangle-exclamation.png\"); \n  }\n\n  #PUX_59 {\n    left:5px; top:34px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/book-open.png\"); \n  }\n\n  #PUX_60 {\n    left:64px; top:34px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/square.png\"); \n  }\n\n  #PUX_61 {\n    left:35px; top:34px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/file.png\"); \n  }\n\n  #PUX_43 { left:181px; top:130px; width:221px; height:251px; right:auto; bottom:auto }\n\n  #PUX_36 {\n    left:8px; top:37px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/book-open.png\"); \n  }\n\n  #PUX_37 {\n    left:67px; top:37px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/square.png\"); \n  }\n\n  #PUX_38 {\n    left:37px; top:37px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/file.png\"); \n  }\n\n  #PUX_39 {\n    left:138px; top:37px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/sliders.png\"); \n  }\n\n  #PUX_40 {\n    left:108px; top:37px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/list.png\"); \n  }\n\n  #PUX_41 { left:0px; top:60px; width:auto; height:16px; right:0px; bottom:auto }\n\n  #PUX_42 {\n    left:167px; top:37px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/square-code.png\"); \n  }\n\n  #PUX_92 {\n    left:5px; top:auto; width:auto; height:29px; right:5px; bottom:3px; \n    padding:6px 0px 0px 0px;\n  }\n\n  #PUX_50 { left:0px; top:69px; width:auto; height:auto; right:0px; bottom:31px }\n  #PUX_69 { left:421px; top:380px; width:280px; height:220px; right:auto; bottom:auto }\n\n  #PUX_88 {\n    left:5px; top:59px; width:auto; height:auto; right:5px; bottom:5px; \n    border:solid 1px #000000; \n  }\n\n  #PUX_70 {\n    left:5px; top:33px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/book-open.png\"); \n  }\n\n  #PUX_71 {\n    left:64px; top:33px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/square.png\"); \n  }\n\n  #PUX_72 {\n    left:35px; top:33px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/file.png\"); \n  }\n\n  #PUX_104 { left:31px; top:420px; width:280px; height:336px; right:auto; bottom:auto }\n  #PUX_96 { left:5px; top:29px; width:147px; height:29px; right:auto; bottom:auto }\n\n  #PUX_97 {\n    left:5px; top:59px; width:auto; height:auto; right:5px; bottom:156px; \n    background-color:#eeeeee; \n    border:solid 1px #888888; border-radius:0px; \n  }\n\n  #PUX_93 { left:5px; top:auto; width:90px; height:29px; right:auto; bottom:117px }\n  #PUX_98 { left:auto; top:auto; width:90px; height:29px; right:5px; bottom:117px }\n  #PUX_100 { left:5px; top:auto; width:auto; height:29px; right:5px; bottom:48px }\n  #PUX_94 { left:5px; top:auto; width:147px; height:29px; right:auto; bottom:77px }\n  #PUX_95 { left:5px; top:auto; width:90px; height:29px; right:auto; bottom:8px }\n  #PUX_99 { left:auto; top:auto; width:90px; height:29px; right:5px; bottom:8px }\n  #PUX_106 { background-image:url(\"/images/BinaryTexture_white_768x1024.jpg\") }\n\n  #PUX_109 {\n    left:20px; top:19px; width:242px; height:610px; right:auto; bottom:auto; \n    border:dotted 1px #000000; \n  }\n\n  #PUX_134 { left:6px; top:0px; width:221px; height:29px; right:auto; bottom:auto }\n  #PUX_135 { left:6px; top:31px; width:71px; height:29px; right:auto; bottom:auto }\n  #PUX_136 { left:6px; top:61px; width:71px; height:29px; right:auto; bottom:auto }\n  #PUX_227 { left:95px; top:31px; width:auto; height:29px; right:7px; bottom:auto }\n  #PUX_228 { left:95px; top:61px; width:auto; height:29px; right:7px; bottom:auto }\n  #PUX_229 { left:auto; top:101px; width:21px; height:21px; right:6px; bottom:auto }\n  #PUX_137 { left:6px; top:171px; width:90px; height:29px; right:auto; bottom:auto }\n  #PUX_138 { left:6px; top:201px; width:71px; height:29px; right:auto; bottom:auto }\n  #PUX_230 { left:95px; top:201px; width:auto; height:29px; right:7px; bottom:auto }\n  #PUX_139 { left:6px; top:230px; width:101px; height:29px; right:auto; bottom:auto }\n  #PUX_231 { left:auto; top:230px; width:53px; height:29px; right:7px; bottom:auto }\n  #PUX_140 { left:6px; top:261px; width:71px; height:29px; right:auto; bottom:auto }\n  #PUX_232 { left:auto; top:266px; width:21px; height:21px; right:6px; bottom:auto }\n  #PUX_141 { left:6px; top:291px; width:71px; height:29px; right:auto; bottom:auto }\n  #PUX_233 { left:auto; top:296px; width:21px; height:21px; right:6px; bottom:auto }\n  #PUX_142 { left:6px; top:320px; width:71px; height:29px; right:auto; bottom:auto }\n  #PUX_234 { left:auto; top:320px; width:40px; height:29px; right:6px; bottom:auto }\n  #PUX_143 { left:6px; top:351px; width:121px; height:29px; right:auto; bottom:auto }\n  #PUX_235 { left:auto; top:351px; width:53px; height:29px; right:7px; bottom:auto }\n  #PUX_144 { left:6px; top:391px; width:90px; height:29px; right:auto; bottom:auto }\n  #PUX_145 { left:6px; top:420px; width:71px; height:29px; right:auto; bottom:auto }\n  #PUX_236 { left:auto; top:420px; width:40px; height:29px; right:6px; bottom:auto }\n  #PUX_146 { left:6px; top:451px; width:71px; height:29px; right:auto; bottom:auto }\n  #PUX_148 { left:6px; top:130px; width:101px; height:29px; right:auto; bottom:auto }\n  #PUX_243 { left:auto; top:130px; width:52px; height:29px; right:78px; bottom:auto }\n  #PUX_241 { left:auto; top:130px; width:53px; height:29px; right:7px; bottom:auto }\n\n  #PUX_242 {\n    left:auto; top:130px; width:21px; height:29px; right:59px; bottom:auto; \n    text-align:center; \n  }\n\n  #PUX_147 { left:6px; top:101px; width:101px; height:29px; right:auto; bottom:auto }\n  #PUX_237 { left:95px; top:451px; width:auto; height:29px; right:7px; bottom:auto }\n  #PUX_149 { left:6px; top:491px; width:71px; height:29px; right:auto; bottom:auto }\n\n  #PUX_240 {\n    left:auto; top:491px; width:24px; height:24px; right:4px; bottom:auto; \n    background-image:url(\"/images/image146.png\"); \n  }\n\n  #PUX_150 {\n    left:6px; top:520px; width:auto; height:auto; right:6px; bottom:9px; \n    border:solid 1px #000000; \n  }\n\n  #PUX_110 {\n    left:271px; top:19px; width:242px; height:610px; right:auto; bottom:auto; \n    border:dotted 1px #000000; \n  }\n\n  #PUX_151 { left:5px; top:0px; width:221px; height:29px; right:auto; bottom:auto }\n  #PUX_152 { left:5px; top:31px; width:71px; height:29px; right:auto; bottom:auto }\n  #PUX_153 { left:5px; top:61px; width:71px; height:29px; right:auto; bottom:auto }\n  #PUX_216 { left:95px; top:31px; width:auto; height:29px; right:7px; bottom:auto }\n  #PUX_217 { left:95px; top:61px; width:auto; height:29px; right:7px; bottom:auto }\n  #PUX_218 { left:auto; top:101px; width:21px; height:21px; right:7px; bottom:auto }\n  #PUX_154 { left:5px; top:171px; width:90px; height:29px; right:auto; bottom:auto }\n  #PUX_155 { left:5px; top:201px; width:71px; height:29px; right:auto; bottom:auto }\n  #PUX_219 { left:95px; top:201px; width:auto; height:29px; right:7px; bottom:auto }\n  #PUX_156 { left:5px; top:230px; width:101px; height:29px; right:auto; bottom:auto }\n  #PUX_220 { left:auto; top:230px; width:53px; height:29px; right:7px; bottom:auto }\n  #PUX_157 { left:5px; top:261px; width:71px; height:29px; right:auto; bottom:auto }\n  #PUX_221 { left:auto; top:266px; width:21px; height:21px; right:7px; bottom:auto }\n  #PUX_158 { left:5px; top:291px; width:71px; height:29px; right:auto; bottom:auto }\n  #PUX_222 { left:auto; top:296px; width:21px; height:21px; right:7px; bottom:auto }\n  #PUX_159 { left:5px; top:320px; width:71px; height:29px; right:auto; bottom:auto }\n  #PUX_223 { left:auto; top:320px; width:40px; height:29px; right:7px; bottom:auto }\n  #PUX_160 { left:5px; top:351px; width:121px; height:29px; right:auto; bottom:auto }\n  #PUX_224 { left:auto; top:351px; width:53px; height:29px; right:7px; bottom:auto }\n  #PUX_161 { left:5px; top:391px; width:90px; height:29px; right:auto; bottom:auto }\n  #PUX_162 { left:5px; top:420px; width:71px; height:29px; right:auto; bottom:auto }\n  #PUX_225 { left:auto; top:420px; width:40px; height:29px; right:7px; bottom:auto }\n  #PUX_163 { left:5px; top:451px; width:71px; height:29px; right:auto; bottom:auto }\n  #PUX_164 { left:5px; top:130px; width:101px; height:29px; right:auto; bottom:auto }\n  #PUX_244 { left:auto; top:130px; width:52px; height:29px; right:79px; bottom:auto }\n  #PUX_245 { left:auto; top:130px; width:53px; height:29px; right:7px; bottom:auto }\n\n  #PUX_246 {\n    left:auto; top:130px; width:21px; height:29px; right:60px; bottom:auto; \n    text-align:center; \n  }\n\n  #PUX_165 { left:5px; top:101px; width:101px; height:29px; right:auto; bottom:auto }\n  #PUX_226 { left:95px; top:451px; width:auto; height:29px; right:7px; bottom:auto }\n  #PUX_166 { left:5px; top:491px; width:71px; height:29px; right:auto; bottom:auto }\n\n  #PUX_239 {\n    left:auto; top:491px; width:24px; height:26px; right:6px; bottom:auto; \n    background-image:url(\"/images/image146.png\"); \n  }\n\n  #PUX_167 {\n    left:5px; top:520px; width:auto; height:auto; right:7px; bottom:9px; \n    border:solid 1px #000000; \n  }\n\n  #PUX_111 {\n    left:520px; top:19px; width:242px; height:791px; right:auto; bottom:auto; \n    border:dotted 1px #000000; \n  }\n\n  #PUX_168 { left:5px; top:0px; width:221px; height:29px; right:auto; bottom:auto }\n  #PUX_169 { left:5px; top:31px; width:71px; height:29px; right:auto; bottom:auto }\n  #PUX_170 { left:5px; top:61px; width:71px; height:29px; right:auto; bottom:auto }\n  #PUX_190 { left:95px; top:31px; width:auto; height:29px; right:7px; bottom:auto }\n  #PUX_191 { left:95px; top:61px; width:auto; height:29px; right:7px; bottom:auto }\n  #PUX_171 { left:5px; top:190px; width:71px; height:29px; right:auto; bottom:auto }\n  #PUX_172 { left:5px; top:221px; width:71px; height:29px; right:auto; bottom:auto }\n  #PUX_192 { left:auto; top:221px; width:52px; height:29px; right:77px; bottom:auto }\n  #PUX_193 { left:auto; top:221px; width:53px; height:29px; right:7px; bottom:auto }\n\n  #PUX_194 {\n    left:auto; top:221px; width:21px; height:29px; right:58px; bottom:auto; \n    text-align:center; \n  }\n\n  #PUX_195 { left:auto; top:190px; width:52px; height:31px; right:77px; bottom:auto }\n  #PUX_196 { left:auto; top:190px; width:53px; height:29px; right:7px; bottom:auto }\n\n  #PUX_197 {\n    left:auto; top:190px; width:21px; height:29px; right:58px; bottom:auto; \n    text-align:center; \n  }\n\n  #PUX_173 { left:5px; top:251px; width:71px; height:29px; right:auto; bottom:auto }\n\n  #PUX_198 {\n    left:auto; top:283px; width:24px; height:24px; right:32px; bottom:auto; \n    background-image:url(\"/images/arrow-sm-down.png\"); \n  }\n\n  #PUX_199 {\n    left:auto; top:283px; width:24px; height:24px; right:58px; bottom:auto; \n    background-image:url(\"/images/arrow-sm-up.png\"); \n  }\n\n  #PUX_200 {\n    left:auto; top:285px; width:21px; height:24px; right:84px; bottom:auto; \n    background-color:rgba(255, 255, 255, 0); \n    border-style:solid; border-width:2px 0px 0px 0px; border-color:#000000; \n  }\n\n  #PUX_201 {\n    left:auto; top:285px; width:24px; height:24px; right:82px; bottom:auto; \n    background-image:url(\"/images/arrow-sm-up.png\"); \n  }\n\n  #PUX_202 {\n    left:auto; top:280px; width:21px; height:24px; right:8px; bottom:auto; \n    background-color:rgba(255, 255, 255, 0); \n    border-style:solid; border-width:0px 0px 2px 0px; border-color:#000000; \n  }\n\n  #PUX_203 {\n    left:auto; top:280px; width:24px; height:24px; right:8px; bottom:auto; \n    background-image:url(\"/images/arrow-sm-down.png\"); \n  }\n\n  #PUX_204 { left:auto; top:251px; width:53px; height:29px; right:7px; bottom:auto }\n  #PUX_174 { left:5px; top:130px; width:90px; height:29px; right:auto; bottom:auto }\n  #PUX_205 { left:auto; top:130px; width:21px; height:21px; right:5px; bottom:auto }\n  #PUX_175 { left:5px; top:101px; width:221px; height:29px; right:auto; bottom:auto }\n  #PUX_176 { left:5px; top:311px; width:90px; height:29px; right:auto; bottom:auto }\n  #PUX_177 { left:5px; top:341px; width:71px; height:29px; right:auto; bottom:auto }\n  #PUX_206 { left:95px; top:341px; width:auto; height:29px; right:7px; bottom:auto }\n  #PUX_178 { left:5px; top:370px; width:101px; height:29px; right:auto; bottom:auto }\n  #PUX_207 { left:auto; top:370px; width:53px; height:29px; right:7px; bottom:auto }\n  #PUX_179 { left:5px; top:401px; width:71px; height:29px; right:auto; bottom:auto }\n  #PUX_208 { left:auto; top:406px; width:21px; height:21px; right:5px; bottom:auto }\n  #PUX_180 { left:5px; top:430px; width:71px; height:29px; right:auto; bottom:auto }\n  #PUX_209 { left:auto; top:436px; width:21px; height:21px; right:5px; bottom:auto }\n  #PUX_181 { left:5px; top:460px; width:81px; height:29px; right:auto; bottom:auto }\n  #PUX_210 { left:auto; top:460px; width:40px; height:29px; right:7px; bottom:auto }\n  #PUX_182 { left:5px; top:491px; width:121px; height:29px; right:auto; bottom:auto }\n  #PUX_211 { left:auto; top:491px; width:53px; height:29px; right:7px; bottom:auto }\n  #PUX_183 { left:5px; top:531px; width:90px; height:29px; right:auto; bottom:auto }\n  #PUX_184 { left:5px; top:560px; width:71px; height:29px; right:auto; bottom:auto }\n  #PUX_212 { left:auto; top:560px; width:40px; height:29px; right:7px; bottom:auto }\n  #PUX_185 { left:5px; top:591px; width:71px; height:29px; right:auto; bottom:auto }\n  #PUX_213 { left:95px; top:591px; width:auto; height:29px; right:7px; bottom:auto }\n  #PUX_186 { left:5px; top:161px; width:90px; height:29px; right:auto; bottom:auto }\n  #PUX_214 { left:auto; top:161px; width:21px; height:21px; right:5px; bottom:auto }\n  #PUX_187 { left:5px; top:631px; width:90px; height:29px; right:auto; bottom:auto }\n  #PUX_215 { left:auto; top:631px; width:21px; height:21px; right:5px; bottom:auto }\n  #PUX_188 { left:5px; top:671px; width:71px; height:29px; right:auto; bottom:auto }\n\n  #PUX_238 {\n    left:auto; top:671px; width:24px; height:26px; right:5px; bottom:auto; \n    background-image:url(\"/images/image146.png\"); \n  }\n\n  #PUX_189 {\n    left:5px; top:700px; width:auto; height:auto; right:7px; bottom:10px; \n    border:solid 1px #000000; \n  }\n\n  #PUX_107 {\n    left:20px; top:700px; width:242px; height:270px; right:auto; bottom:auto; \n    border:dotted 1px #000000; \n  }\n\n  #PUX_112 { left:6px; top:0px; width:225px; height:29px; right:auto; bottom:auto }\n\n  #PUX_120 {\n    left:6px; top:56px; width:auto; height:auto; right:6px; bottom:43px; \n    background-color:#eeeeee; \n    border:solid 1px #888888; border-radius:0px; \n  }\n\n  #PUX_121 { left:6px; top:auto; width:auto; height:29px; right:6px; bottom:6px }\n\n  #PUX_119 {\n    left:auto; top:24px; width:24px; height:24px; right:7px; bottom:auto; \n    background-image:url(\"/images/minus.png\"); \n  }\n\n  #PUX_113 {\n    left:0px; top:27px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/plus.png\"); \n  }\n\n  #PUX_114 {\n    left:30px; top:27px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/clone.png\"); \n  }\n\n  #PUX_115 {\n    left:156px; top:24px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/arrow-sm-down.png\"); \n  }\n\n  #PUX_116 {\n    left:130px; top:24px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/arrow-sm-up.png\"); \n  }\n\n  #PUX_117 {\n    left:71px; top:24px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/image21.png\"); \n  }\n\n  #PUX_118 {\n    left:95px; top:24px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/image23.png\"); \n  }\n\n  #PUX_108 {\n    left:271px; top:700px; width:242px; height:270px; right:auto; bottom:auto; \n    border:dotted 1px #000000; \n  }\n\n  #PUX_122 { left:5px; top:0px; width:225px; height:29px; right:auto; bottom:auto }\n\n  #PUX_132 {\n    left:5px; top:56px; width:auto; height:auto; right:7px; bottom:43px; \n    background-color:#eeeeee; \n    border:solid 1px #888888; border-radius:0px; \n  }\n\n  #PUX_133 { left:5px; top:auto; width:auto; height:29px; right:7px; bottom:6px }\n\n  #PUX_131 {\n    left:auto; top:24px; width:24px; height:24px; right:9px; bottom:auto; \n    background-image:url(\"/images/minus.png\"); \n  }\n\n  #PUX_123 {\n    left:0px; top:27px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/plus.png\"); \n  }\n\n  #PUX_124 {\n    left:29px; top:27px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/clone.png\"); \n  }\n\n  #PUX_125 {\n    left:129px; top:26px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/arrow-sm-down.png\"); \n  }\n\n  #PUX_126 {\n    left:100px; top:26px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/arrow-sm-up.png\"); \n  }\n\n  #PUX_127 {\n    left:71px; top:26px; width:21px; height:24px; right:auto; bottom:auto; \n    background-color:rgba(255, 255, 255, 0); \n    border-style:solid; border-width:2px 0px 0px 0px; border-color:#000000; \n  }\n\n  #PUX_128 {\n    left:69px; top:26px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/arrow-sm-up.png\"); \n  }\n\n  #PUX_129 {\n    left:161px; top:26px; width:21px; height:24px; right:auto; bottom:auto; \n    background-color:rgba(255, 255, 255, 0); \n    border-style:solid; border-width:0px 0px 2px 0px; border-color:#000000; \n  }\n\n  #PUX_130 {\n    left:159px; top:26px; width:24px; height:24px; right:auto; bottom:auto; \n    background-image:url(\"/images/arrow-sm-down.png\"); \n  }\n\n`\n    PUX.ScreenSet = {\n      'MainScreen': {\n        Name:'MainScreen', Id:'PUX_0',\n        Width:768, Height:1024,\n        packedGeometry:{\"x\":31,\"y\":30,\"Width\":669,\"Height\":749},\n        WidgetList:[\n          {\"Type\":\"Placeholder\",\"Name\":\"BoardView\",\"Classes\":\"Placeholder empty Container\",\"x\":31,\"Width\":161,\"y\":30,\"Height\":90,\"Id\":\"PUX_1\"},\n          {\"Type\":\"Container\",\"Name\":\"DesignerButton\",\"Classes\":\"Container\",\"x\":210,\"Width\":32,\"y\":30,\"Height\":32,\"Id\":\"PUX_52\", WidgetList:[\n            {\"Type\":\"Icon\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/pen.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_68\"},\n          ]},\n          {\"Type\":\"ResizableDialog\",\"Name\":\"Console\",\"Classes\":\"ResizableDialog Container\",\"x\":421,\"Width\":280,\"y\":629,\"Height\":151,\"Id\":\"PUX_79\", WidgetList:[\n            {\"Type\":\"TextInput\",\"Name\":\"ConsoleView\",\"Classes\":\"TextInput no-resize\",\"Anchoring\":\"c\",\"Value\":\"(ready for operation)\",\"Id\":\"PUX_80\"},\n            {\"Type\":\"Icon\",\"Name\":\"ConsoleClearButton\",\"Classes\":\"Icon\",\"Anchoring\":\"ne\",\"Value\":\"url(\\\"/images/trash.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_81\"},\n          ]},\n          {\"Type\":\"Dialog\",\"Name\":\"Toolbox\",\"Classes\":\"Dialog Container \",\"x\":31,\"Width\":130,\"y\":130,\"Height\":251,\"Id\":\"PUX_29\", WidgetList:[\n            {\"Type\":\"Icon\",\"Name\":\"UndoButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/rotate-ccw.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_3\"},\n            {\"Type\":\"Icon\",\"Name\":\"RedoButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/rotate-cw.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_4\"},\n            {\"Type\":\"PseudoDropDown\",\"Name\":\"StickerCreateButton\",\"Classes\":\"PseudoDropDown\",\"Value\":\"url(\\\"/images/plus.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_5\"},\n            {\"Type\":\"Icon\",\"Name\":\"StickerDuplicateButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/clone.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_6\"},\n            {\"Type\":\"Icon\",\"Name\":\"StickerCutButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/scissors.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_7\"},\n            {\"Type\":\"PseudoDropDown\",\"Name\":\"StickerPasteButton\",\"Classes\":\"PseudoDropDown\",\"Value\":\"url(\\\"/images/clipboard-arrow-down.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_8\"},\n            {\"Type\":\"Icon\",\"Name\":\"StickerCopyButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/image133.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_9\"},\n            {\"Type\":\"Icon\",\"Name\":\"StickerDeleteButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/minus.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_34\"},\n            {\"Type\":\"Icon\",\"Name\":\"StickerConfigureButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/image95.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_10\"},\n            {\"Type\":\"Icon\",\"Name\":\"StickerShiftDownButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/arrow-sm-down.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_11\"},\n            {\"Type\":\"Icon\",\"Name\":\"StickerShiftUpButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/arrow-sm-up.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_12\"},\n            {\"Type\":\"Icon\",\"Name\":\"StickerShiftToTopButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/arrow-sm-up.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_22\"},\n            {\"Type\":\"Icon\",\"Name\":\"StickerShiftToBottomButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/arrow-sm-down.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_25\"},\n            {\"Type\":\"Icon\",\"Name\":\"ModeButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/draw-square.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_13\"},\n            {\"Type\":\"PseudoDropDown\",\"Name\":\"ExportButton\",\"Classes\":\"PseudoDropDown\",\"Value\":\"url(\\\"/images/arrow-down-to-bracket.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_14\"},\n            {\"Type\":\"Icon\",\"Name\":\"ImportButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/arrow-up-from-bracket.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_15\"},\n            {\"Type\":\"FileInput\",\"Name\":\"FileInput\",\"Classes\":\"FileInput\",\"Placeholder\":\"\",\"Id\":\"PUX_105\"},\n            {\"Type\":\"Icon\",\"Name\":\"InspectorButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/pen-ruler.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_16\"},\n            {\"Type\":\"Icon\",\"Name\":\"VisitNextButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/chevron-right.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_17\"},\n            {\"Type\":\"Icon\",\"Name\":\"VisitPrevButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/chevron-left.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_18\"},\n            {\"Type\":\"Icon\",\"Name\":\"SearchButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/search.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_19\"},\n            {\"Type\":\"Icon\",\"Name\":\"ChatButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/message-square-chat.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_20\"},\n            {\"Type\":\"Icon\",\"Name\":\"VisitHomeButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/house-line.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_21\"},\n            {\"Type\":\"Icon\",\"Name\":\"BoardPrintButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/printer.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_30\"},\n            {\"Type\":\"Icon\",\"Name\":\"ProjectBrowserButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/cloud-wired.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_33\"},\n            {\"Type\":\"Icon\",\"Name\":\"ConsoleButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/terminal.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_32\"},\n            {\"Type\":\"PseudoDropDown\",\"Name\":\"AppletGeneratorButton\",\"Classes\":\"PseudoDropDown\",\"Value\":\"url(\\\"/images/clapperboard-play.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_31\"},\n            {\"Type\":\"Icon\",\"Name\":\"StickerScriptButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/square-code.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_35\"},\n          ]},\n          {\"Type\":\"ResizableDialog\",\"Name\":\"ScriptEditor\",\"Classes\":\"ResizableDialog Container\",\"x\":421,\"Width\":280,\"y\":130,\"Height\":220,\"Id\":\"PUX_57\", WidgetList:[\n            {\"Type\":\"Icon\",\"Name\":\"WithdrawButton\",\"Classes\":\"Icon\",\"Anchoring\":\"ne\",\"Value\":\"url(\\\"/images/xmark.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_53\"},\n            {\"Type\":\"Icon\",\"Name\":\"ApplyButton\",\"Classes\":\"Icon\",\"Anchoring\":\"ne\",\"Value\":\"url(\\\"/images/check.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_54\"},\n            {\"Type\":\"TextInput\",\"Name\":\"ScriptInput\",\"Classes\":\"TextInput no-resize\",\"Anchoring\":\"c\",\"Placeholder\":\"Enter Script\",\"Value\":\"\",\"Id\":\"PUX_55\"},\n            {\"Type\":\"TextView\",\"Name\":\"MessageView\",\"Classes\":\"TextView\",\"Anchoring\":\"s\",\"Value\":\"\",\"Id\":\"PUX_56\"},\n            {\"Type\":\"Icon\",\"Name\":\"MessageViewButton\",\"Classes\":\"Icon\",\"Anchoring\":\"se\",\"Value\":\"url(\\\"/images/triangle-exclamation.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_58\"},\n            {\"Type\":\"Icon\",\"Name\":\"ProjectModeButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/book-open.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_59\"},\n            {\"Type\":\"Icon\",\"Name\":\"StickerModeButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/square.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_60\"},\n            {\"Type\":\"Icon\",\"Name\":\"BoardModeButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/file.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_61\"},\n          ]},\n          {\"Type\":\"ResizableDialog\",\"Name\":\"Inspector\",\"Classes\":\"ResizableDialog Container\",\"x\":181,\"Width\":221,\"y\":130,\"Height\":251,\"Id\":\"PUX_43\", WidgetList:[\n            {\"Type\":\"Icon\",\"Name\":\"ProjectModeButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/book-open.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_36\"},\n            {\"Type\":\"Icon\",\"Name\":\"StickerModeButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/square.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_37\"},\n            {\"Type\":\"Icon\",\"Name\":\"BoardModeButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/file.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_38\"},\n            {\"Type\":\"Icon\",\"Name\":\"ConfigurationPaneButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/sliders.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_39\"},\n            {\"Type\":\"Icon\",\"Name\":\"BrowserPaneButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/list.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_40\"},\n            {\"Type\":\"horizontalSeparator\",\"Classes\":\"horizontalSeparator\",\"Anchoring\":\"n\",\"Id\":\"PUX_41\"},\n            {\"Type\":\"Icon\",\"Name\":\"ScriptEditorButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/square-code.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_42\"},\n            {\"Type\":\"Text\",\"Name\":\"MessageView\",\"Classes\":\"Text\",\"Anchoring\":\"s\",\"Value\":\"(no error found)\",\"Id\":\"PUX_92\"},\n            {\"Type\":\"Deck\",\"Name\":\"Deck\",\"Classes\":\"Deck empty Container\",\"Anchoring\":\"c\",\"Id\":\"PUX_50\"},\n          ]},\n          {\"Type\":\"ResizableDialog\",\"Name\":\"ValueEditor\",\"Classes\":\"ResizableDialog Container\",\"x\":421,\"Width\":280,\"y\":380,\"Height\":220,\"Id\":\"PUX_69\", WidgetList:[\n            {\"Type\":\"TextInput\",\"Name\":\"ValueInput\",\"Classes\":\"TextInput no-resize\",\"Anchoring\":\"c\",\"Placeholder\":\"Enter Value\",\"Value\":\"\",\"Id\":\"PUX_88\"},\n            {\"Type\":\"Icon\",\"Name\":\"ProjectModeButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/book-open.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_70\"},\n            {\"Type\":\"Icon\",\"Name\":\"StickerModeButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/square.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_71\"},\n            {\"Type\":\"Icon\",\"Name\":\"BoardModeButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/file.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_72\"},\n          ]},\n          {\"Type\":\"ResizableDialog\",\"Name\":\"ProjectBrowser\",\"Classes\":\"ResizableDialog Container\",\"x\":31,\"Width\":280,\"y\":420,\"Height\":336,\"Id\":\"PUX_104\", WidgetList:[\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Recent Projects:\",\"Id\":\"PUX_96\"},\n            {\"Type\":\"FlatListView\",\"Name\":\"ProjectListView\",\"Classes\":\"FlatListView\",\"Anchoring\":\"c\",\"Id\":\"PUX_97\"},\n            {\"Type\":\"Button\",\"Name\":\"ProjectOpenButton\",\"Classes\":\"vertically-centered Button\",\"Anchoring\":\"sw\",\"Value\":\"Open\",\"Id\":\"PUX_93\"},\n            {\"Type\":\"Button\",\"Name\":\"ProjectPurgeButton\",\"Classes\":\"vertically-centered Button\",\"Anchoring\":\"se\",\"Value\":\"Purge\",\"Id\":\"PUX_98\"},\n            {\"Type\":\"TextlineInput\",\"Name\":\"ProjectNameInput\",\"Classes\":\"TextlineInput\",\"Anchoring\":\"s\",\"Placeholder\":\"Enter unique Project Name\",\"Value\":\"\",\"Id\":\"PUX_100\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Anchoring\":\"sw\",\"Value\":\"Project Name:\",\"Id\":\"PUX_94\"},\n            {\"Type\":\"Button\",\"Name\":\"ProjectCreateButton\",\"Classes\":\"vertically-centered Button\",\"Anchoring\":\"sw\",\"Value\":\"New\",\"Id\":\"PUX_95\"},\n            {\"Type\":\"Button\",\"Name\":\"ProjectRenameButton\",\"Classes\":\"vertically-centered Button\",\"Anchoring\":\"se\",\"Value\":\"Rename\",\"Id\":\"PUX_99\"},\n          ]},\n        ],\n      },\n      'Stuff Screen': {\n        Name:'Stuff Screen', Id:'PUX_106',\n        Width:768, Height:1024,\n        packedGeometry:{\"x\":20,\"y\":19,\"Width\":741,\"Height\":950},\n        WidgetList:[\n          {\"Type\":\"Card\",\"Name\":\"ProjectConfigurationPane\",\"Classes\":\"Card Container\",\"x\":20,\"Width\":242,\"y\":19,\"Height\":610,\"Id\":\"PUX_109\", WidgetList:[\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Project Configuration\",\"Id\":\"PUX_134\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Id\",\"Id\":\"PUX_135\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Name\",\"Id\":\"PUX_136\"},\n            {\"Type\":\"TextlineInput\",\"Name\":\"IdView\",\"Classes\":\"TextlineInput readonly\",\"Anchoring\":\"n\",\"Placeholder\":\"\",\"Value\":\"\",\"Id\":\"PUX_227\"},\n            {\"Type\":\"TextlineInput\",\"Name\":\"NameView\",\"Classes\":\"TextlineInput readonly\",\"Anchoring\":\"n\",\"Placeholder\":\"\",\"Value\":\"\",\"Id\":\"PUX_228\"},\n            {\"Type\":\"Checkbox\",\"Name\":\"SnapToGridCheck\",\"Classes\":\"Checkbox\",\"Anchoring\":\"ne\",\"Value\":true,\"Id\":\"PUX_229\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Typography\",\"Id\":\"PUX_137\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Font\",\"Id\":\"PUX_138\"},\n            {\"Type\":\"TextlineInput\",\"Name\":\"FontFamilyInput\",\"Classes\":\"TextlineInput\",\"Anchoring\":\"n\",\"Placeholder\":\"Enter Font Family\",\"Value\":\"\",\"Id\":\"PUX_230\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Font Size [px]\",\"Id\":\"PUX_139\"},\n            {\"Type\":\"NumberInput\",\"Name\":\"FontSizeInput\",\"Classes\":\"NumberInput\",\"Anchoring\":\"ne\",\"Placeholder\":\"\",\"Value\":\"\",\"Id\":\"PUX_231\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Bold\",\"Id\":\"PUX_140\"},\n            {\"Type\":\"Checkbox\",\"Name\":\"BoldCheck\",\"Classes\":\"Checkbox\",\"Anchoring\":\"ne\",\"Value\":true,\"Id\":\"PUX_232\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Italic\",\"Id\":\"PUX_141\"},\n            {\"Type\":\"Checkbox\",\"Name\":\"ItalicCheck\",\"Classes\":\"Checkbox\",\"Anchoring\":\"ne\",\"Value\":true,\"Id\":\"PUX_233\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Text Color\",\"Id\":\"PUX_142\"},\n            {\"Type\":\"ColorInput\",\"Name\":\"TextColorInput\",\"Classes\":\"ColorInput\",\"Anchoring\":\"ne\",\"Id\":\"PUX_234\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Line Height [px]\",\"Id\":\"PUX_143\"},\n            {\"Type\":\"NumberInput\",\"Name\":\"LineHeightInput\",\"Classes\":\"NumberInput\",\"Anchoring\":\"ne\",\"Placeholder\":\"\",\"Value\":\"\",\"Id\":\"PUX_235\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Background\",\"Id\":\"PUX_144\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Color\",\"Id\":\"PUX_145\"},\n            {\"Type\":\"ColorInput\",\"Name\":\"BackgroundColorInput\",\"Classes\":\"ColorInput\",\"Anchoring\":\"ne\",\"Id\":\"PUX_236\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Texture\",\"Id\":\"PUX_146\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Grid Size [px]\",\"Id\":\"PUX_148\"},\n            {\"Type\":\"NumberInput\",\"Name\":\"GridWidthInput\",\"Classes\":\"NumberInput\",\"Anchoring\":\"ne\",\"Placeholder\":\"W\",\"Value\":\"\",\"Id\":\"PUX_243\"},\n            {\"Type\":\"NumberInput\",\"Name\":\"GridHeightInput\",\"Classes\":\"NumberInput\",\"Anchoring\":\"ne\",\"Placeholder\":\"H\",\"Value\":\"\",\"Id\":\"PUX_241\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Anchoring\":\"ne\",\"Value\":\"x\",\"Id\":\"PUX_242\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Snap-to-Grid\",\"Id\":\"PUX_147\"},\n            {\"Type\":\"URLInput\",\"Name\":\"TextureInput\",\"Classes\":\"URLInput\",\"Anchoring\":\"n\",\"Placeholder\":\"Enter URL\",\"Value\":\"\",\"Id\":\"PUX_237\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Value\",\"Id\":\"PUX_149\"},\n            {\"Type\":\"Icon\",\"Name\":\"ValueEditorButton\",\"Classes\":\"Icon\",\"Anchoring\":\"ne\",\"Value\":\"url(\\\"/images/image146.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_240\"},\n            {\"Type\":\"TextInput\",\"Name\":\"ValueInput\",\"Classes\":\"TextInput no-resize\",\"Anchoring\":\"c\",\"Placeholder\":\"Enter Value\",\"Value\":\"\",\"Id\":\"PUX_150\"},\n          ]},\n          {\"Type\":\"Card\",\"Name\":\"BoardConfigurationPane\",\"Classes\":\"Card Container\",\"x\":271,\"Width\":242,\"y\":19,\"Height\":610,\"Id\":\"PUX_110\", WidgetList:[\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Board Configuration\",\"Id\":\"PUX_151\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Id\",\"Id\":\"PUX_152\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Name\",\"Id\":\"PUX_153\"},\n            {\"Type\":\"TextlineInput\",\"Name\":\"IdView\",\"Classes\":\"TextlineInput readonly\",\"Anchoring\":\"n\",\"Placeholder\":\"\",\"Value\":\"\",\"Id\":\"PUX_216\"},\n            {\"Type\":\"TextlineInput\",\"Name\":\"NameInput\",\"Classes\":\"TextlineInput\",\"Anchoring\":\"n\",\"Placeholder\":\"Enter Name\",\"Value\":\"\",\"Id\":\"PUX_217\"},\n            {\"Type\":\"Checkbox\",\"Name\":\"SnapToGridCheck\",\"Classes\":\"Checkbox\",\"Anchoring\":\"ne\",\"Value\":true,\"Id\":\"PUX_218\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Typography\",\"Id\":\"PUX_154\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Font\",\"Id\":\"PUX_155\"},\n            {\"Type\":\"TextlineInput\",\"Name\":\"FontFamilyInput\",\"Classes\":\"TextlineInput\",\"Anchoring\":\"n\",\"Placeholder\":\"Enter Font Family\",\"Value\":\"\",\"Id\":\"PUX_219\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Font Size [px]\",\"Id\":\"PUX_156\"},\n            {\"Type\":\"NumberInput\",\"Name\":\"FontSizeInput\",\"Classes\":\"NumberInput\",\"Anchoring\":\"ne\",\"Placeholder\":\"\",\"Value\":\"\",\"Id\":\"PUX_220\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Bold\",\"Id\":\"PUX_157\"},\n            {\"Type\":\"Checkbox\",\"Name\":\"BoldCheck\",\"Classes\":\"Checkbox\",\"Anchoring\":\"ne\",\"Value\":true,\"Id\":\"PUX_221\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Italic\",\"Id\":\"PUX_158\"},\n            {\"Type\":\"Checkbox\",\"Name\":\"ItalicCheck\",\"Classes\":\"Checkbox\",\"Anchoring\":\"ne\",\"Value\":true,\"Id\":\"PUX_222\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Text Color\",\"Id\":\"PUX_159\"},\n            {\"Type\":\"ColorInput\",\"Name\":\"TextColorInput\",\"Classes\":\"ColorInput\",\"Anchoring\":\"ne\",\"Id\":\"PUX_223\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Line Height [px]\",\"Id\":\"PUX_160\"},\n            {\"Type\":\"NumberInput\",\"Name\":\"LineHeightInput\",\"Classes\":\"NumberInput\",\"Anchoring\":\"ne\",\"Placeholder\":\"\",\"Value\":\"\",\"Id\":\"PUX_224\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Background\",\"Id\":\"PUX_161\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Color\",\"Id\":\"PUX_162\"},\n            {\"Type\":\"ColorInput\",\"Name\":\"BackgroundColorInput\",\"Classes\":\"ColorInput\",\"Anchoring\":\"ne\",\"Id\":\"PUX_225\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Texture\",\"Id\":\"PUX_163\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Grid Size [px]\",\"Id\":\"PUX_164\"},\n            {\"Type\":\"NumberInput\",\"Name\":\"GridWidthInput\",\"Classes\":\"NumberInput\",\"Anchoring\":\"ne\",\"Placeholder\":\"W\",\"Value\":\"\",\"Id\":\"PUX_244\"},\n            {\"Type\":\"NumberInput\",\"Name\":\"GridHeightInput\",\"Classes\":\"NumberInput\",\"Anchoring\":\"ne\",\"Placeholder\":\"H\",\"Value\":\"\",\"Id\":\"PUX_245\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Anchoring\":\"ne\",\"Value\":\"x\",\"Id\":\"PUX_246\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Snap-to-Grid\",\"Id\":\"PUX_165\"},\n            {\"Type\":\"URLInput\",\"Name\":\"TextureInput\",\"Classes\":\"URLInput\",\"Anchoring\":\"n\",\"Placeholder\":\"Enter URL\",\"Value\":\"\",\"Id\":\"PUX_226\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Value\",\"Id\":\"PUX_166\"},\n            {\"Type\":\"Icon\",\"Name\":\"ValueEditorButton\",\"Classes\":\"Icon\",\"Anchoring\":\"ne\",\"Value\":\"url(\\\"/images/image146.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_239\"},\n            {\"Type\":\"TextInput\",\"Name\":\"ValueInput\",\"Classes\":\"TextInput no-resize\",\"Anchoring\":\"c\",\"Placeholder\":\"Enter Value\",\"Value\":\"\",\"Id\":\"PUX_167\"},\n          ]},\n          {\"Type\":\"Card\",\"Name\":\"StickerConfigurationPane\",\"Classes\":\"Card Container\",\"x\":520,\"Width\":242,\"y\":19,\"Height\":791,\"Id\":\"PUX_111\", WidgetList:[\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Sticker Configuration\",\"Id\":\"PUX_168\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Id\",\"Id\":\"PUX_169\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Name\",\"Id\":\"PUX_170\"},\n            {\"Type\":\"TextlineInput\",\"Name\":\"IdView\",\"Classes\":\"TextlineInput readonly\",\"Anchoring\":\"n\",\"Placeholder\":\"\",\"Value\":\"\",\"Id\":\"PUX_190\"},\n            {\"Type\":\"TextlineInput\",\"Name\":\"NameInput\",\"Classes\":\"TextlineInput\",\"Anchoring\":\"n\",\"Placeholder\":\"Enter Name\",\"Value\":\"\",\"Id\":\"PUX_191\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Position\",\"Id\":\"PUX_171\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Size\",\"Id\":\"PUX_172\"},\n            {\"Type\":\"NumberInput\",\"Name\":\"WidthInput\",\"Classes\":\"NumberInput\",\"Anchoring\":\"ne\",\"Placeholder\":\"W\",\"Value\":\"\",\"Id\":\"PUX_192\"},\n            {\"Type\":\"NumberInput\",\"Name\":\"HeightInput\",\"Classes\":\"NumberInput\",\"Anchoring\":\"ne\",\"Placeholder\":\"H\",\"Value\":\"\",\"Id\":\"PUX_193\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Anchoring\":\"ne\",\"Value\":\"x\",\"Id\":\"PUX_194\"},\n            {\"Type\":\"NumberInput\",\"Name\":\"xInput\",\"Classes\":\"NumberInput\",\"Anchoring\":\"ne\",\"Placeholder\":\"x\",\"Value\":\"\",\"Id\":\"PUX_195\"},\n            {\"Type\":\"NumberInput\",\"Name\":\"yInput\",\"Classes\":\"NumberInput\",\"Anchoring\":\"ne\",\"Placeholder\":\"y\",\"Value\":\"\",\"Id\":\"PUX_196\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Anchoring\":\"ne\",\"Value\":\",\",\"Id\":\"PUX_197\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Layer\",\"Id\":\"PUX_173\"},\n            {\"Type\":\"Icon\",\"Name\":\"ShiftDownButton\",\"Classes\":\"Icon\",\"Anchoring\":\"ne\",\"Value\":\"url(\\\"/images/arrow-sm-down.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_198\"},\n            {\"Type\":\"Icon\",\"Name\":\"ShiftUpButton\",\"Classes\":\"Icon\",\"Anchoring\":\"ne\",\"Value\":\"url(\\\"/images/arrow-sm-up.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_199\"},\n            {\"Type\":\"Box\",\"Classes\":\"\",\"Anchoring\":\"ne\",\"Id\":\"PUX_200\"},\n            {\"Type\":\"Icon\",\"Name\":\"ShiftToTopButton\",\"Classes\":\"Icon\",\"Anchoring\":\"ne\",\"Value\":\"url(\\\"/images/arrow-sm-up.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_201\"},\n            {\"Type\":\"Box\",\"Classes\":\"\",\"Anchoring\":\"ne\",\"Id\":\"PUX_202\"},\n            {\"Type\":\"Icon\",\"Name\":\"ShiftToBottomButton\",\"Classes\":\"Icon\",\"Anchoring\":\"ne\",\"Value\":\"url(\\\"/images/arrow-sm-down.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_203\"},\n            {\"Type\":\"NumberInput\",\"Name\":\"IndexView\",\"Classes\":\"NumberInput\",\"Anchoring\":\"ne\",\"Placeholder\":\"Layer\",\"Value\":\"\",\"Id\":\"PUX_204\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Lock\",\"Id\":\"PUX_174\"},\n            {\"Type\":\"Checkbox\",\"Name\":\"LockCheck\",\"Classes\":\"Checkbox\",\"Anchoring\":\"ne\",\"Value\":true,\"Id\":\"PUX_205\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Layout and Visibility\",\"Id\":\"PUX_175\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Typography\",\"Id\":\"PUX_176\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Font\",\"Id\":\"PUX_177\"},\n            {\"Type\":\"TextlineInput\",\"Name\":\"FontFamilyInput\",\"Classes\":\"TextlineInput\",\"Anchoring\":\"n\",\"Placeholder\":\"Enter Font Family\",\"Value\":\"\",\"Id\":\"PUX_206\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Font Size [px]\",\"Id\":\"PUX_178\"},\n            {\"Type\":\"NumberInput\",\"Name\":\"FontSizeInput\",\"Classes\":\"NumberInput\",\"Anchoring\":\"ne\",\"Placeholder\":\"\",\"Value\":\"\",\"Id\":\"PUX_207\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Bold\",\"Id\":\"PUX_179\"},\n            {\"Type\":\"Checkbox\",\"Name\":\"BoldCheck\",\"Classes\":\"Checkbox\",\"Anchoring\":\"ne\",\"Value\":true,\"Id\":\"PUX_208\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Italic\",\"Id\":\"PUX_180\"},\n            {\"Type\":\"Checkbox\",\"Name\":\"ItalicCheck\",\"Classes\":\"Checkbox\",\"Anchoring\":\"ne\",\"Value\":true,\"Id\":\"PUX_209\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Text Color\",\"Id\":\"PUX_181\"},\n            {\"Type\":\"ColorInput\",\"Name\":\"TextColorInput\",\"Classes\":\"ColorInput\",\"Anchoring\":\"ne\",\"Id\":\"PUX_210\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Line Height [px]\",\"Id\":\"PUX_182\"},\n            {\"Type\":\"NumberInput\",\"Name\":\"LineHeightInput\",\"Classes\":\"NumberInput\",\"Anchoring\":\"ne\",\"Placeholder\":\"\",\"Value\":\"\",\"Id\":\"PUX_211\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Background\",\"Id\":\"PUX_183\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Color\",\"Id\":\"PUX_184\"},\n            {\"Type\":\"ColorInput\",\"Name\":\"BackgroundColorInput\",\"Classes\":\"ColorInput\",\"Anchoring\":\"ne\",\"Id\":\"PUX_212\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Texture\",\"Id\":\"PUX_185\"},\n            {\"Type\":\"URLInput\",\"Name\":\"TextureInput\",\"Classes\":\"URLInput\",\"Anchoring\":\"n\",\"Placeholder\":\"Enter URL\",\"Value\":\"\",\"Id\":\"PUX_213\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Visibility\",\"Id\":\"PUX_186\"},\n            {\"Type\":\"Checkbox\",\"Name\":\"VisibilityCheck\",\"Classes\":\"Checkbox\",\"Anchoring\":\"ne\",\"Value\":true,\"Id\":\"PUX_214\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Enabling\",\"Id\":\"PUX_187\"},\n            {\"Type\":\"Checkbox\",\"Name\":\"EnablingCheck\",\"Classes\":\"Checkbox\",\"Anchoring\":\"ne\",\"Value\":true,\"Id\":\"PUX_215\"},\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Value\",\"Id\":\"PUX_188\"},\n            {\"Type\":\"Icon\",\"Name\":\"ValueEditorButton\",\"Classes\":\"Icon\",\"Anchoring\":\"ne\",\"Value\":\"url(\\\"/images/image146.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_238\"},\n            {\"Type\":\"TextInput\",\"Name\":\"ValueInput\",\"Classes\":\"TextInput no-resize\",\"Anchoring\":\"c\",\"Placeholder\":\"Enter Value\",\"Value\":\"\",\"Id\":\"PUX_189\"},\n          ]},\n          {\"Type\":\"Card\",\"Name\":\"BoardBrowserPane\",\"Classes\":\"Card Container\",\"x\":20,\"Width\":242,\"y\":700,\"Height\":270,\"Id\":\"PUX_107\", WidgetList:[\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Board Browser\",\"Id\":\"PUX_112\"},\n            {\"Type\":\"NestedListView\",\"Name\":\"BoardTreeView\",\"Classes\":\"NestedListView\",\"Anchoring\":\"c\",\"Id\":\"PUX_120\"},\n            {\"Type\":\"TextlineInput\",\"Name\":\"BoardNameInput\",\"Classes\":\"TextlineInput\",\"Anchoring\":\"s\",\"Placeholder\":\"Name\",\"Value\":\"\",\"Id\":\"PUX_121\"},\n            {\"Type\":\"Icon\",\"Name\":\"BoardDeleteButton\",\"Classes\":\"Icon\",\"Anchoring\":\"ne\",\"Value\":\"url(\\\"/images/minus.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_119\"},\n            {\"Type\":\"Icon\",\"Name\":\"BoardCreateButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/plus.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_113\"},\n            {\"Type\":\"Icon\",\"Name\":\"BoardDuplicateButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/clone.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_114\"},\n            {\"Type\":\"Icon\",\"Name\":\"BoardShiftDownButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/arrow-sm-down.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_115\"},\n            {\"Type\":\"Icon\",\"Name\":\"BoardShiftUpButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/arrow-sm-up.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_116\"},\n            {\"Type\":\"Icon\",\"Name\":\"BoardShiftOutButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/image21.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_117\"},\n            {\"Type\":\"Icon\",\"Name\":\"BoardShiftInButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/image23.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_118\"},\n          ]},\n          {\"Type\":\"Card\",\"Name\":\"StickerBrowserPane\",\"Classes\":\"Card Container\",\"x\":271,\"Width\":242,\"y\":700,\"Height\":270,\"Id\":\"PUX_108\", WidgetList:[\n            {\"Type\":\"Label\",\"Classes\":\"Label\",\"Value\":\"Sticker Browser\",\"Id\":\"PUX_122\"},\n            {\"Type\":\"FlatListView\",\"Name\":\"StickerListView\",\"Classes\":\"FlatListView\",\"Anchoring\":\"c\",\"Id\":\"PUX_132\"},\n            {\"Type\":\"TextlineInput\",\"Name\":\"StickerNameInput\",\"Classes\":\"TextlineInput\",\"Anchoring\":\"s\",\"Placeholder\":\"Name\",\"Value\":\"\",\"Id\":\"PUX_133\"},\n            {\"Type\":\"Icon\",\"Name\":\"StickerDeleteButton\",\"Classes\":\"Icon\",\"Anchoring\":\"ne\",\"Value\":\"url(\\\"/images/minus.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_131\"},\n            {\"Type\":\"PseudoDropDown\",\"Name\":\"StickerCreateButton\",\"Classes\":\"PseudoDropDown\",\"Value\":\"url(\\\"/images/plus.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_123\"},\n            {\"Type\":\"Icon\",\"Name\":\"StickerDuplicateButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/clone.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_124\"},\n            {\"Type\":\"Icon\",\"Name\":\"StickerShiftDownButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/arrow-sm-down.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_125\"},\n            {\"Type\":\"Icon\",\"Name\":\"StickerShiftUpButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/arrow-sm-up.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_126\"},\n            {\"Type\":\"Box\",\"Classes\":\"\",\"Id\":\"PUX_127\"},\n            {\"Type\":\"Icon\",\"Name\":\"StickerShiftToTopButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/arrow-sm-up.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_128\"},\n            {\"Type\":\"Box\",\"Classes\":\"\",\"Id\":\"PUX_129\"},\n            {\"Type\":\"Icon\",\"Name\":\"StickerShiftToBottomButton\",\"Classes\":\"Icon\",\"Value\":\"url(\\\"/images/arrow-sm-down.png\\\")\",\"Color\":\"black\",\"Id\":\"PUX_130\"},\n          ]},\n        ],\n      },\n    }\n      PUX.extractAllDialogs()\n\n      PUX.stuff({\n        Inspector: {\n          Deck: {\n            from:'Stuff Screen', with:[\n              'BoardBrowserPane','StickerBrowserPane',\n              'ProjectConfigurationPane','BoardConfigurationPane','StickerConfigurationPane'\n            ],\n          },\n        }\n      })\n\n      const updatedFrom = PUX.updatedFrom\n      PUX.configure({\n        MainScreen: {\n          self: {\n            Style:'left:0px; top:0px; right:0px; bottom:0px; width:auto; height:auto'\n          },\n\n          BoardView: {\n            Style:'left:0px; top:0px; right:0px; bottom:0px; width:auto; height:auto',\n            Substitute:BoardView,\n            Rendering:updatedFrom(() => {                 // just a few triggers\n// @ts-ignore TS6198 important: accessing the following prop.s is relevant!\n              const { Mode,ViewState,selectedStickers } = Application\n            }),\n          },\n\n          DesignerButton: {\n            Style:(\n              'left:auto; top:10px; right:10px; bottom:auto; background:white; ' +\n              'visibility:hidden'\n            ),\n            onPointerDown:  DesignerButtonRecognizer,\n            onPointerMove:  DesignerButtonRecognizer,\n            onPointerUp:    DesignerButtonRecognizer,\n            onPointerCancel:DesignerButtonRecognizer,\n          },\n        },\n\n        ProjectBrowser: {\n          self:{\n            Title:'Project Browser',\n            x:-1, y:-1,                                 // for initial placement\n            Style:'z-index:2000000',                      // above shape handles\n            closeable:updatedFrom(() => Application.Project != null)\n          },\n          ProjectListView: {\n            List:           updatedFrom(() => Application.persistedProjectList),\n            Placeholder:    '(no projects found)',\n            selectedIndices:updatedFrom(() => (\n              Application.selectedProjectIndex == null\n              ? []\n              : [Application.selectedProjectIndex]\n            )),\n            SelectionLimit: 1,\n            onSelectionChange:(selectedIndices:number[]) => {\n              if (selectedIndices.length === 0) {\n                Application.selectedProjectName  = undefined\n                Application.selectedProjectIndex = undefined\n                Application.ProjectName          = undefined\n              } else {\n                const selectedIndex = selectedIndices[0]\n                Application.selectedProjectName  = Application.persistedProjectList[selectedIndex]\n                Application.selectedProjectIndex = selectedIndex\n                Application.ProjectName          = Application.selectedProjectName\n              }\n            },\n          },\n          ProjectOpenButton: {\n            disabled:updatedFrom(() => (\n              (Application.selectedProjectIndex == null)) ||\n              ProjectIsOpen(Application.selectedProjectName as string)\n            ),\n            onClick:() => doOpenProject(Application.selectedProjectName as string),\n          },\n          ProjectPurgeButton: {\n            disabled:updatedFrom(() => (\n              (Application.selectedProjectIndex == null)) ||\n              ProjectIsOpen(Application.selectedProjectName as string)\n            ),\n            onClick:() => doPurgeProject(Application.selectedProjectName as string),\n          },\n          ProjectNameInput: {\n            Value:updatedFrom(() => Application.ProjectName),\n            onInput:(Event:any) => Application.ProjectName = Event.target.value,\n          },\n          ProjectCreateButton: {\n            disabled:updatedFrom(() => ! ProjectNameIsAvailable(Application.ProjectName as string)),\n            onClick:() => doCreateProject(Application.ProjectName as string),\n          },\n          ProjectRenameButton: {\n            disabled:updatedFrom(() => (\n              (Application.selectedProjectIndex == null) ||\n              ProjectIsOpen(Application.selectedProjectName as string) ||\n              ! ProjectNameIsAvailable(Application.ProjectName as string)\n            )),\n            onClick:() => doRenameProject(\n              Application.selectedProjectName as string, Application.ProjectName as string\n            ),\n          },\n        },\n\n        Toolbox: {\n          self:{\n            Title:'Toolbox',\n            x:-1, y:-1,             // for placement around mouse click position\n            Style:'z-index:2000000',                      // above shape handles\n            onClose:hideDesignerTools,\n          },\n\n          ModeButton: {\n            disabled:updatedFrom(() => Application.chosenBoard == null),\n            Style:updatedFrom(() =>\n              Application.Mode === 'edit'\n              ? 'background:#e8f0ff; outline:solid 2px lightgray; border-radius:4px'\n              : ''\n            ),\n            onClick:() => doSwitchMode(),\n          },\n          InspectorButton: {\n            disabled:updatedFrom(() => Application.Project == null),\n            Style:updatedFrom(() =>\n              Application.InspectorIsOpen\n              ? 'background:#e8f0ff; outline:solid 2px lightgray; border-radius:4px'\n              : ''\n            ),\n            onClick:(Event:PointerEvent) => showDialogAround(\n              'Inspector', Event.clientX,Event.clientY\n            ),\n          },\n          ChatButton: { disabled:true },\n          ProjectBrowserButton: {\n            Style:updatedFrom(() =>\n              Application.ProjectBrowserIsOpen\n              ? 'background:#e8f0ff; outline:solid 2px lightgray; border-radius:4px'\n              : ''\n            ),\n            onClick:(Event:PointerEvent) => showDialogAround(\n              'ProjectBrowser', Event.clientX,Event.clientY\n            ),\n          },\n\n          StickerCreateButton: {\n            disabled:updatedFrom(() => Application.chosenBoard == null),\n            Options:StickerCreateOptions,\n            onInput:(Event:any) => { doCreateNewSticker(Event.target.value); Event.target.value = '' },\n          },\n          StickerDuplicateButton: {\n            disabled:updatedFrom(() => ! (\n              (Application.chosenBoard != null) &&\n              (Application.selectedStickers.length > 0)\n            )),\n            onClick:() => doDuplicateStickers(Application.selectedStickers),\n          },\n          StickerConfigureButton: {\n            disabled:updatedFrom(() => ! (\n              (Application.chosenBoard != null) &&\n              (Application.selectedStickers.length > 0)\n            )),\n            onClick:(Event:PointerEvent) => {\n              showDialogAround('Inspector', Event.clientX,Event.clientY)\n              setInspectorPaneGroup('Stickers')\n              setInspectorPaneChoice('Configuration')\n            },\n          },\n          StickerScriptButton: {\n            disabled:updatedFrom(() => Application.Project == null),\n            Style:updatedFrom(() =>\n              Application.ScriptEditorIsOpen\n              ? 'background:#e8f0ff; outline:solid 2px lightgray; border-radius:4px'\n              : ''\n            ),\n            onClick:(Event:PointerEvent) => showDialogAround(\n              'ScriptEditor', Event.clientX,Event.clientY\n            ),\n          },\n\n          StickerShiftToTopButton: {\n            Style:'border-top:solid 2px black',\n            disabled:updatedFrom(() => ! (\n              (Application.chosenBoard != null) &&\n              (Application.selectedStickers.length > 0) &&\n              Application.StickerSelectionMayBeShiftedDown\n            )),\n            onClick:() => doShiftStickersToBottom(Application.selectedStickers),\n          },\n          StickerShiftUpButton: {\n            disabled:updatedFrom(() => ! (\n              (Application.chosenBoard != null) &&\n              (Application.selectedStickers.length > 0) &&\n              Application.StickerSelectionMayBeShiftedDown\n            )),\n            onClick:() => doShiftStickersDown(Application.selectedStickers),\n          },\n          StickerShiftDownButton: {\n            disabled:updatedFrom(() => ! (\n              (Application.chosenBoard != null) &&\n              (Application.selectedStickers.length > 0) &&\n              Application.StickerSelectionMayBeShiftedUp\n            )),\n            onClick:() => doShiftStickersUp(Application.selectedStickers),\n          },\n          StickerShiftToBottomButton: {\n            Style:'border-bottom:solid 2px black',\n            disabled:updatedFrom(() => ! (\n              (Application.chosenBoard != null) &&\n              (Application.selectedStickers.length > 0) &&\n              Application.StickerSelectionMayBeShiftedUp\n            )),\n            onClick:() => doShiftStickersToTop(Application.selectedStickers),\n          },\n\n          StickerCutButton: {\n            disabled:updatedFrom(() => ! (\n              (Application.chosenBoard != null) &&\n              (Application.selectedStickers.length > 0)\n            )),\n            onClick:() => doCutStickers(Application.selectedStickers),\n          },\n          StickerCopyButton: {\n            disabled:updatedFrom(() => ! (\n              (Application.chosenBoard != null) &&\n              (Application.selectedStickers.length > 0)\n            )),\n            onClick:() => doCopyStickers(Application.selectedStickers),\n          },\n          StickerPasteButton: {\n            disabled:updatedFrom(() => ! (\n              (Application.chosenBoard != null) &&\n              Application.ShelfIsFilled\n            )),\n            Options:['close to current selection','at original place'],\n            onInput:(Event:any) => {\n              if (Event.target.value === 'close to current selection') {\n                const { minX,minY } = topLeftPositionOfStickers(Application.selectedStickers)\n                doPasteStickersAround(minX,minY)\n              } else {\n                doPasteStickers()\n              }\n              Event.target.value = ''\n            },\n          },\n          StickerDeleteButton: {\n            disabled:updatedFrom(() => ! (\n              (Application.chosenBoard != null) &&\n              (Application.selectedStickers.length > 0)\n            )),\n            onClick:() => doDeleteStickers(Application.selectedStickers),\n          },\n\n          UndoButton: {\n            disabled:updatedFrom(() => ! Application.mayUndoOperation),\n            onClick:() => doUndoOperation(),\n          },\n          RedoButton: {\n            disabled:updatedFrom(() => ! Application.mayRedoOperation),\n            onClick:() => doRedoOperation(),\n          },\n          ImportButton: {\n            disabled:updatedFrom(() => Application.Project == null),\n          },\n          FileInput: {\n            Style:      'border:none',\n            disabled:   updatedFrom(() => Application.Project == null),\n            Value:      '',\n            Placeholder:'',\n            accept:'.json,application/json',\n            onChange:(Event) => doImport(Event.target.files[0]),\n            onDrop:  (Event) => doImport(Event.dataTransfer.files[0]),\n          },\n          ExportButton: {\n            disabled:updatedFrom(() => Application.Project == null),\n            Options:['whole Project','active Board','selected Stickers'],\n            onInput:(Event:any) => { doExport(Event.target.value); Event.target.value = '' },\n          },\n\n          VisitPrevButton: {\n            disabled:updatedFrom(() => ! Application.mayVisitPrevBoard),\n            onClick:() => doVisitPrevBoard(),\n          },\n          VisitNextButton: {\n            disabled:updatedFrom(() => ! Application.mayVisitNextBoard),\n            onClick:() => doVisitNextBoard(),\n          },\n          VisitHomeButton: {\n            disabled:updatedFrom(() => (\n              (Application.BoardTree.length === 0) ||\n              (Application.chosenBoard === Application.BoardTree[0])\n            )),\n            onClick:() => doVisitBoard(Application.Project?.Board(0)),\n          },\n          SearchButton: {\n            disabled:true,\n          },\n\n          ConsoleButton: {\n            Style:updatedFrom(() =>\n              Application.ConsoleIsOpen\n              ? 'background:#e8f0ff; outline:solid 2px lightgray; border-radius:4px'\n              : ''\n            ),\n            onClick:(Event:PointerEvent) => showDialogAround(\n              'Console', Event.clientX,Event.clientY\n            ),\n          },\n          AppletGeneratorButton: {\n            disabled:updatedFrom(() => Application.chosenBoard == null),\n            Options:updatedFrom(() => AppletGeneratorOptions(Application.selectedStickers)),\n            onInput:(Event:any) => {\n              const chosenBoard = Application.chosenBoard\n              if (chosenBoard == null) { return withWarning('there is currently no chosen board') }\n\n              const [ Source,Mode ] = Event.target.value.split(':')\n                Event.target.value = ''\n              switch (Source) {\n                case 'Board':\n                  return doGenerateAppletFromBoard(chosenBoard,Mode)\n                case 'Boards':\n                  return doGenerateAppletFromBoardAndSuccessors(chosenBoard,Mode)\n                case 'Stickers': default:\n                  return doGenerateAppletFromStickers(Application.selectedStickers,Mode)\n              }\n            },\n          },\n          BoardPrintButton: {\n            disabled:updatedFrom(() => Application.chosenBoard == null),\n            onClick:() => doPrintBoard(),\n          },\n        },\n\n        Inspector: {\n          self:{\n            Title:'Inspector',\n            x:-1, y:-1,             // for placement around mouse click position\n            minWidth:300, minHeight:460, Width:300, Height:460,\n            Style:'z-index:2000000',                      // above shape handles\n            onOpen: () => Application.InspectorIsOpen = true,\n            onClose:() => Application.InspectorIsOpen = false,\n          },\n\n          ProjectModeButton: {\n            disabled:updatedFrom(() => (Application.Project == null)),\n            Style:updatedFrom(() =>\n              Application.InspectorPaneGroup === 'Project'\n              ? 'background:#e8f0ff; outline:solid 2px lightgray; border-radius:4px'\n              : ''\n            ),\n            onClick:() => setInspectorPaneGroup('Project'),\n          },\n          BoardModeButton: {\n            disabled:updatedFrom(() => (Application.Project == null)),\n            Style:updatedFrom(() =>\n              Application.InspectorPaneGroup === 'Board'\n              ? 'background:#e8f0ff; outline:solid 2px lightgray; border-radius:4px'\n              : ''\n            ),\n            onClick:() => setInspectorPaneGroup('Board'),\n          },\n          StickerModeButton: {\n            disabled:updatedFrom(() => (Application.Project == null)),\n            Style:updatedFrom(() =>\n              Application.InspectorPaneGroup === 'Stickers'\n              ? 'background:#e8f0ff; outline:solid 2px lightgray; border-radius:4px'\n              : ''\n            ),\n            onClick:() => setInspectorPaneGroup('Stickers'),\n          },\n\n          BrowserPaneButton: {\n            disabled:updatedFrom(() => (\n              (Application.Project == null) ||\n              (Application.InspectorPaneGroup === 'Stickers')\n            )),\n            Style:updatedFrom(() =>\n              Application.InspectorPaneChoice === 'Browser'\n              ? 'background:#e8f0ff; outline:solid 2px lightgray; border-radius:4px'\n              : ''\n            ),\n            onClick:() => setInspectorPaneChoice('Browser'),\n          },\n\n          ConfigurationPaneButton: {\n            disabled:updatedFrom(() => (Application.Project == null)),\n            Style:updatedFrom(() =>\n              Application.InspectorPaneChoice === 'Configuration'\n              ? 'background:#e8f0ff; outline:solid 2px lightgray; border-radius:4px'\n              : ''\n            ),\n            onClick:() => setInspectorPaneChoice('Configuration'),\n          },\n\n          ScriptEditorButton: {\n            disabled:updatedFrom(() => (Application.Project == null)),\n            onClick:(Event:PointerEvent) => {\n              showDialogAround('ScriptEditor', Event.clientX,Event.clientY)\n              Application.ScriptEditorMode = Application.InspectorPaneGroup\n            },\n          },\n\n          Deck: {\n            Style:'overflow-x:hidden; overflow-y:scroll; overflow:hidden scroll',\n            Value:updatedFrom(() => Application.InspectorPaneIndex),\n          },\n\n          MessageView: {\n            Value:updatedFrom(() => Application.InspectorMessage),\n          },\n        },\n\n        ValueEditor: {\n          self:{\n            Title:'Value Editor',\n            x:-1, y:-1,             // for placement around mouse click position\n            Style:'z-index:2000000',                      // above shape handles\n            onOpen: () => Application.ValueEditorIsOpen = true,\n            onClose:() => Application.ValueEditorIsOpen = false,\n          },\n\n          ProjectModeButton: {\n            disabled:updatedFrom(() => (Application.Project == null)),\n            Style:updatedFrom(() =>\n              Application.ValueEditorMode === 'Project'\n              ? 'background:#e8f0ff; outline:solid 2px lightgray; border-radius:4px'\n              : ''\n            ),\n            onClick:() => Application.ValueEditorMode = 'Project',\n          },\n          BoardModeButton: {\n            disabled:updatedFrom(() => (Application.Project == null)),\n            Style:updatedFrom(() =>\n              Application.ValueEditorMode === 'Board'\n              ? 'background:#e8f0ff; outline:solid 2px lightgray; border-radius:4px'\n              : ''\n            ),\n            onClick:() => Application.ValueEditorMode = 'Board',\n          },\n          StickerModeButton: {\n            disabled:updatedFrom(() => (Application.Project == null)),\n            Style:updatedFrom(() =>\n              Application.ValueEditorMode === 'Stickers'\n              ? 'background:#e8f0ff; outline:solid 2px lightgray; border-radius:4px'\n              : ''\n            ),\n            onClick:() => Application.ValueEditorMode = 'Stickers',\n          },\n\n          ValueInput: {\n            disabled:updatedFrom(() => (\n              Application.ValueEditorMode === 'Project'\n              ? Application.Project == null\n              : Application.ValueEditorMode === 'Board'\n                ? Application.chosenBoard == null\n                : Application.selectedStickers.length === 0\n            )),\n            Value:updatedFrom(() => (\n              Application.ValueEditorMode === 'Project'\n              ? ValueFor(Application.ProjectProperties.editableValue)\n              : Application.ValueEditorMode === 'Board'\n                ? ValueFor(Application.BoardProperties.editableValue)\n                : ValueFor(Application.StickerSelectionProperties.editableValue)\n            )),\n            Placeholder:updatedFrom(() => (\n              Application.ValueEditorMode === 'Project'\n              ? '(enter project value)'\n              : Application.ValueEditorMode === 'Board'\n                ? '(enter a value for the currently active board)'\n                : '(enter a common value for all currently selected stickers)'\n            )),\n            onInput:(Event:any) => {\n              switch (Application.ValueEditorMode) {\n                case 'Project':\n                  return doConfigureProject(Application.Project as SNS_Project,'editableValue',Event.target.value)\n                case 'Board':\n                  return doConfigureBoard(Application.chosenBoard as SNS_Board,'editableValue',Event.target.value)\n                case 'Stickers': default:\n                  return doConfigureStickers(Application.selectedStickers,'editableValue',Event.target.value)\n              }\n            },\n          },\n        },\n\n        ScriptEditor: {\n          self:{\n            Title:'Script Editor',\n            x:-1, y:-1,             // for placement around mouse click position\n            Style:'z-index:2000000',                      // above shape handles\n            onOpen: () => Application.ScriptEditorIsOpen = true,\n            onClose:() => Application.ScriptEditorIsOpen = false,\n          },\n\n          ProjectModeButton: {\n            disabled:updatedFrom(() => (Application.Project == null)),\n            Style:updatedFrom(() =>\n              Application.ScriptEditorMode === 'Project'\n              ? 'background:#e8f0ff; outline:solid 2px lightgray; border-radius:4px'\n              : ''\n            ),\n            onClick:() => Application.ScriptEditorMode = 'Project',\n          },\n          BoardModeButton: {\n            disabled:updatedFrom(() => (Application.Project == null)),\n            Style:updatedFrom(() =>\n              Application.ScriptEditorMode === 'Board'\n              ? 'background:#e8f0ff; outline:solid 2px lightgray; border-radius:4px'\n              : ''\n            ),\n            onClick:() => Application.ScriptEditorMode = 'Board',\n          },\n          StickerModeButton: {\n            disabled:updatedFrom(() => (Application.Project == null)),\n            Style:updatedFrom(() =>\n              Application.ScriptEditorMode === 'Stickers'\n              ? 'background:#e8f0ff; outline:solid 2px lightgray; border-radius:4px'\n              : ''\n            ),\n            onClick:() => Application.ScriptEditorMode = 'Stickers',\n          },\n\n          ScriptInput: {\n            Style:'white-space:pre',\n            disabled:updatedFrom(() => (\n              Application.ScriptEditorMode === 'Project'\n              ? Application.Project == null\n              : Application.ScriptEditorMode === 'Board'\n                ? Application.chosenBoard == null\n                : Application.selectedStickers.length === 0\n            )),\n            Value:updatedFrom(() => (\n              Application.ScriptEditorMode === 'Project'\n              ? ValueFor(Application.ProjectProperties.Script)\n              : Application.ScriptEditorMode === 'Board'\n                ? ValueFor(Application.BoardProperties.Script)\n                : ValueFor(Application.StickerSelectionProperties.Script)\n            )),\n            Placeholder:updatedFrom(() => (\n              Application.ScriptEditorMode === 'Project'\n              ? '(enter project script)'\n              : Application.ScriptEditorMode === 'Board'\n                ? '(enter script for the currently active board)'\n                : '(enter common script for all currently selected stickers)'\n            )),\n            onInput:(Event:any) => {\n              switch (Application.ScriptEditorMode) {\n                case 'Project':\n                  return doConfigureProject(Application.Project as SNS_Project,'pendingScript',Event.target.value)\n                case 'Board':\n                  return doConfigureBoard(Application.chosenBoard as SNS_Board,'pendingScript',Event.target.value)\n                case 'Stickers': default:\n                  return doConfigureStickers(Application.selectedStickers,'pendingScript',Event.target.value)\n              }\n            },\n          },\n\n          ApplyButton: {\n            disabled:updatedFrom(() => (\n              Application.ScriptEditorMode === 'Project'\n              ? Application.ProjectProperties.Script === Application.ProjectProperties.activeScript\n              : Application.ScriptEditorMode === 'Board'\n                ? Application.ProjectProperties.Script          === Application.ProjectProperties.activeScript\n                : Application.StickerSelectionProperties.Script === Application.StickerSelectionProperties.activeScript\n            )),\n            onClick:() => {\n              switch (Application.ScriptEditorMode) {\n                case 'Project':\n                  return doApplyProjectScript(Application.Project as SNS_Project)\n                case 'Board':\n                  return doApplyBoardScript(Application.chosenBoard as SNS_Board)\n                case 'Stickers': default:\n                  return doApplyStickerScript(Application.selectedStickers)\n              }\n            },\n          },\n          WithdrawButton: {\n            disabled:true,\n            onClick:() => {\n              switch (Application.ScriptEditorMode) {\n                case 'Project':\n                  return doWithdrawProjectScript(Application.Project as SNS_Project)\n                case 'Board':\n                  return doWithdrawBoardScript(Application.chosenBoard as SNS_Board)\n                case 'Stickers': default:\n                  return doWithdrawStickerScript(Application.selectedStickers)\n              }\n            },\n          },\n\n          MessageView: {\n            Style:(\n              'bottom:0px; font-size:13px; padding-top:3px; ' +\n              'white-space:nowrap; overflow:hidden; text-overflow:ellipsis'\n            ),\n            Value:updatedFrom(() => ErrorMessageFor(\n              Application.ScriptEditorMode === 'Project'\n              ? Application.ProjectProperties.ScriptError\n              : Application.ScriptEditorMode === 'Board'\n                ? Application.ProjectProperties.ScriptError\n                : Application.StickerSelectionProperties.ScriptError\n            ))\n          },\n          MessageViewButton: {\n            Style:'bottom:3px',\n            disabled:updatedFrom(() => ! ValueIsError(\n              Application.ScriptEditorMode === 'Project'\n              ? Application.ProjectProperties.ScriptError\n              : Application.ScriptEditorMode === 'Board'\n                ? Application.ProjectProperties.ScriptError\n                : Application.StickerSelectionProperties.ScriptError\n            )),\n            onClick:() => showScriptError(\n              Application.ScriptEditorMode === 'Project'\n              ? Application.ProjectProperties.ScriptError\n              : Application.ScriptEditorMode === 'Board'\n                ? Application.ProjectProperties.ScriptError\n                : Application.StickerSelectionProperties.ScriptError\n            ),\n          },\n        },\n\n        Console: {\n          self:{\n            Title:'Console',\n            x:-1, y:-1,             // for placement around mouse click position\n            Style:'z-index:2000000',                      // above shape handles\n            onOpen: () => Application.ConsoleIsOpen = true,\n            onClose:() => Application.ConsoleIsOpen = false,\n          },\n          ConsoleClearButton: {\n            Style:    'top:2px; z-index:1',\n            disabled: updatedFrom(() => Application.ConsoleValue === ''),\n            onClick:  () => clearConsole()\n          },\n          ConsoleView: {\n            Style:'bottom:0px; border:solid 4px transparent; color:green',\n            readonly:true,\n            Value:updatedFrom(() => Application.ConsoleValue),\n          },\n        },\n      })\n\n      PUX.configure({\n        'Stuff Screen': {\n        BoardBrowserPane:{\n          BoardTreeView: {\n            List: updatedFrom(() => {\n              Application.BoardTreeState; Application.chosenBoard    // triggers\n              return Application.BoardTree\n            }),\n            LabelOfItem:       (Board:SNS_Board) => Board.Name,\n            ContentListOfItem: (Board:SNS_Board) => Board.BoardList,\n            ItemRenderer:      (Board:SNS_Board, IndexPath:number[]) => {\n              const Style = (\n                Application.chosenBoard === Board\n                ? 'font-weight:bold; text-decoration:underline'\n                : undefined\n              )\n              if (Board.Name == null) {\n                return html`<div class=\"ItemLabel\" style=${Style}><i>(unnamed)</i></div>`\n              } else {\n                return html`<div class=\"ItemLabel\" style=${Style}>${Board.Name}</div>`\n              }\n            },\n            SelectionMode:    'same-container',\n            SelectionLimit:   Number.MAX_SAFE_INTEGER,\n            selectedPaths:    updatedFrom(() => (Application.BoardTreeState, IndexPathsOfBoards(Application.selectedBoards))),\n            onSelectionChange:(selectedBoardPaths) => Application.selectedBoards = BoardsAtIndexPaths(selectedBoardPaths),\n            onItemDoubleClicked:(Board:SNS_Board) => doVisitBoard(Board),\n            expandedPaths:    updatedFrom(() => (Application.BoardTreeState, IndexPathsOfBoards(Application.expandedBoards))),\n            onExpansionChange:(expandedBoardPaths) => Application.expandedBoards = BoardsAtIndexPaths(expandedBoardPaths),\n          },\n\n          BoardCreateButton: {\n            disabled: updatedFrom(() => Application.Project == null),\n            onClick:  () => doCreateNewBoard(Application.selectedBoards),\n          },\n          BoardDuplicateButton: {\n            disabled: updatedFrom(() => Application.selectedBoards.length === 0),\n            onClick:  () => doDuplicateBoards(Application.selectedBoards),\n          },\n\n          BoardShiftOutButton: {\n            disabled: updatedFrom(() => ! Application.BoardSelectionMayBeShiftedOut),\n            onClick:  () => doShiftBoardsOut(Application.selectedBoards),\n          },\n          BoardShiftInButton: {\n            disabled: updatedFrom(() => ! Application.BoardSelectionMayBeShiftedIn),\n            onClick:  () => doShiftBoardsIn(Application.selectedBoards),\n          },\n\n          BoardShiftUpButton: {\n            disabled: updatedFrom(() => ! Application.BoardSelectionMayBeShiftedUp),\n            onClick:  () => doShiftBoardsUp(Application.selectedBoards),\n          },\n          BoardShiftDownButton: {\n            disabled: updatedFrom(() => ! Application.BoardSelectionMayBeShiftedDown),\n            onClick:  () => doShiftBoardsDown(Application.selectedBoards),\n          },\n\n          BoardDeleteButton: {\n            disabled: updatedFrom(() => Application.selectedBoards.length === 0),\n            onClick:  () => doDeleteBoards(Application.selectedBoards),\n          },\n\n          BoardNameInput: {\n            disabled: updatedFrom(() => Application.selectedBoards.length !== 1),\n            Value:    updatedFrom(() => Application.BoardTreeState && ValueFor(\n              Application.selectedBoards.length === 0\n              ? noSelection\n              : Application.selectedBoards.length === 1\n                ? Application.selectedBoards[0].Name\n                : mixedValues\n            )),\n            onInput: (Event:any) => {\n              if (Application.selectedBoards.length === 1) {\n                doConfigureBoard(Application.selectedBoards[0],'Name',Event.target.value)\n              }\n            },\n          },\n        },\n\n\n        StickerBrowserPane:{\n          StickerListView: {\n            List:updatedFrom(() => {\n              Application.ViewState                            // just a trigger\n              return Application.StickerList\n            }),\n            ItemRenderer: (Sticker:SNS_Sticker) => {\n              if (Sticker.Name == null) {\n                return `<div class=\"ItemLabel\"><i>(unnamed)</i></div>`\n              } else {\n                return `<div class=\"ItemLabel\">${Sticker.Name}</div>`\n              }\n            },\n            Placeholder: '(board is empty)',\n            selectedIndices:updatedFrom(() => {\n              Application.ViewState                            // just a trigger\n              return Application.selectedStickers.map(\n                (Sticker:SNS_Sticker) => Sticker.Index\n              )\n            }),\n            SelectionLimit: Number.MAX_SAFE_INTEGER,\n            onSelectionChange:(selectedIndices) => {\n              const chosenBoard = Application.chosenBoard\n              if (chosenBoard == null) { return withWarning('there is currently no chosen board') }\n\n              Application.selectedStickers = selectedIndices.map((Index:number) => chosenBoard.Sticker(Index))\n            },\n          },\n\n          StickerCreateButton: {\n            disabled:updatedFrom(() => Application.chosenBoard == null),\n            Options: StickerCreateOptions,\n            onInput: (Event:any) => { doCreateNewSticker(Event.target.value); Event.target.value = '' },\n          },\n          StickerDuplicateButton: {\n            disabled: updatedFrom(() => Application.selectedStickers.length == 0),\n            onClick:  () => doDuplicateStickers(Application.selectedStickers),\n          },\n\n          StickerShiftToTopButton: {\n            disabled: updatedFrom(() => ! Application.StickerSelectionMayBeShiftedUp),\n            onClick:  () => doShiftStickersToTop(Application.selectedStickers),\n          },\n          StickerShiftUpButton: {\n            disabled: updatedFrom(() => ! Application.StickerSelectionMayBeShiftedUp),\n            onClick:  () => doShiftStickersUp(Application.selectedStickers),\n          },\n          StickerShiftDownButton: {\n            disabled: updatedFrom(() => ! Application.StickerSelectionMayBeShiftedDown),\n            onClick:  () => doShiftStickersDown(Application.selectedStickers),\n          },\n          StickerShiftToBottomButton: {\n            disabled: updatedFrom(() => ! Application.StickerSelectionMayBeShiftedDown),\n            onClick:  () => doShiftStickersToBottom(Application.selectedStickers),\n          },\n\n          StickerDeleteButton: {\n            disabled: updatedFrom(() => Application.selectedStickers.length === 0),\n            onClick:  () => doDeleteStickers(Application.selectedStickers),\n          },\n\n          StickerNameInput: {\n            disabled: updatedFrom(() => Application.selectedStickers.length === 0),\n            Value:    updatedFrom(() => ValueFor(Application.StickerSelectionProperties.Name)),\n            onInput: (Event:any) => doConfigureStickers(\n              Application.selectedStickers,'Name',Event.target.value\n            ),\n          },\n        },\n\n\n        ProjectConfigurationPane:{\n          IdView: {\n            readonly:true,\n            Value:updatedFrom(() => ValueFor(Application.ProjectProperties.Id)),\n          },\n          NameInput: {\n            readonly:true,\n            Value:updatedFrom(() => ValueFor(Application.ProjectProperties.Name)),\n          },\n          SnapToGridCheck: {\n            disabled:updatedFrom(() => Application.Project == null),\n            Value:updatedFrom(() => BooleanFor(Application.ProjectProperties.SnapToGrid)),\n            onInput:(Event:any) => doConfigureProject(\n              Application.Project as SNS_Project,'SnapToGrid',Event.target.checked\n            ),\n          },\n          GridWidthInput:  {\n            min:0, step:1,\n            disabled:updatedFrom(() => Application.Project == null),\n            Value:updatedFrom(() => IntegerFor(Application.ProjectProperties.GridWidth)),\n            onInput:(Event:any) => doConfigureProject(\n              Application.Project as SNS_Project,'GridWidth',parseInt(Event.target.value,10)\n            ),\n          },\n          GridHeightInput: {\n            min:0, step:1,\n            disabled:updatedFrom(() => Application.Project == null),\n            Value:updatedFrom(() => IntegerFor(Application.ProjectProperties.GridHeight)),\n            onInput:(Event:any) => doConfigureProject(\n              Application.Project as SNS_Project,'GridHeight',parseInt(Event.target.value,10)\n            ),\n          },\n          FontFamilyInput: {\n            disabled:updatedFrom(() => Application.Project == null),\n            Value:updatedFrom(() => ValueFor(Application.ProjectProperties.FontFamily)),\n            onInput:(Event:any) => doConfigureProject(\n              Application.Project as SNS_Project,'FontFamily',Event.target.value\n            ),\n          },\n          FontSizeInput: {\n            min:0, step:1,\n            disabled:updatedFrom(() => Application.Project == null),\n            Value:updatedFrom(() => IntegerFor(Application.ProjectProperties.FontSize)),\n            onInput:(Event:any) => doConfigureProject(\n              Application.Project as SNS_Project,'FontSize',parseInt(Event.target.value,10)\n            ),\n          },\n          BoldCheck: {\n            disabled:updatedFrom(() => Application.Project == null),\n            Value:updatedFrom(() => BooleanFor(Application.ProjectProperties.FontWeight,700)),\n            onInput:(Event:any) => doConfigureProject(\n              Application.Project as SNS_Project,'FontWeight',Event.target.checked ? 700 : 400\n            ),\n          },\n          ItalicCheck: {\n            disabled:updatedFrom(() => Application.Project == null),\n            Value:updatedFrom(() => BooleanFor(Application.ProjectProperties.FontStyle,'italic')),\n            onInput:(Event:any) => doConfigureProject(\n              Application.Project as SNS_Project,'FontStyle',Event.target.checked ? 'italic' : 'normal'\n            ),\n          },\n          TextColorInput: {\n            disabled:updatedFrom(() => Application.Project == null),\n            Value:updatedFrom(() => ValueFor(Application.ProjectProperties.ForegroundColor)),\n            onInput:(Event:any) => doConfigureProject(\n              Application.Project as SNS_Project,'ForegroundColor',Event.target.value\n            ),\n          },\n          LineHeightInput: {\n            min:0, step:1,\n            disabled:updatedFrom(() => Application.Project == null),\n            Value:updatedFrom(() => IntegerFor(Application.ProjectProperties.LineHeight)),\n            onInput:(Event:any) => doConfigureProject(\n              Application.Project as SNS_Project,'LineHeight',parseInt(Event.target.value,10)\n            ),\n          },\n          BackgroundColorInput: {\n            disabled:updatedFrom(() => Application.Project == null),\n            Value:updatedFrom(() => ValueFor(Application.ProjectProperties.BackgroundColor)),\n            onInput:(Event:any) => doConfigureProject(\n              Application.Project as SNS_Project,'BackgroundColor',Event.target.value\n            ),\n          },\n          TextureInput: {\n            disabled:updatedFrom(() => Application.Project == null),\n            Value:updatedFrom(() => ValueFor(Application.ProjectProperties.BackgroundTexture)),\n            onInput:(Event:any) => doConfigureProject(\n              Application.Project as SNS_Project,'BackgroundTexture',Event.target.value\n            ),\n          },\n          ValueInput: {\n            Style:'min-height:100px',\n            disabled:updatedFrom(() => Application.Project == null),\n            Value:updatedFrom(() => ValueFor(Application.ProjectProperties.editableValue)),\n            Placeholder:updatedFrom(() => '(enter a value for the currently active board)'),\n            onInput:(Event:any) => doConfigureProject(\n              Application.Project as SNS_Project,'editableValue',Event.target.value\n            ),\n          },\n          ValueEditorButton: {\n            onClick:(Event:PointerEvent) => {\n              showDialogAround('ValueEditor', Event.clientX,Event.clientY)\n              Application.ValueEditorMode = 'Project'\n            },\n          },\n        },\n\n\n        BoardConfigurationPane:{\n          IdView: {\n            readonly:true,\n            Value:updatedFrom(() => ValueFor(Application.BoardProperties.Id)),\n          },\n          NameInput: {\n            disabled:updatedFrom(() => Application.chosenBoard == null),\n            Value:updatedFrom(() => ValueFor(Application.BoardProperties.Name)),\n            onInput:(Event:any) => doConfigureBoard(\n              Application.chosenBoard as SNS_Board,'Name',Event.target.value\n            ),\n          },\n          SnapToGridCheck: {\n            disabled:updatedFrom(() => Application.chosenBoard == null),\n            Value:updatedFrom(() => BooleanFor(Application.BoardProperties.SnapToGrid)),\n            onInput:(Event:any) => doConfigureBoard(\n              Application.chosenBoard as SNS_Board,'SnapToGrid',Event.target.checked\n            ),\n          },\n          GridWidthInput:  {\n            min:0, step:1,\n            disabled:updatedFrom(() => Application.chosenBoard == null),\n            Value:updatedFrom(() => IntegerFor(Application.BoardProperties.GridWidth)),\n            onInput:(Event:any) => doConfigureBoard(\n              Application.chosenBoard as SNS_Board,'GridWidth',parseInt(Event.target.value,10)\n            ),\n          },\n          GridHeightInput: {\n            min:0, step:1,\n            disabled:updatedFrom(() => Application.chosenBoard == null),\n            Value:updatedFrom(() => IntegerFor(Application.BoardProperties.GridHeight)),\n            onInput:(Event:any) => doConfigureBoard(\n              Application.chosenBoard as SNS_Board,'GridHeight',parseInt(Event.target.value,10)\n            ),\n          },\n          FontFamilyInput: {\n            disabled:updatedFrom(() => Application.chosenBoard == null),\n            Value:updatedFrom(() => ValueFor(Application.BoardProperties.FontFamily)),\n            onInput:(Event:any) => doConfigureBoard(\n              Application.chosenBoard as SNS_Board,'FontFamily',Event.target.value\n            ),\n          },\n          FontSizeInput: {\n            min:0, step:1,\n            disabled:updatedFrom(() => Application.chosenBoard == null),\n            Value:updatedFrom(() => IntegerFor(Application.BoardProperties.FontSize)),\n            onInput:(Event:any) => doConfigureBoard(\n              Application.chosenBoard as SNS_Board,'FontSize',parseInt(Event.target.value,10)\n            ),\n          },\n          BoldCheck: {\n            disabled:updatedFrom(() => Application.chosenBoard == null),\n            Value:updatedFrom(() => BooleanFor(Application.BoardProperties.FontWeight,700)),\n            onInput:(Event:any) => doConfigureBoard(\n              Application.chosenBoard as SNS_Board,'FontWeight',Event.target.checked ? 700 : 400\n            ),\n          },\n          ItalicCheck: {\n            disabled:updatedFrom(() => Application.chosenBoard == null),\n            Value:updatedFrom(() => BooleanFor(Application.BoardProperties.FontStyle,'italic')),\n            onInput:(Event:any) => doConfigureBoard(\n              Application.chosenBoard as SNS_Board,'FontStyle',Event.target.checked ? 'italic' : 'normal'\n            ),\n          },\n          TextColorInput: {\n            disabled:updatedFrom(() => Application.chosenBoard == null),\n            Value:updatedFrom(() => ValueFor(Application.BoardProperties.ForegroundColor)),\n            onInput:(Event:any) => doConfigureBoard(\n              Application.chosenBoard as SNS_Board,'ForegroundColor',Event.target.value\n            ),\n          },\n          LineHeightInput: {\n            min:0, step:1,\n            disabled:updatedFrom(() => Application.chosenBoard == null),\n            Value:updatedFrom(() => IntegerFor(Application.BoardProperties.LineHeight)),\n            onInput:(Event:any) => doConfigureBoard(\n              Application.chosenBoard as SNS_Board,'LineHeight',parseInt(Event.target.value,10)\n            ),\n          },\n          BackgroundColorInput: {\n            disabled:updatedFrom(() => Application.chosenBoard == null),\n            Value:updatedFrom(() => ValueFor(Application.BoardProperties.BackgroundColor)),\n            onInput:(Event:any) => doConfigureBoard(\n              Application.chosenBoard as SNS_Board,'BackgroundColor',Event.target.value\n            ),\n          },\n          TextureInput: {\n            disabled:updatedFrom(() => Application.chosenBoard == null),\n            Value:updatedFrom(() => ValueFor(Application.BoardProperties.BackgroundTexture)),\n            onInput:(Event:any) => doConfigureBoard(\n              Application.chosenBoard as SNS_Board,'BackgroundTexture',Event.target.value\n            ),\n          },\n          ValueInput: {\n            Style:'min-height:100px',\n            disabled:updatedFrom(() => Application.chosenBoard == null),\n            Value:updatedFrom(() => ValueFor(Application.BoardProperties.editableValue)),\n            Placeholder:updatedFrom(() => '(enter a value for the currently active board)'),\n            onInput:(Event:any) => doConfigureBoard(\n              Application.chosenBoard as SNS_Board,'editableValue',Event.target.value\n            ),\n          },\n          ValueEditorButton: {\n            onClick:(Event:PointerEvent) => {\n              showDialogAround('ValueEditor', Event.clientX,Event.clientY)\n              Application.ValueEditorMode = 'Board'\n            },\n          },\n        },\n\n\n        StickerConfigurationPane:{\n          IdView: {\n            readonly:true,\n            Value:updatedFrom(() => ValueFor(Application.StickerSelectionProperties.Id)),\n          },\n          NameInput: {\n            disabled:updatedFrom(() => Application.selectedStickers.length === 0),\n            Value:updatedFrom(() => ValueFor(Application.StickerSelectionProperties.Name)),\n            onInput:(Event:any) => doConfigureStickers(Application.selectedStickers,'Name',Event.target.value),\n          },\n          LockCheck: {\n            disabled:updatedFrom(() => Application.selectedStickers.length === 0),\n            Value:updatedFrom(() => BooleanFor(Application.StickerSelectionProperties.Lock)),\n            onInput:(Event:any) => doConfigureStickers(Application.selectedStickers,'Lock',Event.target.checked),\n          },\n          VisibilityCheck: {\n            disabled:updatedFrom(() => Application.selectedStickers.length === 0),\n            Value:updatedFrom(() => BooleanFor(Application.StickerSelectionProperties.Visibility)),\n            onInput:(Event:any) => doConfigureStickers(Application.selectedStickers,'Visibility',Event.target.checked),\n          },\n          xInput: {\n            step:1,\n            disabled:updatedFrom(() => Application.selectedStickers.length === 0),\n            Value:updatedFrom(() => IntegerFor(Application.StickerSelectionProperties.Geometry.x)),\n            onInput:(Event:any) => doConfigureStickers(Application.selectedStickers,'x',parseInt(Event.target.value,10)),\n          },\n          yInput: {\n            step:1,\n            disabled:updatedFrom(() => Application.selectedStickers.length === 0),\n            Value:updatedFrom(() => IntegerFor(Application.StickerSelectionProperties.Geometry.y)),\n            onInput:(Event:any) => doConfigureStickers(Application.selectedStickers,'y',parseInt(Event.target.value,10)),\n          },\n          WidthInput:  {\n            min:0, step:1,\n            disabled:updatedFrom(() => Application.selectedStickers.length === 0),\n            Value:updatedFrom(() => IntegerFor(Application.StickerSelectionProperties.Geometry.Width)),\n            onInput:(Event:any) => doConfigureStickers(Application.selectedStickers,'Width',parseInt(Event.target.value,10)),\n          },\n          HeightInput: {\n            min:0, step:1,\n            disabled:updatedFrom(() => Application.selectedStickers.length === 0),\n            Value:updatedFrom(() => IntegerFor(Application.StickerSelectionProperties.Geometry.Height)),\n            onInput:(Event:any) => doConfigureStickers(Application.selectedStickers,'Height',parseInt(Event.target.value,10)),\n          },\n          IndexView: {\n            readonly:true,\n            Value:updatedFrom(() => IntegerFor(Application.StickerSelectionProperties.Index)),\n          },\n          ShiftToTopButton: {\n            disabled:updatedFrom(() => ! Application.StickerSelectionMayBeShiftedDown),\n            onClick:() => doShiftStickersToBottom(Application.selectedStickers),\n          },\n          ShiftUpButton: {\n            disabled:updatedFrom(() => ! Application.StickerSelectionMayBeShiftedDown),\n            onClick:() => doShiftStickersDown(Application.selectedStickers),\n          },\n          ShiftDownButton: {\n            disabled:updatedFrom(() => ! Application.StickerSelectionMayBeShiftedUp),\n            onClick:() => doShiftStickersUp(Application.selectedStickers),\n          },\n          ShiftToBottomButton: {\n            disabled:updatedFrom(() => ! Application.StickerSelectionMayBeShiftedUp),\n            onClick:() => doShiftStickersToTop(Application.selectedStickers),\n          },\n          FontFamilyInput: {\n            disabled:updatedFrom(() => Application.selectedStickers.length === 0),\n            Value:updatedFrom(() => ValueFor(Application.StickerSelectionProperties.FontFamily)),\n            onInput:(Event:any) => doConfigureStickers(Application.selectedStickers,'FontFamily',Event.target.value),\n          },\n          FontSizeInput: {\n            min:0, step:1,\n            disabled:updatedFrom(() => Application.selectedStickers.length === 0),\n            Value:updatedFrom(() => IntegerFor(Application.StickerSelectionProperties.FontSize)),\n            onInput:(Event:any) => doConfigureStickers(Application.selectedStickers,'FontSize',parseInt(Event.target.value,10)),\n          },\n          BoldCheck: {\n            disabled:updatedFrom(() => Application.selectedStickers.length === 0),\n            Value:updatedFrom(() => BooleanFor(Application.StickerSelectionProperties.FontWeight,700)),\n            onInput:(Event:any) => doConfigureStickers(\n              Application.selectedStickers,'FontWeight',Event.target.checked ? 700 : 400\n            ),\n          },\n          ItalicCheck: {\n            disabled:updatedFrom(() => Application.selectedStickers.length === 0),\n            Value:updatedFrom(() => BooleanFor(Application.StickerSelectionProperties.FontStyle,'italic')),\n            onInput:(Event:any) => doConfigureStickers(\n              Application.selectedStickers,'FontStyle',Event.target.checked ? 'italic' : 'normal'\n            ),\n          },\n          TextColorInput: {\n            disabled:updatedFrom(() => Application.selectedStickers.length === 0),\n            Value:updatedFrom(() => ValueFor(Application.StickerSelectionProperties.ForegroundColor)),\n            onInput:(Event:any) => doConfigureStickers(Application.selectedStickers,'ForegroundColor',Event.target.value),\n          },\n          LineHeightInput: {\n            min:0, step:1,\n            disabled:updatedFrom(() => Application.selectedStickers.length === 0),\n            Value:updatedFrom(() => IntegerFor(Application.StickerSelectionProperties.LineHeight)),\n            onInput:(Event:any) => doConfigureStickers(Application.selectedStickers,'LineHeight',parseInt(Event.target.value,10)),\n          },\n          BackgroundColorInput: {\n            disabled:updatedFrom(() => Application.selectedStickers.length === 0),\n            Value:updatedFrom(() => ValueFor(Application.StickerSelectionProperties.BackgroundColor)),\n            onInput:(Event:any) => doConfigureStickers(Application.selectedStickers,'BackgroundColor',Event.target.value),\n          },\n          TextureInput: {\n            disabled:updatedFrom(() => Application.selectedStickers.length === 0),\n            Value:updatedFrom(() => ValueFor(Application.StickerSelectionProperties.BackgroundTexture)),\n            onInput:(Event:any) => doConfigureStickers(Application.selectedStickers,'BackgroundTexture',Event.target.value),\n          },\n          EnablingCheck: {\n            disabled:updatedFrom(() => Application.selectedStickers.length === 0),\n            Value:updatedFrom(() => BooleanFor(Application.StickerSelectionProperties.Enabling)),\n            onInput:(Event:any) => doConfigureStickers(Application.selectedStickers,'Enabling',Event.target.checked),\n          },\n          ValueInput: {\n            Style:'min-height:100px',\n            disabled:updatedFrom(() => Application.selectedStickers.length === 0),\n            Value:updatedFrom(() => ValueFor(Application.StickerSelectionProperties.editableValue)),\n            Placeholder:updatedFrom(() => '(enter a common value for all currently selected stickers)'),\n            onInput:(Event:any) => doConfigureStickers(Application.selectedStickers,'editableValue',Event.target.value),\n          },\n          ValueEditorButton: {\n            onClick:(Event:PointerEvent) => {\n              showDialogAround('ValueEditor', Event.clientX,Event.clientY)\n              Application.ValueEditorMode = 'Stickers'\n            },\n          },\n        },\n        },\n      })\n//  PUX.packScreen('MainScreen')\n    PUX.startWithScreen('MainScreen')\n  PUX.renderInto(document.body)\n\n  const BoardViewWidget = PUX.existingWidgetNamed('BoardView').View\n\n//----------------------------------------------------------------------------//\n//                          Inspector Pane Handling                           //\n//----------------------------------------------------------------------------//\n\n/**** setInspectorPaneGroup ****/\n\n  function setInspectorPaneGroup (PaneGroup:'Project'|'Board'|'Stickers'):void {\n    if (\n      (PaneGroup === 'Stickers') &&\n      (Application.InspectorPaneChoice === 'Browser')\n    ) {\n      Application.InspectorPaneChoice = 'Configuration'\n    }\n\n    Application.InspectorPaneGroup = PaneGroup\n    updateInspectorPane()\n  }\n\n/**** setInspectorPaneChoice ****/\n\n  function setInspectorPaneChoice (PaneChoice:'Browser'|'Configuration'):void {\n    if (\n      (Application.InspectorPaneGroup === 'Stickers') &&\n      (PaneChoice === 'Browser')\n    ) { PaneChoice = 'Configuration'}\n\n    Application.InspectorPaneChoice = PaneChoice\n    updateInspectorPane()\n  }\n\n/**** updateInspectorPane ****/\n\n  function updateInspectorPane ():void {\n    const PaneIndexSet:Indexable = {\n      Project: { Browser:0, Configuration:2 },\n      Board:   { Browser:1, Configuration:3 },\n      Stickers:{ Browser:1, Configuration:4 },\n    }\n\n    const PaneGroup  = Application.InspectorPaneGroup\n    const PaneChoice = Application.InspectorPaneChoice\n    Application.InspectorPaneIndex = PaneIndexSet[PaneGroup][PaneChoice]\n  }\n\n/**** showDialogAround ****/\n\n  function showDialogAround (DialogName:string, x:number, y:number):void {\n    let Dialog:Indexable = PUX.existingDialogNamed(DialogName)\n    if ((Dialog.x === -1) && (Dialog.y === -1)) {\n      const { Width,Height } = Dialog\n\n      const MainScreen = PUX.existingScreenNamed('MainScreen')\n      const { width:maxX,height:maxY } = MainScreen.View.base.getBoundingClientRect()\n\n      Dialog.x = Math.max(0, Math.min(x, maxX-Width))\n      Dialog.y = Math.max(0, Math.min(y, maxY-Height))\n    }\n\n    PUX.openDialog(DialogName)\n  }\n\n/**** showDialogCentered ****/\n\n  function showDialogCentered (DialogName:string):void {\n    let Dialog:Indexable = PUX.existingDialogNamed(DialogName)\n    if ((Dialog.x === -1) && (Dialog.y === -1)) {\n      const { Width,Height } = Dialog\n\n      const MainScreen = PUX.existingScreenNamed('MainScreen')\n      const { width:ScreenWidth,height:ScreenHeight } = MainScreen.View.base.getBoundingClientRect()\n\n      Dialog.x = Math.max(0, Math.round( (ScreenWidth-Width)/2))\n      Dialog.y = Math.max(0, Math.round((ScreenHeight-Height)/2))\n    }\n\n    PUX.openDialog(DialogName)\n  }\n\n//------------------------------------------------------------------------------\n//--                              User Commands                               --\n//------------------------------------------------------------------------------\n\n/**** doCreateProject ****/\n\n  async function doCreateProject (Name:SNS_Name):Promise<void> {\n    switch (true) {\n      case (Name == null):      return withWarning('no \"Name\" given')\n      case ! ValueIsName(Name): return withWarning('invalid \"Name\" given')\n//    case ProjectExists(Name)\n    }\n\n    if (PersistenceIsPending()) {\n      persistProject()\n    }\n\n    await createPersistedProject(Name)\n    await openPersistedProject(Name)\n    PUX.closeDialog('ProjectBrowser')\n  }\n\n/**** doOpenProject ****/\n\n  async function doOpenProject (Name:SNS_Name):Promise<void> {\n    switch (true) {\n      case (Name == null):      return withWarning('no \"Name\" given')\n      case ! ValueIsName(Name): return withWarning('invalid \"Name\" given')\n//    case ! ProjectExists(Name)\n    }\n\n    if (PersistenceIsPending()) {\n      persistProject()\n    }\n\n    await openPersistedProject(Name)\n    PUX.closeDialog('ProjectBrowser')\n  }\n\n/**** doRenameProject ****/\n\n  function doRenameProject (oldName:SNS_Name, newName:SNS_Name):void {\n    switch (true) {\n      case (oldName == null):      return withWarning('no \"oldName\" given')\n      case ! ValueIsName(oldName): return withWarning('invalid \"oldName\" given')\n      case (newName == null):      return withWarning('no \"newName\" given')\n      case ! ValueIsName(newName): return withWarning('invalid \"newName\" given')\n      case (oldName === newName):  return withWarning('\"oldName\" and \"newName\" are identical')\n//    case ! ProjectExists(oldName)\n//    case ProjectExists(newName)\n    }\n\n    if (OperationWasConfirmed(\n      'Do you really want to rename project ' + quoted(oldName) + ' to ' +\n      quoted(newName) + '?'\n    )) {\n      renamePersistedProjectTo(oldName,newName)\n    }\n  }\n\n/**** doPurgeProject ****/\n\n  function doPurgeProject (Name:SNS_Name):void {\n    switch (true) {\n      case (Name == null):      return withWarning('no \"Name\" given')\n      case ! ValueIsName(Name): return withWarning('invalid \"Name\" given')\n//    case ! ProjectExists(oldName)\n    }\n\n    if (OperationWasConfirmed(\n      'Do you really want to delete project ' + quoted(Name) + '?'\n    )) {\n      purgePersistedProject(Name)\n    }\n  }\n\n/**** doSwitchMode ****/\n\n  function doSwitchMode ():void {\n    const currentMode = Application.Mode\n    Application.Mode = (currentMode === 'edit' ? 'run' : 'edit')\n  }\n\n/**** doConfigureProject ****/\n\n  function doConfigureProject (\n    Project:SNS_Project, PropertyName:SNS_Identifier, PropertyValue:any\n  ):void {\n    switch (true) {\n      case (Project == null):                       return withWarning('no \"Project\" given')\n      case ! (PropertyName in SNS_ProjectDefaults): return withWarning('unknown project property ' + quoted(PropertyName))\n    }\n\n    doOperation(new SNS_ProjectConfigurationOperation(\n      Project, PropertyName, PropertyValue\n    ))\n  }\n\n/**** doApplyProjectScript ****/\n\n  function doApplyProjectScript (Project:SNS_Project):void {\n    switch (true) {\n      case (Project == null): return withWarning('no \"Project\" given')\n    }\n\n    applyPendingScriptOfVisual(Project)\n  }\n\n/**** doWithdrawProjectScript ****/\n\n  function doWithdrawProjectScript (Project:SNS_Project):void {\n    switch (true) {\n      case (Project == null): return withWarning('no \"Project\" given')\n    }\n\n    doOperation(new SNS_ProjectConfigurationOperation(\n      Project, 'pendingScript', undefined\n    ))\n    Project.ScriptError = undefined\n  }\n\n/**** doCreateNewBoard ****/\n\n  function doCreateNewBoard (BoardList:SNS_Board[]):void {\n    switch (true) {\n      case ! ValueIsListSatisfying(BoardList,ValueIsBoard):\n        return withWarning('the given \"BoardList\" contains invalid elements',BoardList)\n      case BoardList.some((Board:SNS_Board) => ! Board.isAttached):\n        return withWarning('some boards in the given \"BoardList\" are no longer attached',BoardList)\n    }\n\n    let Folder:SNS_Folder, Index:number\n\n    if (BoardList.length > 0) {\n      Folder = BoardList[0].Folder as SNS_Folder\n      Index  = bottommostIndexOfBoards(BoardList)+1\n    } else {\n      const chosenBoard = Application.chosenBoard\n      if (chosenBoard == null) {\n        Folder = Application.Project as SNS_Folder\n        Index  = 0\n      } else {\n        Folder = chosenBoard.Folder as SNS_Folder\n        Index  = chosenBoard.Index+1\n      }\n    }\n\n    doOperation(new SNS_BoardDeserializationOperation(\n      Folder, [{}], Index\n    ))\n  }\n\n/**** doDuplicateBoards ****/\n\n  function doDuplicateBoards (BoardList:SNS_Board[]):void {\n    switch (true) {\n      case ! ValueIsListSatisfying(BoardList,ValueIsBoard):\n        return withWarning('the given \"BoardList\" contains invalid elements',BoardList)\n      case BoardList.some((Board:SNS_Board) => ! Board.isAttached):\n        return withWarning('some boards in the given \"BoardList\" are no longer attached',BoardList)\n    }\n\n    const sortedBoards:SNS_Board[] = BoardsSortedByIndex(BoardList)\n\n    const Folder:SNS_Folder = commonFolderOfBoards(BoardList)       // may fail!\n\n    const Serializations:Serializable[] = sortedBoards.map(\n      (Board:SNS_Board) => Board.Serialization\n    )\n    const Index = BoardList[BoardList.length-1].Index+1\n\n    doOperation(new SNS_BoardDeserializationOperation(\n      Folder, Serializations, Index\n    ))\n  }\n\n/**** doConfigureBoard ****/\n\n  function doConfigureBoard (\n    Board:SNS_Board, PropertyName:SNS_Identifier, PropertyValue:any\n  ):void {\n    switch (true) {\n      case (Board == null):                       return withWarning('no \"Board\" given')\n      case ! Board.isAttached:                    return withWarning('the given \"Board\" is no longer attached')\n      case ! (PropertyName in SNS_BoardDefaults): return withWarning('unknown board property ' + quoted(PropertyName))\n    }\n\n    doOperation(new SNS_BoardConfigurationOperation(\n      Board, PropertyName, PropertyValue\n    ))\n  }\n\n/**** doApplyBoardScript ****/\n\n  function doApplyBoardScript (Board:SNS_Board):void {\n    switch (true) {\n      case (Board == null):    return withWarning('no \"Board\" given')\n      case ! Board.isAttached: return withWarning('the given \"Board\" is no longer attached')\n    }\n\n    applyPendingScriptOfVisual(Board)\n  }\n\n/**** doWithdrawBoardScript ****/\n\n  function doWithdrawBoardScript (Board:SNS_Board):void {\n    switch (true) {\n      case (Board == null):    return withWarning('no \"Board\" given')\n      case ! Board.isAttached: return withWarning('the given \"Board\" is no longer attached')\n    }\n\n    doOperation(new SNS_BoardConfigurationOperation(\n      Board, 'pendingScript', undefined\n    ))\n    Board.ScriptError = undefined\n  }\n\n/**** doShiftBoardsIn ****/\n\n  function doShiftBoardsIn (BoardList:SNS_Board[]):void {\n    switch (true) {\n      case ! ValueIsListSatisfying(BoardList,ValueIsBoard):\n        return withWarning('the given \"BoardList\" contains invalid elements',BoardList)\n      case BoardList.some((Board:SNS_Board) => ! Board.isAttached):\n        return withWarning('some boards in the given \"BoardList\" are no longer attached',BoardList)\n    }\n\n    const Folder:SNS_Folder                 = commonFolderOfBoards(BoardList) // may fail!\n    const sortedBoards:SNS_Board[]          = BoardsSortedByIndex(BoardList)\n    const TargetFolder:SNS_Folder|undefined = Folder.Board(bottommostIndexOfBoards(BoardList)+1)\n      if (TargetFolder == null) { return withWarning('the given boards can not be shifted in') }\n\n    doOperation(new SNS_BoardMoveOperation(\n      Folder,sortedBoards, TargetFolder,0\n    ))\n\n    if (Application.expandedBoards.indexOf(TargetFolder as SNS_Board) < 0) {\n      Application.expandedBoards = Application.expandedBoards.concat(TargetFolder as SNS_Board)\n    }\n  }\n\n/**** doShiftBoardsOut ****/\n\n  function doShiftBoardsOut (BoardList:SNS_Board[]):void {\n    switch (true) {\n      case ! ValueIsListSatisfying(BoardList,ValueIsBoard):\n        return withWarning('the given \"BoardList\" contains invalid elements',BoardList)\n      case BoardList.some((Board:SNS_Board) => ! Board.isAttached):\n        return withWarning('some boards in the given \"BoardList\" are no longer attached',BoardList)\n    }\n\n    const Folder:SNS_Folder                 = commonFolderOfBoards(BoardList)\n    const sortedBoards:SNS_Board[]          = BoardsSortedByIndex(BoardList)\n    const TargetFolder:SNS_Folder|undefined = Folder.Folder\n      if (TargetFolder == null) { return withWarning('the given boards can not be shifted out') }\n\n    doOperation(new SNS_BoardMoveOperation(\n      Folder,sortedBoards, TargetFolder,Folder.Index\n    ))\n  }\n\n/**** doShiftBoardsUp ****/\n\n  function doShiftBoardsUp (BoardList:SNS_Board[]):void {\n    switch (true) {\n      case ! ValueIsListSatisfying(BoardList,ValueIsBoard):\n        return withWarning('the given \"BoardList\" contains invalid elements',BoardList)\n      case BoardList.some((Board:SNS_Board) => ! Board.isAttached):\n        return withWarning('some boards in the given \"BoardList\" are no longer attached',BoardList)\n    }\n\n    const sortedBoards:SNS_Board[] = BoardsSortedByIndex(BoardList)\n\n    const Folder:SNS_Folder  = commonFolderOfBoards(BoardList)\n    const newIndex:number    = Math.max(0,topmostIndexOfBoards(BoardList)-1)\n    const IndexList:number[] = sortedBoards.map((_:any,i:number) => newIndex+i)\n\n    doOperation(new SNS_BoardShiftOperation(Folder,sortedBoards,IndexList))\n  }\n\n/**** doShiftBoardsDown ****/\n\n  function doShiftBoardsDown (BoardList:SNS_Board[]):void {\n    switch (true) {\n      case ! ValueIsListSatisfying(BoardList,ValueIsBoard):\n        return withWarning('the given \"BoardList\" contains invalid elements',BoardList)\n      case BoardList.some((Board:SNS_Board) => ! Board.isAttached):\n        return withWarning('some boards in the given \"BoardList\" are no longer attached',BoardList)\n    }\n\n    const sortedBoards:SNS_Board[] = BoardsSortedByIndex(BoardList)\n\n    const Folder:SNS_Folder  = commonFolderOfBoards(BoardList)\n    const newIndex:number    = Math.min(bottommostIndexOfBoards(BoardList)+1,Folder.BoardCount-1)+1-BoardList.length\n    const IndexList:number[] = sortedBoards.map((_:any,i:number) => newIndex+i)\n\n    doOperation(new SNS_BoardShiftOperation(Folder,sortedBoards,IndexList))\n  }\n\n/**** doDeleteBoards ****/\n\n  function doDeleteBoards (BoardList:SNS_Board[]):void {\n    switch (true) {\n      case ! ValueIsListSatisfying(BoardList,ValueIsBoard):\n        return withWarning('the given \"BoardList\" contains invalid elements',BoardList)\n      case BoardList.some((Board:SNS_Board) => ! Board.isAttached):\n        return withWarning('some boards in the given \"BoardList\" are no longer attached',BoardList)\n    }\n\n    doOperation(new SNS_BoardDeletionOperation(\n      BoardsSortedByIndex(BoardList)\n    ))\n  }\n\n/**** doCreateNewSticker ****/\n\n  function doCreateNewSticker (BehaviorName:SNS_Identifier):void {\n    const Board = Application.chosenBoard\n\n    switch (true) {\n      case (BehaviorName == null):            return withWarning('no \"BehaviorName\" given')\n      case ! ValueIsIdentifier(BehaviorName): return withWarning('invalid \"BehaviorName\" given')\n      case (Board == null):                   return withWarning('there is currently no chosen board')\n// @ts-ignore TS18048 \"Board\" is obviously *not* undefined here\n      case ! Board.isAttached:                return withWarning('the chosen board is no longer attached')\n    }\n\n    const selectedStickers = Application.selectedStickers\n\n    const Index = (selectedStickers.length === 0\n      ? Board.StickerCount\n      : bottommostIndexOfStickers(selectedStickers)+1\n    )\n\n    doOperation(new SNS_StickerDeserializationOperation(\n      Board, [TemplateOfBehavior(BehaviorName)], Index\n    ))\n  }\n\n/**** doDuplicateStickers ****/\n\n  function doDuplicateStickers (StickerList:SNS_Sticker[]):void {\n    const Board = Application.chosenBoard\n\n    switch (true) {\n      case ! ValueIsListSatisfying(StickerList,ValueIsSticker):\n        return withWarning('the given \"StickerList\" contains invalid elements',StickerList)\n      case StickerList.some((Sticker:SNS_Sticker) => ! Sticker.isAttached):\n        return withWarning('some stickers in the given \"StickerList\" are no longer attached',StickerList)\n      case (StickerList.length === 0):\n        return withWarning('the given \"StickerList\" is empty')\n      case (Board == null):    return withWarning('there is currently no chosen board')\n// @ts-ignore TS18048 \"Board\" is obviously *not* undefined here\n      case ! Board.isAttached: return withWarning('the chosen board is no longer attached')\n    }\n\n    const Serializations:Serializable[] = StickersSortedByIndex(StickerList).map(\n      (Sticker:SNS_Sticker) => Sticker.Serialization\n    )\n    const Index = bottommostIndexOfStickers(StickerList)+1\n\n    doOperation(new SNS_StickerDeserializationOperation(\n      Board, Serializations, Index\n    ))\n\n  /**** sticker offset is currently a separate operation ****/\n\n    const StickerDuplicates = Application.selectedStickers\n    if (StickerDuplicates.length > 0) {\n      const DuplicateGeometries = StickerDuplicates.map(\n        (Sticker:SNS_Sticker) => {\n          const Geometry = Sticker.Geometry\n            Geometry.x += 20\n            Geometry.y += 20\n          return Geometry\n        }\n      )\n      doChangeStickerGeometries(StickerDuplicates,DuplicateGeometries)\n    }\n  }\n\n/**** doConfigureStickers ****/\n\n  function doConfigureStickers (\n    StickerList:SNS_Sticker[], PropertyName:SNS_Identifier, PropertyValue:any\n  ):void {\n    switch (true) {\n      case ! ValueIsListSatisfying(StickerList,ValueIsSticker):\n        return withWarning('the given \"StickerList\" contains invalid elements',StickerList)\n      case StickerList.some((Sticker:SNS_Sticker) => ! Sticker.isAttached):\n        return withWarning('some stickers in the given \"StickerList\" are no longer attached',StickerList)\n      case (StickerList.length === 0):\n        return withWarning('the given \"StickerList\" is empty')\n      case ! (PropertyName in SNS_StickerDefaults) && (\n        (PropertyName !== 'x') && (PropertyName !== 'Width') &&\n        (PropertyName !== 'y') && (PropertyName !== 'Height')\n      ):\n        return withWarning('unknown sticker property ' + quoted(PropertyName))\n    }\n\n    doOperation(new SNS_StickerConfigurationOperation(\n      StickerList, PropertyName, PropertyValue\n    ))\n  }\n\n/**** doApplyStickerScript ****/\n\n  function doApplyStickerScript (StickerList:SNS_Sticker[]):void {\n    switch (true) {\n      case ! ValueIsListSatisfying(StickerList,ValueIsSticker):\n        return withWarning('the given \"StickerList\" contains invalid elements',StickerList)\n      case StickerList.some((Sticker:SNS_Sticker) => ! Sticker.isAttached):\n        return withWarning('some stickers in the given \"StickerList\" are no longer attached',StickerList)\n      case (StickerList.length === 0):\n        return withWarning('the given \"StickerList\" is empty')\n    }\n\n    StickerList.forEach(\n      (Sticker:SNS_Sticker) => applyPendingScriptOfVisual(Sticker)\n    )\n  }\n\n/**** doWithdrawStickerScript ****/\n\n  function doWithdrawStickerScript (StickerList:SNS_Sticker[]):void {\n    switch (true) {\n      case ! ValueIsListSatisfying(StickerList,ValueIsSticker):\n        return withWarning('the given \"StickerList\" contains invalid elements',StickerList)\n      case StickerList.some((Sticker:SNS_Sticker) => ! Sticker.isAttached):\n        return withWarning('some stickers in the given \"StickerList\" are no longer attached',StickerList)\n      case (StickerList.length === 0):\n        return withWarning('the given \"StickerList\" is empty')\n    }\n\n    doOperation(new SNS_StickerConfigurationOperation(\n      StickerList, 'pendingScript', undefined\n    ))\n\n    StickerList.forEach((Sticker:SNS_Sticker) => {\n      Sticker.ScriptError = undefined\n    })\n  }\n\n/**** doChangeStickerGeometries ****/\n\n  function doChangeStickerGeometries (\n    StickerList:SNS_Sticker[], GeometryList:SNS_Geometry[]\n  ):void {\n    switch (true) {\n      case ! ValueIsListSatisfying(StickerList,ValueIsSticker):\n        return withWarning('the given \"StickerList\" contains invalid elements',StickerList)\n      case StickerList.some((Sticker:SNS_Sticker) => ! Sticker.isAttached):\n        return withWarning('some stickers in the given \"StickerList\" are no longer attached',StickerList)\n      case (StickerList.length === 0):\n        return withWarning('the given \"StickerList\" is empty')\n      case ! ValueIsListSatisfying(GeometryList,ValueIsGeometry):\n        return withWarning('the given \"GeometryList\" contains invalid elements',GeometryList)\n      case (StickerList.length !== GeometryList.length):\n        return withWarning('the given \"StickerList\" and \"GeometryList\" do not match',StickerList,GeometryList)\n    }\n\n    doOperation(new SNS_StickerShapeOperation(\n      StickerList, GeometryList\n    ))\n  }\n\n/**** doShiftStickersToTop ****/\n\n  function doShiftStickersToTop (StickerList:SNS_Sticker[]):void {\n    switch (true) {\n      case ! ValueIsListSatisfying(StickerList,ValueIsSticker):\n        return withWarning('the given \"StickerList\" contains invalid elements',StickerList)\n      case StickerList.some((Sticker:SNS_Sticker) => ! Sticker.isAttached):\n        return withWarning('some stickers in the given \"StickerList\" are no longer attached',StickerList)\n      case (StickerList.length === 0):\n        return withWarning('the given \"StickerList\" is empty')\n    }\n\n    doOperation(new SNS_StickerShiftOperation(\n      StickersSortedByIndex(StickerList),\n      StickerList.map((_:any,i:number) => i)\n    ))\n  }\n\n/**** doShiftStickersUp ****/\n\n  function doShiftStickersUp (StickerList:SNS_Sticker[]):void {\n    switch (true) {\n      case ! ValueIsListSatisfying(StickerList,ValueIsSticker):\n        return withWarning('the given \"StickerList\" contains invalid elements',StickerList)\n      case StickerList.some((Sticker:SNS_Sticker) => ! Sticker.isAttached):\n        return withWarning('some stickers in the given \"StickerList\" are no longer attached',StickerList)\n      case (StickerList.length === 0):\n        return withWarning('the given \"StickerList\" is empty')\n    }\n\n    const sortedStickers:SNS_Sticker[] = StickersSortedByIndex(StickerList)\n\n    const newIndex:number     = Math.max(0,topmostIndexOfStickers(StickerList)-1)\n    const IndexList:number[] = sortedStickers.map((_:any,i:number) => newIndex+i)\n\n    doOperation(new SNS_StickerShiftOperation(sortedStickers,IndexList))\n  }\n\n/**** doShiftStickersDown ****/\n\n  function doShiftStickersDown (StickerList:SNS_Sticker[]):void {\n    switch (true) {\n      case ! ValueIsListSatisfying(StickerList,ValueIsSticker):\n        return withWarning('the given \"StickerList\" contains invalid elements',StickerList)\n      case StickerList.some((Sticker:SNS_Sticker) => ! Sticker.isAttached):\n        return withWarning('some stickers in the given \"StickerList\" are no longer attached',StickerList)\n      case (StickerList.length === 0):\n        return withWarning('the given \"StickerList\" is empty')\n    }\n\n    const sortedStickers:SNS_Sticker[] = StickersSortedByIndex(StickerList)\n\n    const Board:SNS_Board|undefined = commonBoardOfStickers(StickerList)\n    if (Board == null) { return withWarning('the given stickers do not share the same folder') }\n\n    const newIndex:number    = Math.min(bottommostIndexOfStickers(StickerList)+1,Board.StickerCount-1)+1-StickerList.length\n    const IndexList:number[] = sortedStickers.map((_:any,i:number) => newIndex+i)\n\n    doOperation(new SNS_StickerShiftOperation(sortedStickers,IndexList))\n  }\n\n/**** doShiftStickersToBottom ****/\n\n  function doShiftStickersToBottom (StickerList:SNS_Sticker[]):void {\n    switch (true) {\n      case ! ValueIsListSatisfying(StickerList,ValueIsSticker):\n        return withWarning('the given \"StickerList\" contains invalid elements',StickerList)\n      case StickerList.some((Sticker:SNS_Sticker) => ! Sticker.isAttached):\n        return withWarning('some stickers in the given \"StickerList\" are no longer attached',StickerList)\n      case (StickerList.length === 0):\n        return withWarning('the given \"StickerList\" is empty')\n    }\n\n    const sortedStickers:SNS_Sticker[] = StickersSortedByIndex(StickerList)\n\n    const Board:SNS_Board|undefined = commonBoardOfStickers(StickerList)\n    if (Board == null) { return withWarning('the given stickers do not share the same folder') }\n\n    const newIndex:number    = Board.StickerCount-StickerList.length\n    const IndexList:number[] = sortedStickers.map((_:any,i:number) => newIndex+i)\n\n    doOperation(new SNS_StickerShiftOperation(sortedStickers,IndexList))\n  }\n\n/**** doShiftStickers **** /\n\n  function doShiftStickers (StickerList:SNS_Sticker[], IndexList:number[]):void {\n    switch (true) {\n      case ! ValueIsListSatisfying(StickerList,ValueIsSticker):\n        return withWarning('the given \"StickerList\" contains invalid elements',StickerList)\n      case StickerList.some((Sticker:SNS_Sticker) => ! Sticker.isAttached):\n        return withWarning('some stickers in the given \"StickerList\" are no longer attached',StickerList)\n      case (StickerList.length === 0):\n        return withWarning('the given \"StickerList\" is empty')\n      case ! ValueIsListSatisfying(IndexList,(Value:any) => ValueIsListSatisfying(Value,ValueIsOrdinal)):\n        return withWarning('the given \"IndexList\" contains invalid elements',GeometryList)\n      case (StickerList.length !== IndexList.length):\n        return withWarning('the given \"StickerList\" and \"IndexList\" do not match',StickerList,GeometryList)\n    }\n\n    const Auxiliary:Indexable[] = StickerList.map(\n      (Sticker:SNS_Sticker, i:number) => ({\n        Sticker, oldIndex:Sticker.Index, newIndex:IndexList[i]\n      })\n    )\n      Auxiliary.sort(\n        (EntryA:Indexable,EntryB:Indexable) => EntryA.oldIndex-EntryB.oldIndex\n      )\n    const sortedStickers:SNS_Sticker[] = Auxiliary.map(\n      (Entry:Indexable) => Entry.Sticker\n    )\n    const sortedIndices:number[] = Auxiliary.map(\n      (Entry:Indexable) => Entry.newIndex\n    )\n\n    doOperation(new SNS_StickerShiftOperation(sortedStickers,sortedIndices))\n  }\n*/\n/**** doDeleteStickers ****/\n\n  function doDeleteStickers (StickerList:SNS_Sticker[]):void {\n    switch (true) {\n      case ! ValueIsListSatisfying(StickerList,ValueIsSticker):\n        return withWarning('the given \"StickerList\" contains invalid elements',StickerList)\n      case StickerList.some((Sticker:SNS_Sticker) => ! Sticker.isAttached):\n        return withWarning('some stickers in the given \"StickerList\" are no longer attached',StickerList)\n      case (StickerList.length === 0):\n        return withWarning('the given \"StickerList\" is empty')\n    }\n\n    doOperation(new SNS_StickerDeletionOperation(\n      StickersSortedByIndex(StickerList)\n    ))\n  }\n\n/**** doCutStickers ****/\n\n  function doCutStickers (StickerList:SNS_Sticker[]):void {\n    switch (true) {\n      case ! ValueIsListSatisfying(StickerList,ValueIsSticker):\n        return withWarning('the given \"StickerList\" contains invalid elements',StickerList)\n      case StickerList.some((Sticker:SNS_Sticker) => ! Sticker.isAttached):\n        return withWarning('some stickers in the given \"StickerList\" are no longer attached',StickerList)\n      case (StickerList.length === 0):\n        return withWarning('the given \"StickerList\" is empty')\n    }\n\n    Shelf.splice(0,Shelf.length)\n\n    StickerList = StickersSortedByIndex(StickerList)\n\n    StickerList.forEach((Sticker:SNS_Sticker) => {\n      const Serialization = Sticker.Serialization\n      Shelf.push(Serialization)\n    })\n\n    doDeleteStickers(StickerList)\n\n    Application.ShelfIsFilled = (Shelf.length > 0)\n  }\n\n/**** doCopyStickers ****/\n\n  function doCopyStickers (StickerList:SNS_Sticker[]):void {\n    switch (true) {\n      case ! ValueIsListSatisfying(StickerList,ValueIsSticker):\n        return withWarning('the given \"StickerList\" contains invalid elements',StickerList)\n      case StickerList.some((Sticker:SNS_Sticker) => ! Sticker.isAttached):\n        return withWarning('some stickers in the given \"StickerList\" are no longer attached',StickerList)\n      case (StickerList.length === 0):\n        return withWarning('the given \"StickerList\" is empty')\n    }\n\n    Shelf.splice(0,Shelf.length)\n\n    StickerList = StickersSortedByIndex(StickerList)\n\n    StickerList.forEach((Sticker:SNS_Sticker) => {\n      const Serialization = Sticker.Serialization\n      removeIdsFrom(Serialization)\n      Shelf.push(Serialization)\n    })\n\n    Application.ShelfIsFilled = (Shelf.length > 0)\n  }\n\n/**** doPasteStickers ****/\n\n  function doPasteStickers ():void {\n    switch (true) {\n      case ! Application.ShelfIsFilled: return withWarning('shelf is empty')\n    }\n\n    const Board = Application.chosenBoard\n    if (Board == null) { return withWarning('there is curently no chosen board') }\n\n    doOperation(new SNS_StickerDeserializationOperation(\n      Board, Shelf.slice(), Board.StickerCount\n    ))\n  }\n\n/**** doPasteStickersAround ****/\n\n  function doPasteStickersAround (x:number, y:number):void {\n    switch (true) {\n      case ! Application.ShelfIsFilled: return withWarning('shelf is empty')\n    }\n\n    const Board = Application.chosenBoard\n    if (Board == null) { return withWarning('there is curently no chosen board') }\n\n    doOperation(new SNS_StickerDeserializationOperation(\n      Board, Shelf.slice(), Board.StickerCount\n    ))\n\n  /**** sticker offset is currently a separate operation ****/\n\n    const pastedStickers = Application.selectedStickers\n    const { minX,minY }  = topLeftPositionOfStickers(pastedStickers)\n\n    const dX = x-minX\n    const dY = y-minY\n\n    const pastedGeometries = pastedStickers.map(\n      (Sticker:SNS_Sticker) => {\n        const Geometry = Sticker.Geometry\n          Geometry.x += dX\n          Geometry.y += dY\n        return Geometry\n      }\n    )\n\n    doChangeStickerGeometries(pastedStickers,pastedGeometries)\n  }\n\n/**** doUndoOperation ****/\n\n  function doUndoOperation ():void {\n    undoOperation()\n  }\n\n/**** doRedoOperation ****/\n\n  function doRedoOperation ():void {\n    redoOperation()\n  }\n\n/**** doVisitPrevBoard ****/\n\n  function doVisitPrevBoard ():void {\n    visitPrevBoard()\n  }\n\n/**** doVisitNextBoard ****/\n\n  function doVisitNextBoard ():void {\n    visitNextBoard()\n  }\n\n/**** doVisitBoard ****/\n\n  function doVisitBoard (Board:SNS_Board|undefined):void {\n    switch (true) {\n      case (Board == null):    break\n// @ts-ignore TS18048 \"Board\" is obviously *not* undefined here\n      case ! Board.isAttached: return withWarning('the given \"Board\" is no longer attached')\n    }\n\n    visitBoard(Board)\n  }\n\n/**** doImport ****/\n\n  function doImport (File:any):void {\n      let Reader = new FileReader()\n        Reader.onabort = function LoadAborted () { alert('import was aborted') }\n        Reader.onerror = function LoadFailed ()  { alert('import failed') }\n        Reader.onload  = function FileLoaded (Event) {\n          let FileValue = (new TextDecoder()).decode(Reader.result as ArrayBuffer)\nconsole.log('Reader.onload')\n          const chosenProject = Application.Project\n          if (chosenProject == null) { return }\n\n          const chosenBoard = Application.chosenBoard\n          try {\n            let Serialization:Serializable = JSON.parse(FileValue)\n            if (ValueIsArray(Serialization)) {\n              if (chosenBoard == null) {\n                window.alert('please prepare a board to import stickers into')\n                return\n              }\n\n// @ts-ignore TS2721 \"Serialization\" is not null\n              Serialization.forEach(  // assign new ids to any imported stickers\n                (Serialization:Serializable) => removeIdsFrom(Serialization)\n              )\n\n// @ts-ignore TS2721 \"map\" exists\n              const importedStickers:SNS_Sticker[] = Serialization.map(\n                (Serialization:Serializable) => chosenBoard.StickerDeserializedAt(Serialization)\n              )\n              importedStickers.forEach(\n                (Sticker:SNS_Sticker) => Sticker.activateScript()\n              )\n\n              selectStickers(importedStickers)\n\n              return\n            }\n\n          /**** if Serialization looks like a board, import that ****/\n\n            if (Serialization.StickerList != null) {\n              if (chosenProject == null) {\n                window.alert('please prepare a project to import this board into')\n                return\n              }\n\n              const Folder = (chosenBoard == null ? chosenProject : chosenBoard.Folder)\n              const Index  = (chosenBoard == null ? 0 : chosenBoard.Index+1)\n\n              removeIdsFrom(Serialization) // assign new ids to board & stickers\n\n// @ts-ignore TS18048 \"Folder\" is not null\n              const importedBoard = Folder.BoardDeserializedAt(Serialization,Index)\n              importedBoard.recursivelyActivateAllScripts()\n\n              visitBoard(importedBoard)\n\n              return\n            }\n\n          /**** Serialization looks like a complete project ****/\n\n            if ((chosenBoard == null) || OperationWasConfirmed()) {\n              chosenProject.clear()\n                Object.keys(SNS_ProjectDefaults).forEach((Property:string) => {\n                  if ((Property !== 'Id') && (Property !== 'Name')) {\n                    if (Serialization[Property] != null) {\n                      chosenProject[Property] = Serialization[Property]\n                    }\n                  }\n                })\n              if (ValueIsArray(Serialization.BoardList)) {\n// @ts-ignore TS2721 \"Serialization.BoardList\" exists\n                Serialization.BoardList.forEach(\n// @ts-ignore TS2322 (I don't understand the error message)\n                  (Serialization:Serializable) => chosenProject.BoardDeserializedAt(Serialization)\n                )\n              }\n\n              chosenProject.recursivelyActivateAllScripts()\n            }\n          } catch (Signal) {\n            console.error(Signal)\n            alert('import failed')\n          }\n        }\n      Reader.readAsArrayBuffer(File)\n  }\n\n/**** doExport ****/\n\n  function doExport (\n    Scope:'whole Project'|'active Board'|'selected Stickers'\n  ):void {\n    let JSONObject:Serializable, FileName:string\n      switch (Scope) {\n        case 'whole Project':\n          const Project = Application.Project\n          if (Project == null) { return withWarning('there is currently no active project') }\n\n          FileName   = Project.Name || 'SNS-Project'\n          JSONObject = Project.Serialization\n          break\n        case 'active Board':\n          const chosenBoard = Application.chosenBoard\n          if (chosenBoard == null) { return withWarning('there is currently no chosen board') }\n\n          FileName   = chosenBoard.Name || 'SNS-Board'\n          JSONObject = chosenBoard.Serialization\n          break\n        case 'selected Stickers': default:\n          const selectedStickers = Application.selectedStickers\n          if (selectedStickers.length === 0) {\n            return withWarning('there are currently no selected stickers')\n          }\n\n          FileName   = 'SNS-Stickers'\n// @ts-ignore TS2322 (I don't understand the error message)\n          JSONObject = selectedStickers.map(\n            (Sticker:SNS_Sticker) => Sticker.Serialization\n          )\n      }\n    const serialisedExport = JSON.stringify(JSONObject)\n\n    const encodedExport = (new TextEncoder()).encode(serialisedExport)\n    const decodedExport = (new TextDecoder()).decode(encodedExport)\n    if (serialisedExport === decodedExport) {\n      download(encodedExport, FileName + '.json', 'application/json;charset=utf-8')\n    } else {\n      window.alert('this export is not safe')\n    }\n  }\n\n/**** doGenerateAppletFromBoard ****/\n\n  function doGenerateAppletFromBoard (\n    Board:SNS_Board, Mode:'standalone'|'embeddable'\n  ):void {\n    switch (true) {\n      case (Board == null):    return withWarning('no \"Board\" given')\n      case ! Board.isAttached: return withWarning('the given \"Board\" is no longer attached')\n    }\n\n    generateAppletFromBoard(Board,Mode)\n  }\n\n/**** doGenerateAppletFromBoardAndSuccessors ****/\n\n  function doGenerateAppletFromBoardAndSuccessors (\n    Board:SNS_Board, Mode:'standalone'|'embeddable'\n  ):void {\n    switch (true) {\n      case (Board == null):    return withWarning('no \"Board\" given')\n      case ! Board.isAttached: return withWarning('the given \"Board\" is no longer attached')\n    }\n\n    generateAppletFromBoardAndSuccessors(Board,Mode)\n  }\n\n/**** doGenerateAppletFromStickers ****/\n\n  function doGenerateAppletFromStickers (\n    StickerList:SNS_Sticker[], Mode:'standalone'|'embeddable'\n  ):void {\n    switch (true) {\n      case ! ValueIsListSatisfying(StickerList,ValueIsSticker):\n        return withWarning('the given \"StickerList\" contains invalid elements',StickerList)\n      case StickerList.some((Sticker:SNS_Sticker) => ! Sticker.isAttached):\n        return withWarning('some stickers in the given \"StickerList\" are no longer attached',StickerList)\n      case (StickerList.length === 0):\n        return // no warning as there is no disabling of this command entry yet\n//      return withWarning('the given \"StickerList\" is empty')\n    }\n\n    generateAppletFromStickers(StickerList,Mode)\n  }\n\n/**** doPrintBoard ****/\n\n  function doPrintBoard ():void {\n    switch (true) {\n      case (Application.chosenBoard == null): return withWarning('there is currently no chosen board')\n    }\n\n    window.print()\n  }\n\n//----------------------------------------------------------------------------//\n//                           Confirmation Handling                            //\n//----------------------------------------------------------------------------//\n\n  function OperationWasConfirmed (Message?:string):boolean {\n    let ConformationCode = Math.round(Math.random()*10000).toString()\n      ConformationCode += '0000'.slice(ConformationCode.length)\n\n    Message = (Message || 'This operation can not be undone.') + '\\n\\n' +\n      'Please, enter the following number if you want to proceed:\\n\\n' +\n      '   ' + ConformationCode + '\\n\\n' +\n      'Otherwise, the operation will be cancelled'\n\n    let UserInput = window.prompt(Message,'')\n    if (UserInput === ConformationCode) {\n      return true\n    } else {\n      window.alert('Operation will be cancelled')\n      return false\n    }\n  }\n\n//----------------------------------------------------------------------------//\n//                            Persistence Handling                            //\n//----------------------------------------------------------------------------//\n\n  let ProjectStore:any\n\n/**** SerializationOfEmptyProject ****/\n\n  function SerializationOfEmptyProject (Name:SNS_Name):Serializable {\n    return {\n      Id:newId(), Name:Name,\n      SnapToGrid:false, GridWidth:10, GridHeight:10,\n      BoardList:[{\n        Id:newId()\n      }]\n    }\n  }\n\n/**** fetchPersistedProjectList - alphabetically sorted ****/\n\n  async function fetchPersistedProjectList ():Promise<void> {\n    let persistedProjectList\n      try {\n        persistedProjectList = (await ProjectStore.keys()).sort() as SNS_Name[]\n      } catch (Signal:any) {\n        console.warn('could not fetch names of persisted projects',Signal)\n      }\n    Application.persistedProjectList = persistedProjectList\n\n    let normalizedProjectList = Application.persistedProjectList.map(\n      (Name:SNS_Name) => Name.toLowerCase()\n    )\n    Application.normalizedProjectList = normalizedProjectList\n\n    if (Application.selectedProjectName != null) {\n      let selectedProjectIndex = normalizedProjectList.indexOf(\n        Application.selectedProjectName.toLowerCase()\n      )\n\n      if (selectedProjectIndex < 0) {\n        Application.selectedProjectName  = undefined\n        Application.selectedProjectIndex = undefined\n      } else {\n        Application.selectedProjectName  = persistedProjectList[selectedProjectIndex]\n        Application.selectedProjectIndex = selectedProjectIndex\n      }\n    }\n  }\n\n/**** createPersistedProject ****/\n\n  async function createPersistedProject (Name:SNS_Name):Promise<void> {\n    let normalizedName = Name.toLowerCase()\n\n    if (Application.normalizedProjectList.indexOf(normalizedName) >= 0) throwError(\n      'ProjectExists: a project named ' + quoted(Name) + ' exists already'\n    )\n\n    const Serialization = SerializationOfEmptyProject(Name)\n    try {\n      await ProjectStore.setItem(\n        Name,JSON.stringify(Serialization)\n      )\n    } catch (Signal:any) {\n      throwError(\n        'PersistenceWriteError: could not write project ' + quoted(Name) + ', ' +\n        'reason: ' + Signal\n      )\n    }\n\n    await fetchPersistedProjectList()\n\n    Application.selectedProjectName  = Name\n    Application.selectedProjectIndex = Application.normalizedProjectList.indexOf(normalizedName)\n  }\n\n/**** renamePersistedProjectTo ****/\n\n  async function renamePersistedProjectTo (\n    oldName:SNS_Name, newName:SNS_Name\n  ):Promise<void> {\n    await fetchPersistedProjectList()\n\n    let normalizedProjectList = Application.normalizedProjectList\n    if (normalizedProjectList.indexOf(oldName.toLowerCase()) < 0) throwError(\n      'NoSuchProject: a project named ' + quoted(oldName) + ' does not exist'\n    )\n\n    if (normalizedProjectList.indexOf(newName.toLowerCase()) >= 0) throwError(\n      'ProjectExists: a project named ' + quoted(newName) + ' exists already'\n    )\n\n    let Serialization:Serializable = {}\n    try {\n      Serialization = JSON.parse(await ProjectStore.getItem(oldName))\n    } catch (Signal:any) {\n      throwError(\n        'PersistenceReadError: could not read project ' + quoted(oldName) + ', ' +\n        'reason: ' + Signal\n      )\n    }\n\n    Serialization.Name = newName\n\n    try {\n      await ProjectStore.setItem(newName,JSON.stringify(Serialization))\n    } catch (Signal:any) {\n      throwError(\n        'PersistenceWriteError: could not write project ' + quoted(newName) + ', ' +\n        'reason: ' + Signal\n      )\n    }\n\n    try {\n      await ProjectStore.removeItem(oldName)\n    } catch (Signal:any) {\n      throwError(\n        'PersistenceWriteError: could not delete project ' + quoted(oldName) + ', ' +\n        'reason: ' + Signal\n      )\n    }\n\n    if (Application.selectedProjectName != null) {\n      if (Application.selectedProjectName.toLowerCase() === oldName.toLowerCase()) {\n        Application.selectedProjectName = newName\n      }\n    }\n    await fetchPersistedProjectList()              // also updates any selection\n  }\n\n/**** openPersistedProject ****/\n\n  async function openPersistedProject (Name:SNS_Name):Promise<void> {\n    await fetchPersistedProjectList()\n\n    let normalizedProjectList = Application.normalizedProjectList\n    if (normalizedProjectList.indexOf(Name.toLowerCase()) < 0) throwError(\n      'NoSuchProject: a project named ' + quoted(Name) + ' does not exist'\n    )\n\n    let Serialization:Serializable = {}\n    try {\n      Serialization = JSON.parse(await ProjectStore.getItem(Name))\n    } catch (Signal:any) {\n      throwError(\n        'PersistenceReadError: could not read project ' + quoted(Name) + ', ' +\n        'reason: ' + Signal\n      )\n    }\n\n    try {\n      Application.Project = SNS_Project.deserializedFrom(Name,Serialization)\n\n      Application.Project.onChange(ProjectChangeCallback)\n      Application.Project.onRender(ProjectRenderCallback)\n\n      Application.Project.onError(ProjectErrorCallback)\n\n      Application.Project.recursivelyActivateAllScripts()\nwindow['Project'] = Application.Project // just for testing\n\n      hideDesignerTools()\n    } catch (Signal:any) {\n      throwError(\n        'DeserializationError: could not deserialize project ' + quoted(Name) + ', ' +\n        'reason: ' + Signal\n      )\n    }\n  }\n\n/**** purgePersistedProject ****/\n\n  async function purgePersistedProject (Name:SNS_Name):Promise<void> {\n    try {\n      await ProjectStore.removeItem(Name)\n    } catch (Signal:any) {\n      throwError(\n        'PersistenceWriteError: could not delete project ' + quoted(Name) + ', ' +\n        'reason: ' + Signal\n      )\n    }\n\n    if (Application.selectedProjectName != null) {\n      if (Application.selectedProjectName.toLowerCase() === Name.toLowerCase()) {\n        Application.selectedProjectName = Name\n      }\n    }\n    await fetchPersistedProjectList()              // also updates any selection\n  }\n\n/**** triggerPersistenceFor ****/\n\n  function triggerPersistenceFor (Project:SNS_Project):void {\n    Application.ProjectToPersist = Project               // the actual \"trigger\"\n\n    if (Application.DelayTimer == null) {\n      Application.DelayTimer      = setTimeout(persistProject,1*1000)\n      Application.DelayLimitTimer = setTimeout(persistProject,60*1000)\n    } else {\n      clearTimeout(Application.DelayTimer)\n      Application.DelayTimer = setTimeout(persistProject,1*1000)\n    }\n  }\n\n/**** untriggerPersistence ****/\n\n  function untriggerPersistence ():void {\n    Application.ProjectToPersist = undefined\n\n    if (Application.DelayTimer != null) {\n      clearTimeout(Application.DelayTimer)\n      Application.DelayTimer = undefined\n    }\n\n    if (Application.DelayLimitTimer != null) {\n      clearTimeout(Application.DelayLimitTimer)\n      Application.DelayLimitTimer = undefined\n    }\n  }\n\n/**** PersistenceIsPending ****/\n\n  function PersistenceIsPending ():boolean {\n    return (Application.ProjectToPersist != null)\n  }\n\n/**** persistProject ****/\n\n  async function persistProject ():Promise<void> {\n    const Project = Application.ProjectToPersist as SNS_Project\n    untriggerPersistence()\n\n    if (Application.PersistenceState === 'running') {\n      Application.PersistenceRequested = true\n    }\n    Application.PersistenceRequested = false\n\n    Application.PersistenceState = 'running'\n      try {\n        await ProjectStore.setItem(\n          Project.Name, JSON.stringify(Project.Serialization)\n        )\n        Application.PersistenceState = 'idle'\n      } catch (Signal:any) {\n        throwError(\n          'PersistenceFailure: could not persist project ' +\n          quoted(Project.Name as string)\n        )\n        Application.PersistenceState = 'failed'\n      }\n//  Application.PersistenceState = 'idle'\n\n    if (Application.PersistenceRequested) {\n      persistProject()\n    }\n  }\n\n/**** ProjectNameIsAvailable ****/\n\n  function ProjectNameIsAvailable (Name:string):boolean {\n    return (\n      ValueIsName(Application.ProjectName) &&\n      (Application.normalizedProjectList.indexOf(Name.toLowerCase()) < 0)\n    )\n  }\n\n/**** ProjectIsOpen ****/\n\n  function ProjectIsOpen (Name:string):boolean {\n    return (\n      (Application.Project != null) &&\n      ((Application.Project.Name as string).toLowerCase() !== Name.toLowerCase())\n    )\n  }\n\n/**** ProjectChangeCallback ****/\n\n  function ProjectChangeCallback (\n    Project:SNS_Project, Change:SNS_Change, ...ArgList:any[]\n  ):void {\n    triggerPersistenceFor(Project)\n\n    switch (Change) {\n//    case 'createBoard':    // Board\n      case 'attachBoard':    // Board, Folder, Index\n      case 'detachBoard':    // Board, Folder, Index\n        Application.BoardTree = Project.BoardList\n        Application.BoardTreeState++\n        return\n      case 'configureFolder': // Board, Property, Value\n        if (ArgList[1] === 'Name') { Application.BoardTreeState++ }\n        switch (ArgList[0]) {\n          case Application.Project:\n            Application.ProjectProperties = PropertiesOfProject(Project)\n            Application.BoardProperties   = PropertiesOfBoard(Application.chosenBoard)\n            Application.StickerSelectionProperties = PropertiesOfStickers(Application.selectedStickers)\n            Application.ViewState++\nconsole.log('Application.ViewState++')\n            return\n          case Application.chosenBoard:\n            Application.BoardProperties = PropertiesOfBoard(Application.chosenBoard)\n            Application.StickerSelectionProperties = PropertiesOfStickers(Application.selectedStickers)\n            Application.ViewState++\nconsole.log('Application.ViewState++')\n            return\n          default:\n            if (ArgList[0].containsFolder(Application.chosenBoard)) {\n              Application.BoardProperties = PropertiesOfBoard(Application.chosenBoard)\n              Application.StickerSelectionProperties = PropertiesOfStickers(Application.selectedStickers)\n              Application.ViewState++\nconsole.log('Application.ViewState++')\n            }\n        }\n        return\n//    case 'destroyBoard': // Board\n\n//    case 'createSticker': // Sticker\n      case 'attachSticker': // Sticker, Board, Index\n      case 'detachSticker': // Sticker, Board, Index\n        if (ArgList[1] === Application.chosenBoard) {\n          Application.StickerList = (Application.chosenBoard as SNS_Board).StickerList\n          Application.ViewState++\nconsole.log('Application.ViewState++')\n        }\n        return\n      case 'configureSticker': // Sticker, Property, Value\n        if (ArgList[0].Board === Application.chosenBoard) {\n          const selectedStickers = Application.selectedStickers\n\n          if (ArgList[1] === 'Geometry') {\n            Application.StickerSelectionGeometries = selectedStickers.map(\n              (Sticker:SNS_Sticker) => Sticker.Geometry\n            )\n          }\n          Application.StickerSelectionProperties = PropertiesOfStickers(selectedStickers)\n          Application.ViewState++\nconsole.log('Application.ViewState++')\n        }\n        return\n//    case 'destroySticker':   // Sticker\n    }\n  }\n\n/**** ProjectRenderCallback ****/\n\n  function ProjectRenderCallback (\n    Project:SNS_Project, Board:SNS_Board|undefined, Sticker:SNS_Sticker|undefined\n  ):void {\n    if ((Board === Application.chosenBoard) || (Application.chosenBoard == null)) {\nconsole.log('ProjectRenderCallback')\n      BoardViewWidget.rerender()\n    }\n  }\n\n/**** ProjectErrorCallback ****/\n\n  function ProjectErrorCallback (\n    Project:SNS_Project, Visual:SNS_Visual, Error:SNS_Error\n  ):void {\n    window.alert(\n      Error.Type + '\\n' + Error.Message + '\\n' + Error.Cause\n    )\n  }\n\n//------------------------------------------------------------------------------\n//--                          Choices and Selections                          --\n//------------------------------------------------------------------------------\n\n/**** selectBoards ****/\n\n  function selectBoards (BoardList:SNS_Board[]):void {\n    expectListSatisfying('list of boards to be selected',BoardList, ValueIsBoard)\n    if (BoardList.length === 0) {\n      Application.selectedBoards = []\n      return\n    }\n\n    try {\n// @ts-ignore TS6133 \"commonFolderOfBoards\" checks common folder\n      const Folder:SNS_Folder = commonFolderOfBoards(BoardList)     // may fail!\n\n      const BoardSet:Set<SNS_Board> = new Set()\n        BoardList.forEach((Board:SNS_Board) => BoardSet.add(Board))\n      Application.selectedBoards = BoardsSortedByIndex(\n        Array.from(BoardSet.values())\n      )\n    } catch (Signal:any) {\n      Application.selectedBoards = []\n      console.error('InternalError:selected boards do not share the same folder')\n    }\n  }\n\n/**** _chooseBoard - never call directly, use \"visitBoard\" instead ****/\n\n  function _chooseBoard (Board:SNS_Board|undefined):void {\n    Application.chosenBoard = (\n      (Board != null) && Board.isAttached\n      ? Board\n      : undefined\n    )\n  }\n\n/**** selectStickers ****/\n\n  function selectStickers (StickerList:SNS_Sticker[]):void {\n    if (StickerList.length === 0) {\n      Application.selectedStickers = []\n      return\n    }\n\n    const StickerSet:Set<SNS_Sticker> = new Set()\n      const chosenBoard = Application.chosenBoard\n\n      StickerList.forEach((Sticker:SNS_Sticker) => {\n        if (Sticker.isAttached && (Sticker.Board === chosenBoard)) {\n          StickerSet.add(Sticker)\n        }\n      })\n    Application.selectedStickers = StickersSortedByIndex(\n      Array.from(StickerSet.values())\n    )\n  }\n\n//------------------------------------------------------------------------------\n//--                            Operation History                             --\n//------------------------------------------------------------------------------\n\n  const OperationHistory:SNS_Operation[] = []\n  let   OperationIndex:number            = 0  // points to next doable operation\n\n/**** doOperation ****/\n\n  function doOperation (Operation:SNS_Operation):any {\n    clearInspectorMessage()\n\n    if (OperationIndex < OperationHistory.length) {\n      OperationHistory.length = OperationIndex\n    }\n\n    let Result:any\n      const prevOperation = OperationHistory[OperationIndex-1]\n      if ((prevOperation != null) && Operation.canExtend(prevOperation)) {\n        Result = Operation.extend(prevOperation)                     // may fail\n\n        if (prevOperation.isIrrelevant) {\n          OperationIndex -= 1                               // only upon success\n        }\n      } else {\n        Result = Operation.doNow()                                   // may fail\n        OperationHistory.push(Operation)                    // only upon success\n        OperationIndex += 1\n      }\n\n      Application.OperationHistoryState++\n    return Result\n  }\n\n/**** undoOperation ****/\n\n  function undoOperation ():any {\n    clearInspectorMessage()\n\n    let prevOperation = OperationHistory[OperationIndex-1]\n    if (prevOperation != null) {\n      const Result:any = prevOperation.undo()\n      OperationIndex -= 1                                   // only upon success\n\n      Application.OperationHistoryState++\n      return Result\n    }\n  }\n\n/**** redoOperation ****/\n\n  function redoOperation ():any {\n    clearInspectorMessage()\n\n    let nextOperation = OperationHistory[OperationIndex]\n    if (nextOperation != null) {\n      const Result:any = nextOperation.redo()\n      OperationIndex += 1                                   // only upon success\n\n      Application.OperationHistoryState++\n      return Result\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                                  Shelf                                   --\n//------------------------------------------------------------------------------\n\n  const Shelf:Serializable[] = []\n\n//------------------------------------------------------------------------------\n//--                              Visit History                               --\n//------------------------------------------------------------------------------\n\n  let VisitHistory:SNS_Board[] = []\n  let VisitIndex:number        = -1         // points to currently visited board\n\n/**** visitPrev/NextBoard ****/\n\n  function visitPrevBoard ():void {\n    if (Application.mayVisitPrevBoard) {\n      VisitIndex -= 1\n      _chooseBoard(VisitHistory[VisitIndex])\n\n      Application.VisitHistoryState++\n    }\n  }\n\n  function visitNextBoard ():void {\n    if (Application.mayVisitNextBoard) {\n      VisitIndex += 1\n      _chooseBoard(VisitHistory[VisitIndex])\n\n      Application.VisitHistoryState++\n    }\n  }\n\n/**** visitBoard ****/\n\n  function visitBoard (Board:SNS_Board|undefined):void {\n    if (Board == null) {\n      _chooseBoard(undefined)\n\n      VisitHistory.length = 0\n      VisitIndex          = -1\n    } else {\n      const visitedBoard = VisitHistory[VisitIndex]\n      if (visitedBoard === Board) { return }\n\n      if (Application.mayVisitNextBoard) {\n        VisitIndex += 1\n        if (VisitHistory[VisitIndex] !== Board) {\n          VisitHistory[VisitIndex] = Board\n          VisitHistory.length = VisitIndex+1\n        }\n      } else {\n        VisitHistory.push(Board)\n        VisitIndex += 1\n      }\n      _chooseBoard(Board)\n    }\n\n    Application.VisitHistoryState++\n  }\n\n/**** validateVisitHistory ****/\n\n  function validateVisitHistory ():void {\n    for (let i = VisitHistory.length-1; i >= 0; i--) {\n      if ((VisitHistory[i] == null) || ! VisitHistory[i].isAttached) {\n        if (VisitIndex >= i) { VisitIndex -= 1 }\n      }\n    }\n    if ((VisitIndex < 0) && (VisitHistory.length > 0)) {\n      VisitIndex = 0\n    }\n\n    visitBoard(VisitHistory[VisitIndex] || Application.Project?.BoardList[0])\n  }\n\n//------------------------------------------------------------------------------\n//--                                 Console                                  --\n//------------------------------------------------------------------------------\n\n  const ConsoleCharLimit = 1050000            // a bit more than 2^20 characters\n  const ConsoleLineLimit = 20000\n\n  let ConsoleLineCount:number = 0\n  let ConsoleCharCount:number = 0\n\n/**** showConsole ****/\n\n  function showConsole ():void {\n    PUX.openDialog('Console')\n  }\n\n/**** hideConsole ****/\n\n  function hideConsole ():void {\n    PUX.closeDialog('Console')\n  }\n\n/**** clearConsole ****/\n\n  function clearConsole ():void {\n    Application.ConsoleValue = ''\n\n    ConsoleLineCount = 0\n    ConsoleCharCount = 0\n  }\n\n/**** print ****/\n\n  function print (...ArgList:any[]):void {\n    appendToConsole(StringFromArguments(ArgList))\n  }\n\n/**** println ****/\n\n  function println (...ArgList:any[]):void {\n    appendToConsole(StringFromArguments(ArgList.concat('\\n')))\n  }\n\n/**** appendToConsole ****/\n\n  function appendToConsole (fullText):void {\n    if (fullText === '') { return }                      // nothing to be output\n\n    let LineCount:number = EOLCount(fullText)\n    let CharCount:number = fullText.length\n\n    if ((LineCount > ConsoleLineLimit) || (CharCount > ConsoleCharLimit)) {\n      clearConsole()\n\n      fullText = compacted(fullText, LineCount, CharCount)\n        ConsoleLineCount = EOLCount(fullText)+1      // count first line as well\n        ConsoleCharCount = fullText.length\n      Application.ConsoleValue = fullText\n    } else {\n      compactFor(LineCount, CharCount)\n\n      ConsoleLineCount += LineCount\n      ConsoleCharCount += CharCount\n\n      Application.ConsoleValue += fullText\n    }\n  }\n\n/**** compacted ****/\n\n  function compacted (Candidate:string, LineCount:number, CharCount:number):string {\n    let LinesToSkip:number = LineCount-ConsoleLineLimit\n    let CharsToSkip:number = CharCount-ConsoleCharLimit\n\n    for (let EOLCount = 0, curIndex = -1;;) {\n      curIndex = Candidate.indexOf('\\n',curIndex+1)            // must be <> -1!\n      EOLCount += 1\n\n      if ((EOLCount >= LinesToSkip) && (curIndex >= CharsToSkip)) {\n        return Candidate.slice(curIndex+1)\n      }\n    }\n  }\n\n/**** compactFor ****/\n\n  function compactFor (LineCount:number, CharCount:number):void {\n    let LinesToSkip:number = ConsoleLineCount+LineCount - ConsoleLineLimit\n    let CharsToSkip:number = ConsoleCharCount+CharCount - ConsoleCharLimit\n\n    if ((LinesToSkip <= 0) && (CharsToSkip <= 0)) { return }\n\n    let Content:string = Application.Console.Value\n    for (let EOLCount = 0, curIndex = -1;;) {\n      curIndex = Content.indexOf('\\n',curIndex+1)                // might be -1!\n      if (curIndex < 0) {                   // no more EOLs, just a loooong line\n        clearConsole()\n        return\n      }\n\n      EOLCount += 1\n\n      if ((EOLCount >= LinesToSkip) && (curIndex-EOLCount*28 >= CharsToSkip)) {\n        Application.Console.Value = Content.slice(curIndex+1)\n        return\n      }\n    }\n  }\n\n/**** EOLCount ****/\n\n  function EOLCount (Candidate:string):number {\n    let MatchList:any[]|null = Candidate.match(/\\n/g)\n    return (MatchList === null ? 0 : MatchList.length)\n  }\n\n/**** StringFromArguments ****/\n\n  function StringFromArguments (ArgList:any[]):string {\n    let Result:string = ''\n      for (let i = 0; i < ArgList.length; i++) {\n        let Argument:any = ArgList[i]\n        switch (typeof(Argument)) {\n          case 'undefined': Result += '(undefined)';       break\n          case 'boolean':   Result += Argument.toString(); break\n          case 'number':    Result += Argument.toString(); break\n          case 'string':    Result += Argument;            break\n          case 'function':  Result += '(function)';        break\n          case 'object':    Result += (\n                              Argument === null ? '(null)' : Argument.toString()\n                            );                             break\n          default:          Result += '(unknown)';         break\n        }\n      }\n    return Result\n  }\n\n  Object.assign(window,{ Console:{\n    show:showConsole, hide:hideConsole,\n    clear:clearConsole, print:print, println:println\n  } })\n\n//------------------------------------------------------------------------------\n//--                            Applet Generation                             --\n//------------------------------------------------------------------------------\n\n/**** generateAppletFromBoard ****/\n\n  function generateAppletFromBoard (\n    Board:SNS_Board, Mode:'standalone'|'embeddable'\n  ):void {\n    const AppletName = (\n      Board.Name || Board.Project.Name ||\n      'Note-Stickers Applet'\n    )\n\n    let minWidth:number = 0, minHeight:number = 0\n      Board.StickerList.forEach((Sticker:SNS_Sticker) => {\n        const { Width,Height } = Sticker\n        if (minWidth  < Width)   { minWidth = Width }\n        if (minHeight < Height) { minHeight = Height }\n      })\n    const AppletSerialization = {\n      x:0, y:0, Width:minWidth, Height:minHeight,\n      BoardList: [Board.Serialization]\n    }\n\n    if (Mode === 'standalone') {\n      downloadStandaloneApplet(AppletName, AppletSerialization)\n    } else {\n      downloadEmbeddableApplet(AppletName, AppletSerialization)\n    }\n  }\n\n/**** generateAppletFromBoardAndSuccessors ****/\n\n  function generateAppletFromBoardAndSuccessors (\n    Board:SNS_Board, Mode:'standalone'|'embeddable'\n  ):void {\n    const AppletName = (\n      Board.Name || Board.Project.Name ||\n      'Note-Stickers Applet'\n    )\n\n    const BoardList = (Board.Folder as SNS_Folder).BoardList.slice(Board.Index)\n\n    let minWidth:number = 0, minHeight:number = 0\n      BoardList.forEach((Board:SNS_Board) => {\n        Board.StickerList.forEach((Sticker:SNS_Sticker) => {\n          const { Width,Height } = Sticker\n          if (minWidth  < Width)   { minWidth = Width }\n          if (minHeight < Height) { minHeight = Height }\n        })\n      })\n    const AppletSerialization = {\n      x:0, y:0, Width:minWidth, Height:minHeight,\n      BoardList:BoardList.map((Board:SNS_Board) => Board.Serialization)\n    }\n\n    if (Mode === 'standalone') {\n      downloadStandaloneApplet(AppletName, AppletSerialization)\n    } else {\n      downloadEmbeddableApplet(AppletName, AppletSerialization)\n    }\n  }\n\n/**** generateAppletFromStickers ****/\n\n  function generateAppletFromStickers (\n    Stickers:SNS_Sticker[], Mode:'standalone'|'embeddable'\n  ):void {\n    const Board:SNS_Board|undefined = commonBoardOfStickers(Stickers)\n    if (Board == null) { return }\n\n    const sortedStickers = StickersSortedByIndex(Stickers)\n    const AppletName = (\n      sortedStickers[0].Name || Board.Name || Board.Project.Name ||\n      'Note-Stickers Applet'\n    )\n\n    const serializedStickers = sortedStickers.map((Sticker:SNS_Sticker) => Sticker.Serialization)\n      let [ minX,minY, maxX,maxY ] = [ Infinity,Infinity, 0,0 ]\n        serializedStickers.forEach((Serialization:Serializable) => {\n          const { x,y, Width,Height } = Serialization.Geometry as SNS_Geometry\n          minX = Math.min(minX,x);  maxX = Math.max(maxX,x+Width)\n          minY = Math.min(minY,y);  maxY = Math.max(maxY,y+Height)\n        })\n      serializedStickers.forEach((Serialization:Serializable) => {\n        ;(Serialization.Geometry as SNS_Geometry).x -= minX\n        ;(Serialization.Geometry as SNS_Geometry).y -= minY\n      })\n      const Width  = maxX-minX\n      const Height = maxY-minY\n    const AppletSerialization = {\n      x:0, y:0, Width, Height,\n      BoardList: [{\n        StickerList:serializedStickers,\n        activeScript:Board.activeScript,\n      }]\n    }\n\n    if (Mode === 'standalone') {\n// @ts-ignore TS2345 allow simplified serialization\n      downloadStandaloneApplet(AppletName, AppletSerialization)\n    } else {\n// @ts-ignore TS2345 allow simplified serialization\n      downloadEmbeddableApplet(AppletName, AppletSerialization)\n    }\n  }\n\n/**** downloadStandaloneApplet ****/\n\n  function downloadStandaloneApplet (\n    AppletName:SNS_Textline, AppletSerialization:Serializable\n  ):void {\n    const AppletSource:string = `\n<!DOCTYPE html>\n<html lang=\"en\" charset=\"utf-8\" style=\"width:100%\">\n <head>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\n\n  <meta name=\"viewport\" content=\"minimal-ui, width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\"/>\n\n  <meta name=\"apple-mobile-web-app-capable\"          content=\"yes\"/>\n  <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\"/>\n  <meta name=\"format-detection\"                      content=\"telephone=no\">\n\n  <style name=\"mobile-prologue\">\n    html {\n      text-size-adjust: 100%;\n      -moz-text-size-adjust: 100%;\n      -webkit-text-size-adjust: 100%;\n      -o-text-size-adjust: 100%;\n      -ms-text-size-adjust: 100%;\n    }\n\n    html, body { width:100%; height:100%; width:100vw; height:100vh; margin:0px; padding:0px }\n    html       { overflow:hidden scroll }\n  </style>\n  ${'<'}script src=\"https://rozek.github.io/note-stickers-runtime/dist/note-stickers-runtime.js\">${'<'}/script>\n  ${'<'}script type=\"Note-Stickers\" name=\"${AppletName}\">\n${JSON.stringify(AppletSerialization)}\n  ${'<'}/script>\n </head>\n <body type=\"Note-Stickers\" name=\"${AppletName}\">\n </body>\n</html>\n    `.trim()\n\n    const encodedSource = (new TextEncoder()).encode(AppletSource)\n    const decodedSource = (new TextDecoder()).decode(encodedSource)\n    if (AppletSource === decodedSource) {\n      download(encodedSource, AppletName + '.html', 'text/html;charset=utf-8')\n    } else {\n      window.alert('this applet generation is not stable')\n    }\n  }\n\n/**** downloadEmbeddableApplet ****/\n\n  function downloadEmbeddableApplet (\n    AppletName:SNS_Textline, AppletSerialization:Serializable\n  ):void {\n    const AppletSource:string = `\n  ${'<'}script type=\"Note-Stickers\" name=\"${AppletName}\">\n${JSON.stringify(AppletSerialization)}\n  ${'<'}/script>\n  <div type=\"Note-Stickers\" name=\"${AppletName}\">\n  </div>\n    `.trim()\n\n    const encodedSource = (new TextEncoder()).encode(AppletSource)\n    const decodedSource = (new TextDecoder()).decode(encodedSource)\n    if (AppletSource === decodedSource) {\n      download(encodedSource, AppletName + '.html', 'text/html;charset=utf-8')\n    } else {\n      window.alert('this applet generation is not stable')\n    }\n  }\n\n//------------------------------------------------------------------------------\n//--                             Message Handling                             --\n//------------------------------------------------------------------------------\n\n/**** clearInspectorMessage ****/\n\n  function clearInspectorMessage ():void {\n    Application.InspectorMessage = ''\n  }\n\n/**** setInspectorMessage ****/\n\n  function setInspectorMessage (newMessage:string):void {\n    Application.InspectorMessage = newMessage.trim()\n  }\n\n/**** clearScriptEditorMessage **** /\n\n  function clearScriptEditorMessage ():void {\n    Application.ScriptEditorMessage = ''\n  }\n*/\n/**** setScriptEditorMessage **** /\n\n  function setScriptEditorMessage (newMessage:string):void {\n    Application.ScriptEditorMessage = newMessage.trim()\n  }\n*/\n//------------------------------------------------------------------------------\n//--                                Reactivity                                --\n//------------------------------------------------------------------------------\n\n/**** observe \"chosenProject\" ****/\n\n  computed(() => {                                 // chosenProject -> BoardTree\nconsole.log('was changed: Application.Project')\n    const chosenProject = Application.Project\n    if (chosenProject == null) {\n      Application.BoardTree         = []\n      Application.BoardTreeState    = 0\n      Application.ProjectProperties = SNS_ProjectDefaults\n    } else {\n      Application.BoardTree         = chosenProject.BoardList\n      Application.BoardTreeState++\n      Application.ProjectProperties = PropertiesOfProject(chosenProject)\n    }\n  })\n\n/**** observe \"BoardTree\" ****/\n\n  computed(() => {                  // chosenProject -> BoardTree -> chosenBoard\nconsole.log('was changed: Application.BoardTreeState')\n// @ts-ignore TS6133 \"BoardTreeState\" is used for triggering\n    const BoardTreeState = Application.BoardTreeState     // just for triggering\n    validateVisitHistory()        // may change \"VisitHistory\" and \"chosenBoard\"\n  })\n\n/**** observe \"selectedBoards\" ****/\n\n  computed(() => { // selectedBoards -> BoardSelectionMayBeShiftedUp/Down/In/Out\nconsole.log('was changed: Application.BoardTreeState/selectedBoards/expandedBoards')\n// @ts-ignore TS6133 \"BoardTreeState\" is used for triggering\n    const BoardTreeState = Application.BoardTreeState     // just for triggering\n\n  /**** sanitize selection ****/\n\n    Application.selectedBoards = (\n      Application.BoardTree.length === 0\n      ? []\n      : Application.selectedBoards.filter(\n          (Board:SNS_Board) => (Board != null) && Board.isAttached\n        )\n    )\n\n  /**** sanitize expansions ****/\n\n    Application.expandedBoards = (\n      Application.BoardTree.length === 0\n      ? []\n      : Application.expandedBoards.filter(\n          (Board:SNS_Board) => (Board != null) && Board.isAttached\n        )\n    )\n\n  /**** calculate dependencies ****/\n\n    const selectedBoards = Application.selectedBoards\n\n    Application.BoardSelectionMayBeShiftedUp   = BoardsMayBeShiftedUp(selectedBoards)\n    Application.BoardSelectionMayBeShiftedDown = BoardsMayBeShiftedDown(selectedBoards)\n\n    Application.BoardSelectionMayBeShiftedIn  = BoardsMayBeShiftedIn(selectedBoards)\n    Application.BoardSelectionMayBeShiftedOut = BoardsMayBeShiftedOut(selectedBoards)\n  })\n\n/**** observe \"chosenBoard\" ****/\n\n  computed(() => {                                 // chosenBoard -> StickerList\nconsole.log('was changed: Application.chosenBoard')\n    const chosenBoard = Application.chosenBoard\n\n    Application.BoardProperties = PropertiesOfBoard(chosenBoard)\n\n    Application.StickerList = (\n      chosenBoard == null ? [] : chosenBoard.StickerList\n    )\n  })\n\n/**** observe \"StickerList\" ****/\n\n  computed(() => {             // chosenBoard -> StickerList -> selectedStickers\nconsole.log('was changed: Application.StickerList')\n    Application.StickerGeometries = Application.StickerList.map(\n      (Sticker:SNS_Sticker) => Sticker.Geometry\n    )\n  })\n\n/**** observe \"selectedStickers\" ****/\n\n  computed(() => {  // sel.Stickers -> StickerSel.Properties/MayBeShiftedUp/Down\nconsole.log('was changed: Application.chosenBoard/StickerList/selectedStickers')\n    const chosenBoard = Application.chosenBoard\n// @ts-ignore TS6133 \"StickerList\" is used for triggering\n    const StickerList = Application.StickerList                 // a small trick\n\n  /**** sanitize selection ****/\n\n    Application.selectedStickers = Application.selectedStickers.filter(\n      (Sticker:SNS_Sticker) => Sticker.isAttached && (Sticker.Board === chosenBoard)\n    )\n\n  /**** calculate dependencies ****/\n\n    const selectedStickers = Application.selectedStickers\n\n    Application.StickerSelectionGeometries = selectedStickers.map(\n      (Sticker:SNS_Sticker) => Sticker.Geometry\n    )\n\n    Application.StickerSelectionProperties = PropertiesOfStickers(selectedStickers)\n\n    Application.StickerSelectionMayBeShiftedUp   = StickersMayBeShiftedUp(selectedStickers)\n    Application.StickerSelectionMayBeShiftedDown = StickersMayBeShiftedDown(selectedStickers)\n\n    Application.ViewState++\nconsole.log('Application.ViewState++')\n  })\n\n/**** update \"ScriptEditorValue\" ****/\n\n  computed(() => {\nconsole.log('was changed: Application.ScriptEditorMode/Project/Board/StickerSelectionProperties')\n    switch (Application.ScriptEditorMode) {\n      case 'Project':\n        Application.ScriptEditorValue = (\n          Application.Project == null\n          ? noSelection\n          : Application.ProjectProperties.Script || ''\n        )\n        break\n      case 'Board':\n        Application.ScriptEditorValue = (\n          Application.chosenBoard == null\n          ? noSelection\n          : Application.BoardProperties.Script || ''\n        )\n        break\n      case 'Stickers':\n        Application.ScriptEditorValue = (\n          Application.selectedStickers.length === 0\n          ? noSelection\n          : Application.StickerSelectionProperties.Script || ''\n        )\n        break\n    }\n  })\n\n/**** update \"ValueEditorValue\" ****/\n\n  computed(() => {\nconsole.log('was changed: Application.ValueEditorMode/Project/Board/StickerSelectionProperties')\n    switch (Application.ValueEditorMode) {\n      case 'Project':\n        Application.ScriptEditorValue = (\n          Application.Project == null\n          ? noSelection\n          : Application.ProjectProperties.editableValue || ''\n        )\n        break\n      case 'Board':\n        Application.ScriptEditorValue = (\n          Application.chosenBoard == null\n          ? noSelection\n          : Application.BoardProperties.editableValue || ''\n        )\n        break\n      case 'Stickers':\n        Application.ScriptEditorValue = (\n          Application.selectedStickers.length === 0\n          ? noSelection\n          : Application.StickerSelectionProperties.editableValue || ''\n        )\n        break\n    }\n  })\n\n/**** update \"OperationHistory\" ****/\n\n  computed(() => {\nconsole.log('was changed: Application.OperationHistoryState')\n    Application.OperationHistoryState                     // just for triggering\n\n    Application.mayUndoOperation = (OperationIndex > 0)\n    Application.mayRedoOperation = (OperationIndex < OperationHistory.length)\n  })\n\n/**** update \"VisitHistory\" ****/\n\n  computed(() => {\nconsole.log('was changed: Application.VisitHistoryState')\n    Application.VisitHistoryState                         // just for triggering\n\n    Application.mayVisitPrevBoard = (VisitIndex > 0)\n    Application.mayVisitNextBoard = (VisitIndex < VisitHistory.length-1)\n  })\n\n//----------------------------------------------------------------------------//\n//                               SNS_Operation                                //\n//----------------------------------------------------------------------------//\n\n  abstract class SNS_Operation {\n    public abstract canExtend (otherOperation:SNS_Operation):boolean\n    public abstract extend    (otherOperation:SNS_Operation):void\n\n    public get isIrrelevant ():boolean  { return false }\n    public set isIrrelevant (_:boolean) { throwReadOnlyError('isIrrelevant') }\n\n    public abstract doNow ():void\n    public abstract redo  ():void\n    public abstract undo  ():void\n  }\n\n//----------------------------------------------------------------------------//\n//                     SNS_ProjectConfigurationOperation                      //\n//----------------------------------------------------------------------------//\n\n  class SNS_ProjectConfigurationOperation extends SNS_Operation {\n    private _Project:SNS_Project\n    private _PropertyName:string\n    private _oldValue:any\n    private _newValue:any\n\n  /**** constructor ****/\n\n    public constructor (\n      Project:SNS_Project, PropertyName:string, PropertyValue:any\n    ) {\n      super()\n\n      this._Project      = Project\n      this._PropertyName = PropertyName\n      this._oldValue     = Project[PropertyName]\n      this._newValue     = PropertyValue\n    }\n\n  /**** canExtend ****/\n\n    public canExtend (otherOperation:SNS_Operation):boolean {\n      return (\n        (otherOperation instanceof SNS_ProjectConfigurationOperation) &&\n        (otherOperation._Project      === this._Project) &&\n        (otherOperation._PropertyName === this._PropertyName) &&\n        ValuesAreEqual(otherOperation._newValue,this._oldValue)\n      )\n    }\n\n  /**** isIrrelevant ****/\n\n    public get isIrrelevant ():boolean {\n      return (this._newValue === this._oldValue)\n    }\n    public set isIrrelevant (_:boolean) { throwReadOnlyError('isIrrelevant') }\n\n  /**** doNow ****/\n\n    public doNow ():void {\n      clearInspectorMessage()\n      try {\n        this._Project[this._PropertyName] = this._newValue\n      } catch (Signal:any) {\n        setInspectorMessage('operation failed')\n        throwError('OperationFailure: could not change the given property')\n      }\n    }\n\n  /**** extend ****/\n\n    public extend (otherOperation:SNS_ProjectConfigurationOperation):void {\n      this.doNow()\n      otherOperation._newValue = this._newValue\n    }\n\n  /**** redo ****/\n\n    public redo ():void {\n      this.doNow()\n    }\n\n  /**** undo ****/\n\n    public undo ():void {\n      clearInspectorMessage()\n      try {\n        this._Project[this._PropertyName] = this._oldValue\n      } catch (Signal:any) {\n        setInspectorMessage('operation failed')\n        throwError('OperationFailure: could not restore the given property')\n      }\n    }\n  }\n\n//----------------------------------------------------------------------------//\n//                     SNS_BoardDeserializationOperation                      //\n//----------------------------------------------------------------------------//\n\n  class SNS_BoardDeserializationOperation extends SNS_Operation {\n    private _Folder:SNS_Folder\n    private _Serializations:Indexable[]\n    private _Index:number\n    private _newBoards:SNS_Board[] = []\n\n  /**** constructor ****/\n\n    public constructor (\n      Folder:SNS_Folder, sortedSerializations:Indexable[], Index:number,\n      keepIds:boolean = false\n    ) {\n      super()\n\n      this._Folder         = Folder\n      this._Serializations = sortedSerializations.slice()\n      this._Index          = Index\n\n      if (! keepIds) {\n        this._Serializations.forEach(\n          (Serialization:Serializable) => removeIdsFrom(Serialization)\n        )\n      }\n    }\n\n  /**** canExtend ****/\n\n    public canExtend (otherOperation:SNS_Operation):boolean {\n      return false\n    }\n\n  /**** isIrrelevant ****/\n\n    public get isIrrelevant ():boolean  { return false }\n    public set isIrrelevant (_:boolean) { throwReadOnlyError('isIrrelevant') }\n\n  /**** doNow ****/\n\n    public doNow ():void {\n      clearInspectorMessage()\n\n      if (! this._Folder.isAttached) {\n        setInspectorMessage('board no longer exists')\n        return\n      }\n\n      const newBoards:SNS_Board[] = this._newBoards = []\n        this._Serializations.forEach((Serialization:Indexable, i:number) => {\n          try {\n            const newBoard = this._Folder.BoardDeserializedAt(\n              Serialization, this._Index+i\n            )\n            newBoards.push(newBoard)\n            newBoard.recursivelyActivateAllScripts()\n          } catch (Signal:any) { debugger /* nop */ }\n        })\n      if (newBoards.length !== this._Serializations.length) {\n        setInspectorMessage('operation did not fully succeed')\n      }\n      if (newBoards.length === 0) {\n        setInspectorMessage('operation failed')\n        throwError('OperationFailure: could not create any new boards')\n      }\n\n      selectBoards(newBoards)\n    }\n\n  /**** extend ****/\n\n    public extend (otherOperation:SNS_Operation):void {\n      throwError('NotExtensible: this operation can not be extended')\n    }\n\n  /**** redo ****/\n\n    public redo ():void {\n      this.doNow()\n    }\n\n  /**** undo ****/\n\n    public undo ():void {\n      clearInspectorMessage()\n\n      if (! this._Folder.isAttached) {\n        setInspectorMessage('board no longer exists')\n        return\n      }\n\n      const luckyBoards:SNS_Board[] = []\n        this._newBoards.forEach((Board:SNS_Board) => {\n          try {\n            if (this._Folder.hasBoard(Board)) {\n              this._Folder.destroyBoard(Board)\n            }\n            luckyBoards.push(Board)\n          } catch (Signal:any) { /* nop */ }\n        })\n      if (luckyBoards.length !== this._newBoards.length) {\n        setInspectorMessage('operation did not fully succeed')\n      }\n      if (luckyBoards.length === 0) {\n        setInspectorMessage('operation failed')\n        throwError('OperationFailure: could not delete the previously created boards')\n      }\n\n      selectBoards([])\n    }\n  }\n\n//----------------------------------------------------------------------------//\n//                      SNS_BoardConfigurationOperation                       //\n//----------------------------------------------------------------------------//\n\n  class SNS_BoardConfigurationOperation extends SNS_Operation {\n    private _Board:SNS_Board\n    private _PropertyName:string\n    private _oldValue:any\n    private _newValue:any\n\n  /**** constructor ****/\n\n    public constructor (\n      Board:SNS_Board, PropertyName:string, PropertyValue:any\n    ) {\n      super()\n\n      this._Board        = Board\n      this._PropertyName = PropertyName\n      this._oldValue     = Board[PropertyName]\n      this._newValue     = PropertyValue\n    }\n\n  /**** canExtend ****/\n\n    public canExtend (otherOperation:SNS_Operation):boolean {\n      return (\n        (otherOperation instanceof SNS_BoardConfigurationOperation) &&\n        (otherOperation._Board        === this._Board) &&\n        (otherOperation._PropertyName === this._PropertyName) &&\n        ValuesAreEqual(otherOperation._newValue,this._oldValue)\n      )\n    }\n\n  /**** isIrrelevant ****/\n\n    public get isIrrelevant ():boolean {\n      return (this._newValue === this._oldValue)\n    }\n    public set isIrrelevant (_:boolean) { throwReadOnlyError('isIrrelevant') }\n\n  /**** doNow ****/\n\n    public doNow ():void {\n      clearInspectorMessage()\n\n      if (! this._Board.isAttached) {\n        setInspectorMessage('board no longer exists')\n        return\n      }\n\n      try {\n        this._Board[this._PropertyName] = this._newValue\n      } catch (Signal:any) {\n        setInspectorMessage('operation failed')\n        throwError('OperationFailure: could not change the given property')\n      }\n    }\n\n  /**** extend ****/\n\n    public extend (otherOperation:SNS_BoardConfigurationOperation):void {\n      if (this._Board.isAttached) { visitBoard(this._Board) }\n      this.doNow()                      // will report if board no longer exists\n      otherOperation._newValue = this._newValue\n    }\n\n  /**** redo ****/\n\n    public redo ():void {\n      if (this._Board.isAttached) { visitBoard(this._Board) }\n      this.doNow()                      // will report if board no longer exists\n    }\n\n  /**** undo ****/\n\n    public undo ():void {\n      clearInspectorMessage()\n\n      if (this._Board.isAttached) {\n        visitBoard(this._Board)\n      } else {\n        setInspectorMessage('board no longer exists')\n        return\n      }\n\n      try {\n        this._Board[this._PropertyName] = this._oldValue\n      } catch (Signal:any) {\n        setInspectorMessage('operation failed')\n        throwError('OperationFailure: could not restore the given property')\n      }\n    }\n  }\n\n//----------------------------------------------------------------------------//\n//                           SNS_BoardMoveOperation                           //\n//----------------------------------------------------------------------------//\n\n  class SNS_BoardMoveOperation extends SNS_Operation {\n    private _oldFolder:SNS_Folder\n    private _oldIndices:number[]\n    private _newFolder:SNS_Folder\n    private _newIndex:number\n\n  /**** constructor ****/\n\n    public constructor (\n      oldFolder:SNS_Folder, sortedBoards:SNS_Board[], newFolder:SNS_Folder, Index:number\n    ) {\n      super()\n\n      this._oldFolder  = oldFolder\n      this._oldIndices = sortedBoards.map((Board:SNS_Board) => Board.Index)\n\n      this._newFolder = newFolder\n      this._newIndex  = Index\n    }\n\n  /**** canExtend ****/\n\n    public canExtend (otherOperation:SNS_Operation):boolean {\n      if (\n        (otherOperation instanceof SNS_BoardMoveOperation) &&\n        (otherOperation._newFolder === this._oldFolder)\n      ) {\n        const otherIndex = otherOperation._newIndex\n        return this._oldIndices.every(\n          (oldIndex:number,i:number) => oldIndex === otherIndex+i\n        )\n      } else {\n        return false\n      }\n    }\n\n  /**** isIrrelevant ****/\n\n    public get isIrrelevant ():boolean {\n      if (this._newFolder === this._oldFolder) {\n        const newIndex = this._newIndex\n        return this._oldIndices.every(\n          (oldIndex:number,i:number) => oldIndex === newIndex+i\n        )\n      } else {\n        return false\n      }\n    }\n    public set isIrrelevant (_:boolean) { throwReadOnlyError('isIrrelevant') }\n\n  /**** doNow ****/\n\n    public doNow ():void {\n      clearInspectorMessage()\n\n      if (! this._oldFolder.isAttached) {\n        setInspectorMessage('original folder no longer exists')\n        return\n      }\n\n      if (! this._newFolder.isAttached) {\n        setInspectorMessage('target folder no longer exists')\n        return\n      }\n\n      const oldFolder  = this._oldFolder\n      const oldIndices = this._oldIndices\n      const newFolder  = this._newFolder\n      const newIndex   = this._newIndex\n\n      let luckyMoves:SNS_Board[] = []\n        for (let i = oldIndices.length-1; i >= 0; i--) {\n          try {\n            oldFolder.moveBoardTo(oldIndices[i],newFolder,newIndex)\n            luckyMoves.push(newFolder.Board(newIndex) as SNS_Board)\n          } catch (Signal:any) { debugger /* nop */ }\n        }\n\n//      Application.selectedBoards = ...\n//      Application.expandedBoards = ...\n      if (luckyMoves.length !== oldIndices.length) {\n        setInspectorMessage('operation did not fully succeed')\n      }\n      if (luckyMoves.length === 0) {\n        setInspectorMessage('operation failed')\n        throwError('OperationFailure: could not move the given boards')\n      }\n\n      selectBoards(luckyMoves)\n    }\n\n  /**** extend ****/\n\n    public extend (otherOperation:SNS_BoardMoveOperation):void {\n      this.doNow()\n      otherOperation._newFolder = this._newFolder\n      otherOperation._newIndex  = this._newIndex\n    }\n\n  /**** redo ****/\n\n    public redo ():void {\n      this.doNow()\n    }\n\n  /**** undo ****/\n\n    public undo ():void {\n      clearInspectorMessage()\n\n      if (! this._oldFolder.isAttached) {\n        setInspectorMessage('original folder no longer exists')\n        return\n      }\n\n      if (! this._newFolder.isAttached) {\n        setInspectorMessage('target folder no longer exists')\n        return\n      }\n\n      const oldFolder  = this._oldFolder\n      const oldIndices = this._oldIndices\n      const newFolder  = this._newFolder\n      const newIndex   = this._newIndex\n\n      let luckyMoves:SNS_Board[] = []\n        for (let i = 0, l = oldIndices.length; i < l; i++) {\n          try {\n            newFolder.moveBoardTo(newIndex,oldFolder,oldIndices[i])\n            luckyMoves.push(oldFolder.Board(oldIndices[i]) as SNS_Board)\n          } catch (Signal:any) { debugger /* nop */ }\n        }\n\n//      Application.selectedBoards = ...\n//      Application.expandedBoards = ...\n      if (luckyMoves.length !== oldIndices.length) {\n        setInspectorMessage('operation did not fully succeed')\n      }\n      if (luckyMoves.length === 0) {\n        setInspectorMessage('operation failed')\n        throwError('OperationFailure: could not move the given boards')\n      }\n\n      selectBoards(luckyMoves)\n    }\n  }\n\n//----------------------------------------------------------------------------//\n//                          SNS_BoardShiftOperation                           //\n//----------------------------------------------------------------------------//\n\n  class SNS_BoardShiftOperation extends SNS_Operation {\n    private _Folder:SNS_Folder\n    private _Boards:SNS_Board[]\n    private _oldIndices:number[]\n    private _newIndices:number[]\n    private _forwardMoves:SNS_Move[]\n    private _backwardMoves:SNS_Move[]\n\n  /**** constructor ****/\n\n    public constructor (\n      Folder:SNS_Folder, sortedBoards:SNS_Board[], sortedIndices:number[]\n    ) {\n      super()\n\n      this._Folder = Folder\n      this._Boards = sortedBoards\n\n      this._oldIndices  = sortedBoards.map((Entry:Indexable) => Entry.Index)\n      this._newIndices  = sortedIndices.slice()\n\n      let ItemCount = this._Folder.BoardCount\n      this._forwardMoves  = MovesFor(this._oldIndices,this._newIndices, ItemCount)\n      this._backwardMoves = MovesFor(this._newIndices,this._oldIndices, ItemCount)\n    }\n\n  /**** canExtend ****/\n\n    public canExtend (otherOperation:SNS_Operation):boolean {\n      return (\n        (otherOperation instanceof SNS_BoardShiftOperation) &&\n        ListsAreEqual(otherOperation._Boards,this._Boards) &&\n        ListsAreEqual(otherOperation._newIndices,this._oldIndices)\n      )\n    }\n\n  /**** isIrrelevant ****/\n\n    public get isIrrelevant ():boolean {\n      return ListsAreEqual(this._oldIndices,this._newIndices)\n    }\n    public set isIrrelevant (_:boolean) { throwReadOnlyError('isIrrelevant') }\n\n  /**** doNow ****/\n\n    public doNow ():void {\n      clearInspectorMessage()\n\n      if (! this._Folder.isAttached) {\n        setInspectorMessage('folder no longer exists')\n        return\n      }\n\n      this._shiftBoards(this._forwardMoves)\n\n      selectBoards(this._Boards)\n    }\n\n  /**** extend ****/\n\n    public extend (otherOperation:SNS_BoardShiftOperation):void {\n      this.doNow()\n      otherOperation._newIndices    = this._newIndices\n      otherOperation._forwardMoves  = this._forwardMoves\n      otherOperation._backwardMoves = this._backwardMoves\n    }\n\n  /**** redo ****/\n\n    public redo ():void {\n      this.doNow()\n    }\n\n  /**** undo ****/\n\n    public undo ():void {\n      clearInspectorMessage()\n\n      if (! this._Folder.isAttached) {\n        setInspectorMessage('folder no longer exists')\n        return\n      }\n\n      this._shiftBoards(this._backwardMoves)\n\n      selectBoards(this._Boards)\n    }\n\n  /**** _shiftBoards ****/\n\n    protected _shiftBoards (MoveList:SNS_Move[]):void {\n      if (MoveList.length === 0) { return }\n\n      const luckyMoves:SNS_Move[] = []\n        MoveList.forEach((Move:SNS_Move, i:number) => {\n          try {\n            this._Folder.shiftBoardsByIndex(Move.oldIndex, Move.newIndex, Move.Count)\n            luckyMoves.push(Move)\n          } catch (Signal:any) { debugger /* nop */ }\n        })\n      if (luckyMoves.length !== MoveList.length) {\n        setInspectorMessage('operation did not fully succeed')\n      }\n      if (luckyMoves.length === 0) {\n        setInspectorMessage('operation failed')\n        throwError('OperationFailure: could not shift the given boards')\n      }\n    }\n  }\n\n//----------------------------------------------------------------------------//\n//                         SNS_BoardDeletionOperation                         //\n//----------------------------------------------------------------------------//\n\n  class SNS_BoardDeletionOperation extends SNS_Operation {\n    private _Folder:SNS_Folder\n    private _Boards:SNS_Board[]\n    private _Indices:number[]\n    private _Serializations:Serializable[]\n\n  /**** constructor ****/\n\n    public constructor (sortedBoards:SNS_Board[]) {\n      super()\n\n      this._Folder         = commonFolderOfBoards(sortedBoards)\n      this._Boards         = sortedBoards.slice()\n      this._Indices        = sortedBoards.map((Board:SNS_Board) => Board.Index)\n      this._Serializations = sortedBoards.map((Board:SNS_Board) => Board.Serialization)\n    }\n\n  /**** canExtend ****/\n\n    public canExtend (otherOperation:SNS_Operation):boolean {\n      return false\n    }\n\n  /**** isIrrelevant ****/\n\n    public get isIrrelevant ():boolean  { return false }\n    public set isIrrelevant (_:boolean) { throwReadOnlyError('isIrrelevant') }\n\n  /**** doNow ****/\n\n    public doNow ():void {\n      clearInspectorMessage()\n\n      selectBoards([])\n\n      if (! this._Folder.isAttached) {\n        return\n      }\n\n      const existingBoards = this._Boards.filter(\n        (Board:SNS_Board) => this._Folder.hasBoard(Board)\n      )\n      if (existingBoards.length === 0) { return }\n\n      const luckyBoards:SNS_Board[] = []\n        existingBoards.forEach((Board:SNS_Board) => {\n          try {\n            this._Folder.destroyBoard(Board)\n            luckyBoards.push(Board)\n          } catch (Signal:any) { debugger /* nop */ }\n        })\n      if (luckyBoards.length !== existingBoards.length) {\n        setInspectorMessage('operation did not fully succeed')\n      }\n      if (luckyBoards.length === 0) {\n        setInspectorMessage('operation failed')\n        throwError('OperationFailure: could not delete any boards')\n      }\n    }\n\n  /**** extend ****/\n\n    public extend (otherOperation:SNS_Operation):void {\n      throwError('NotExtensible: this operation can not be extended')\n    }\n\n  /**** redo ****/\n\n    public redo ():void {\n      this.doNow()\n    }\n\n  /**** undo ****/\n\n    public undo ():void {\n      clearInspectorMessage()\n\n      if (! this._Folder.isAttached) {\n        setInspectorMessage('folder no longer exists')\n        return\n      }\n\n      const newBoards:SNS_Board[] = this._Boards = []\n        this._Serializations.forEach((Serialization:Indexable, i:number) => {\n          try {\n            const newBoard = this._Folder.BoardDeserializedAt(\n              Serialization, this._Indices[i]\n            )\n            newBoards.push(newBoard)\n            newBoard.recursivelyActivateAllScripts()\n          } catch (Signal:any) { debugger /* nop */ }\n        })\n      if (newBoards.length !== this._Serializations.length) {\n        setInspectorMessage('operation did not fully succeed')\n      }\n      if (newBoards.length === 0) {\n        setInspectorMessage('operation failed')\n        throwError('OperationFailure: could not restore any previously deleted boards')\n      }\n\n      selectBoards(newBoards)\n    }\n  }\n\n//----------------------------------------------------------------------------//\n//                    SNS_StickerDeserializationOperation                     //\n//----------------------------------------------------------------------------//\n\n  class SNS_StickerDeserializationOperation extends SNS_Operation {\n    private _Board:SNS_Board\n    private _Serializations:Indexable[]\n    private _Index:number\n    private _newStickers:SNS_Sticker[] = []\n\n  /**** constructor ****/\n\n    public constructor (\n      Board:SNS_Board, sortedSerializations:Indexable[], Index:number,\n      keepId:boolean = false\n    ) {\n      super()\n\n      this._Board          = Board\n      this._Serializations = sortedSerializations.slice()\n      this._Index          = Index\n\n      if (! keepId) {\n        this._Serializations.forEach(\n          (Serialization:Serializable) => removeIdsFrom(Serialization)\n        )\n      }\n    }\n\n  /**** canExtend ****/\n\n    public canExtend (otherOperation:SNS_Operation):boolean {\n      return false\n    }\n\n  /**** isIrrelevant ****/\n\n    public get isIrrelevant ():boolean  { return false }\n    public set isIrrelevant (_:boolean) { throwReadOnlyError('isIrrelevant') }\n\n  /**** doNow ****/\n\n    public doNow ():void {\n      clearInspectorMessage()\n\n      if (! this._Board.isAttached) {\n        setInspectorMessage('board no longer exists')\n        return\n      }\n\n      const newStickers:SNS_Sticker[] = this._newStickers = []\n        this._Serializations.forEach((Serialization:Indexable, i:number) => {\n          try {\n            const newSticker = this._Board.StickerDeserializedAt(\n              Serialization, this._Index+i\n            )\n            newStickers.push(newSticker)\n            newSticker.activateScript()\n          } catch (Signal:any) { debugger /* nop */ }\n        })\n      if (newStickers.length !== this._Serializations.length) {\n        setInspectorMessage('operation did not fully succeed')\n      }\n      if (newStickers.length === 0) {\n        setInspectorMessage('operation failed')\n        throwError('OperationFailure: could not create any new stickers')\n      }\n\n      selectStickers(newStickers)\n    }\n\n  /**** extend ****/\n\n    public extend (otherOperation:SNS_Operation):void {\n      throwError('NotExtensible: this operation can not be extended')\n    }\n\n  /**** redo ****/\n\n    public redo ():void {\n      if (this._Board.isAttached) { visitBoard(this._Board) }\n      this.doNow()                      // will report if board no longer exists\n    }\n\n  /**** undo ****/\n\n    public undo ():void {\n      clearInspectorMessage()\n\n      if (this._Board.isAttached) {\n        visitBoard(this._Board)\n      } else {\n        setInspectorMessage('board no longer exists')\n        return\n      }\n\n      const luckyStickers:SNS_Sticker[] = []\n        this._newStickers.forEach((Sticker:SNS_Sticker) => {\n          try {\n            if (this._Board.hasSticker(Sticker)) {\n              this._Board.destroySticker(Sticker)\n            }\n            luckyStickers.push(Sticker)\n          } catch (Signal:any) { debugger /* nop */ }\n        })\n      if (luckyStickers.length !== this._newStickers.length) {\n        setInspectorMessage('operation did not fully succeed')\n      }\n      if (luckyStickers.length === 0) {\n        setInspectorMessage('operation failed')\n        throwError('OperationFailure: could not delete the previously created stickers')\n      }\n\n      selectStickers([])\n    }\n  }\n\n//----------------------------------------------------------------------------//\n//                     SNS_StickerConfigurationOperation                      //\n//----------------------------------------------------------------------------//\n\n  class SNS_StickerConfigurationOperation extends SNS_Operation {\n    private _Board:SNS_Board\n    private _Stickers:SNS_Sticker[]\n    private _PropertyName:string\n    private _oldValues:any[]\n    private _newValue:any\n\n  /**** constructor ****/\n\n    public constructor (\n      Stickers:SNS_Sticker[], PropertyName:string, PropertyValue:any\n    ) {\n      super()\n\n      this._Board        = commonBoardOfStickers(Stickers) as SNS_Board\n      this._Stickers     = Stickers.slice()\n      this._PropertyName = PropertyName\n      this._oldValues    = Stickers.map((Sticker:SNS_Sticker) => Sticker[PropertyName])\n      this._newValue     = PropertyValue\n    }\n\n  /**** canExtend ****/\n\n    public canExtend (otherOperation:SNS_Operation):boolean {\n      return (\n        (otherOperation instanceof SNS_StickerConfigurationOperation) &&\n        ListsAreEqual(otherOperation._Stickers, this._Stickers) &&\n        (otherOperation._PropertyName === this._PropertyName) &&\n        this._oldValues.every((oldValue:any) => ValuesAreEqual(otherOperation._newValue,oldValue))\n      )\n    }\n\n  /**** isIrrelevant ****/\n\n    public get isIrrelevant ():boolean {\n      return this._oldValues.every((oldValue:any) => ValuesAreEqual(this._newValue,oldValue))\n    }\n    public set isIrrelevant (_:boolean) { throwReadOnlyError('isIrrelevant') }\n\n  /**** doNow ****/\n\n    public doNow ():void {\n      clearInspectorMessage()\n\n      const existingStickers = this._Stickers.filter(\n        (Sticker:SNS_Sticker) => Sticker.isAttached\n      )\n      if (existingStickers.length === 0) {\n        setInspectorMessage('stickers no longer exist')\n        return\n      }\n\n      const luckyStickers:SNS_Sticker[] = []\n        existingStickers.forEach((Sticker:SNS_Sticker) => {\n          try {\n            Sticker[this._PropertyName] = this._newValue\n            luckyStickers.push(Sticker)\n          } catch (Signal:any) { debugger /* nop */ }\n        })\n      if (luckyStickers.length !== existingStickers.length) {\n        setInspectorMessage('operation did not fully succeed')\n      }\n      if (luckyStickers.length === 0) {\n        setInspectorMessage('operation failed')\n        throwError('OperationFailure: could not change the given property')\n      }\n    }\n\n  /**** extend ****/\n\n    public extend (otherOperation:SNS_StickerConfigurationOperation):void {\n      if (this._Board.isAttached) { visitBoard(this._Board) }\n      this.doNow()                // won't do anything if board no longer exists\n      otherOperation._newValue = this._newValue\n    }\n\n  /**** redo ****/\n\n    public redo ():void {\n      if (this._Board.isAttached) { visitBoard(this._Board) }\n      this.doNow()                // won't do anything if board no longer exists\n    }\n\n  /**** undo ****/\n\n    public undo ():void {\n      clearInspectorMessage()\n\n      const existingStickers = this._Stickers.filter(\n        (Sticker:SNS_Sticker) => Sticker.isAttached\n      )\n      if (existingStickers.length === 0) {\n        setInspectorMessage('stickers no longer exist')\n        return\n      }\n\n      if (this._Board.isAttached) { visitBoard(this._Board) }\n\n      const luckyStickers:SNS_Sticker[] = []\n        existingStickers.forEach((Sticker:SNS_Sticker) => {\n          let StickerIndex:number = this._Stickers.indexOf(Sticker)\n          try {\n            Sticker[this._PropertyName] = this._oldValues[StickerIndex]\n            luckyStickers.push(Sticker)\n          } catch (Signal:any) { debugger /* nop */ }\n        })\n      if (luckyStickers.length !== existingStickers.length) {\n        setInspectorMessage('operation did not fully succeed')\n      }\n      if (luckyStickers.length === 0) {\n        setInspectorMessage('operation failed')\n        throwError('OperationFailure: could not restore the given property')\n      }\n    }\n  }\n\n//----------------------------------------------------------------------------//\n//                         SNS_StickerShapeOperation                          //\n//----------------------------------------------------------------------------//\n\n  class SNS_StickerShapeOperation extends SNS_Operation {\n    private _Board:SNS_Board\n    private _Stickers:SNS_Sticker[]\n    private _oldGeometries:SNS_Geometry[]\n    private _newGeometries:SNS_Geometry[]\n\n  /**** constructor ****/\n\n    public constructor (\n      Stickers:SNS_Sticker[], Geometries:SNS_Geometry[]\n    ) {\n      super()\n\n      this._Board         = Stickers[0].Board\n      this._Stickers      = Stickers.slice()\n      this._oldGeometries = Stickers.map((Sticker:SNS_Sticker) => Sticker.Geometry)\n      this._newGeometries = Geometries.slice()\n    }\n\n  /**** canExtend ****/\n\n    public canExtend (otherOperation:SNS_Operation):boolean {\n      return (\n        (otherOperation instanceof SNS_StickerShapeOperation) &&\n        ListsAreEqual(otherOperation._Stickers, this._Stickers) &&\n        this._oldGeometries.every(\n          (Geometry:SNS_Geometry, i:number) => ValuesAreEqual(otherOperation._newGeometries[i],Geometry)\n        )\n      )\n    }\n\n  /**** isIrrelevant ****/\n\n    public get isIrrelevant ():boolean {\n      return this._oldGeometries.every(\n        (Geometry:SNS_Geometry, i:number) => ValuesAreEqual(this._newGeometries[i],Geometry)\n      )\n    }\n    public set isIrrelevant (_:boolean) { throwReadOnlyError('isIrrelevant') }\n\n  /**** doNow ****/\n\n    public doNow ():void {\n      clearInspectorMessage()\n\n      const existingStickers = this._Stickers.filter(\n        (Sticker:SNS_Sticker) => Sticker.isAttached\n      )\n      if (existingStickers.length === 0) {\n        setInspectorMessage('stickers no longer exist')\n        return\n      }\n\n      const luckyStickers:SNS_Sticker[] = []\n        existingStickers.forEach((Sticker:SNS_Sticker, i:number) => {\n          try {\n            Sticker.Geometry = this._newGeometries[i]\n            luckyStickers.push(Sticker)\n          } catch (Signal:any) { debugger /* nop */ }\n        })\n      if (luckyStickers.length !== existingStickers.length) {\n        setInspectorMessage('operation did not fully succeed')\n      }\n      if (luckyStickers.length === 0) {\n        setInspectorMessage('operation failed')\n        throwError('OperationFailure: could not change the given property')\n      }\n    }\n\n  /**** extend ****/\n\n    public extend (otherOperation:SNS_StickerShapeOperation):void {\n      if (this._Board.isAttached) { visitBoard(this._Board) }\n      this.doNow()                // won't do anything if board no longer exists\n      otherOperation._newGeometries = this._newGeometries\n    }\n\n  /**** redo ****/\n\n    public redo ():void {\n      if (this._Board.isAttached) { visitBoard(this._Board) }\n      this.doNow()                // won't do anything if board no longer exists\n    }\n\n  /**** undo ****/\n\n    public undo ():void {\n      clearInspectorMessage()\n\n      const existingStickers = this._Stickers.filter(\n        (Sticker:SNS_Sticker) => Sticker.isAttached\n      )\n      if (existingStickers.length === 0) {\n        setInspectorMessage('stickers no longer exist')\n        return\n      }\n\n      if (this._Board.isAttached) { visitBoard(this._Board) }\n\n      const luckyStickers:SNS_Sticker[] = []\n        existingStickers.forEach((Sticker:SNS_Sticker) => {\n          let StickerIndex:number = this._Stickers.indexOf(Sticker)\n          try {\n            Sticker.Geometry = this._oldGeometries[StickerIndex]\n            luckyStickers.push(Sticker)\n          } catch (Signal:any) { debugger /* nop */ }\n        })\n      if (luckyStickers.length !== existingStickers.length) {\n        setInspectorMessage('operation did not fully succeed')\n      }\n      if (luckyStickers.length === 0) {\n        setInspectorMessage('operation failed')\n        throwError('OperationFailure: could not restore the given property')\n      }\n    }\n  }\n\n//----------------------------------------------------------------------------//\n//                         SNS_StickerShiftOperation                          //\n//----------------------------------------------------------------------------//\n\n  class SNS_StickerShiftOperation extends SNS_Operation {\n    private _Board:SNS_Board\n    private _Stickers:SNS_Sticker[]\n    private _oldIndices:number[]\n    private _newIndices:number[]\n    private _forwardMoves:SNS_Move[]\n    private _backwardMoves:SNS_Move[]\n\n  /**** constructor ****/\n\n    public constructor (sortedStickers:SNS_Sticker[], sortedIndices:number[]) {\n      super()\n\n      this._Board    = commonBoardOfStickers(sortedStickers) as SNS_Board\n      this._Stickers = sortedStickers\n\n      this._oldIndices = sortedStickers.map((Sticker:SNS_Sticker) => Sticker.Index)\n      this._newIndices = sortedIndices.slice()\n\n      let ItemCount = this._Board.StickerCount\n      this._forwardMoves  = MovesFor(this._oldIndices,this._newIndices, ItemCount)\n      this._backwardMoves = MovesFor(this._newIndices,this._oldIndices, ItemCount)\n    }\n\n  /**** canExtend ****/\n\n    public canExtend (otherOperation:SNS_Operation):boolean {\n      return (\n        (otherOperation instanceof SNS_StickerShiftOperation) &&\n        ListsAreEqual(otherOperation._Stickers,this._Stickers) &&\n        ListsAreEqual(this._oldIndices,otherOperation._newIndices)\n      )\n    }\n\n  /**** isIrrelevant ****/\n\n    public get isIrrelevant ():boolean {\n      return ListsAreEqual(this._oldIndices,this._newIndices)\n    }\n    public set isIrrelevant (_:boolean) { throwReadOnlyError('isIrrelevant') }\n\n  /**** doNow ****/\n\n    public doNow ():void {\n      clearInspectorMessage()\n\n      if (! this._Board.isAttached) {\n        setInspectorMessage('board no longer exists')\n        return\n      }\n\n      this._shiftStickers(this._forwardMoves)\n\n      selectStickers(this._Stickers)\n    }\n\n  /**** extend ****/\n\n    public extend (otherOperation:SNS_StickerShiftOperation):void {\n      visitBoard(this._Board)\n      this.doNow()\n      otherOperation._newIndices    = this._newIndices\n      otherOperation._forwardMoves  = this._forwardMoves\n      otherOperation._backwardMoves = this._backwardMoves\n    }\n\n  /**** redo ****/\n\n    public redo ():void {\n      visitBoard(this._Board)\n      this.doNow()\n    }\n\n  /**** undo ****/\n\n    public undo ():void {\n      clearInspectorMessage()\n\n      if (this._Board.isAttached) {\n        visitBoard(this._Board)\n      } else {\n        setInspectorMessage('board no longer exists')\n        return\n      }\n\n      this._shiftStickers(this._backwardMoves)\n\n      selectStickers(this._Stickers)\n    }\n\n  /**** _shiftStickers ****/\n\n    protected _shiftStickers (MoveList:SNS_Move[]):void {\n      if (MoveList.length === 0) { return }\n\n      const luckyMoves:SNS_Move[] = []\n        MoveList.forEach((Move:SNS_Move, i:number) => {\n          try {\n            this._Board.shiftStickersByIndex(Move.oldIndex, Move.newIndex, Move.Count)\n            luckyMoves.push(Move)\n          } catch (Signal:any) { debugger /* nop */ }\n        })\n      if (luckyMoves.length !== MoveList.length) {\n        setInspectorMessage('operation did not fully succeed')\n      }\n      if (luckyMoves.length === 0) {\n        setInspectorMessage('operation failed')\n        throwError('OperationFailure: could not shift the given stickers')\n      }\n    }\n  }\n\n//----------------------------------------------------------------------------//\n//                        SNS_StickerDeletionOperation                        //\n//----------------------------------------------------------------------------//\n\n  class SNS_StickerDeletionOperation extends SNS_Operation {\n    private _Board:SNS_Board\n    private _Stickers:SNS_Sticker[]\n    private _Indices:number[]\n    private _Serializations:Serializable[]\n\n  /**** constructor ****/\n\n    public constructor (sortedStickers:SNS_Sticker[]) {\n      super()\n\n      this._Board          = commonBoardOfStickers(sortedStickers) as SNS_Board\n      this._Stickers       = sortedStickers.slice()\n      this._Indices        = sortedStickers.map((Sticker:SNS_Sticker) => Sticker.Index)\n      this._Serializations = sortedStickers.map((Sticker:SNS_Sticker) => Sticker.Serialization)\n    }\n\n  /**** canExtend ****/\n\n    public canExtend (otherOperation:SNS_Operation):boolean {\n      return false\n    }\n\n  /**** isIrrelevant ****/\n\n    public get isIrrelevant ():boolean  { return false }\n    public set isIrrelevant (_:boolean) { throwReadOnlyError('isIrrelevant') }\n\n  /**** doNow ****/\n\n    public doNow ():void {\n      clearInspectorMessage()\n\n      if (! this._Board.isAttached) { return }\n\n      const existingStickers = this._Stickers.filter(\n        (Sticker:SNS_Sticker) => this._Board.hasSticker(Sticker)\n      )\n      if (existingStickers.length === 0) { return }\n\n      const luckyStickers:SNS_Sticker[] = []\n        existingStickers.forEach((Sticker:SNS_Sticker) => {\n          try {\n            this._Board.destroySticker(Sticker)\n            luckyStickers.push(Sticker)\n          } catch (Signal:any) { debugger /* nop */ }\n        })\n      if (luckyStickers.length !== existingStickers.length) {\n        setInspectorMessage('operation did not fully succeed')\n      }\n      if (luckyStickers.length === 0) {\n        setInspectorMessage('operation failed')\n        throwError('OperationFailure: could not delete any stickers')\n      }\n    }\n\n  /**** extend ****/\n\n    public extend (otherOperation:SNS_Operation):void {\n      throwError('NotExtensible: this operation can not be extended')\n    }\n\n  /**** redo ****/\n\n    public redo ():void {\n      if (this._Board.isAttached) { visitBoard(this._Board) }\n      this.doNow()                // won't do anything if board no longer exists\n    }\n\n  /**** undo ****/\n\n    public undo ():void {\n      clearInspectorMessage()\n\n      selectStickers([])\n\n      if (this._Board.isAttached) {\n        visitBoard(this._Board)\n      } else {\n        setInspectorMessage('board no longer exists')\n        return\n      }\n\n      const newStickers:SNS_Sticker[] = this._Stickers = []\n        this._Serializations.forEach((Serialization:Indexable, i:number) => {\n          try {\n            const newSticker = this._Board.StickerDeserializedAt(\n              Serialization, this._Indices[i]\n            )\n            newStickers.push(newSticker)\n            newSticker.activateScript()\n          } catch (Signal:any) { debugger /* nop */ }\n        })\n      if (newStickers.length !== this._Serializations.length) {\n        setInspectorMessage('operation did not fully succeed')\n      }\n      if (newStickers.length === 0) {\n        setInspectorMessage('operation failed')\n        throwError('OperationFailure: could not restore any previously deleted stickers')\n      }\n\n      selectStickers(newStickers)\n    }\n  }\n\n/**** PropertiesOfProject ****/\n\n  function PropertiesOfProject (Project:SNS_Project):SNS_ProjectProperties {\n    const Result:Indexable = {}\n      Object.keys(SNS_ProjectDefaults).forEach(\n        (Property:string) => Result[Property] = Project[Property]\n      )\n    return Result as SNS_ProjectProperties\n  }\n\n/**** commonFolderOfBoards ****/\n\n  function commonFolderOfBoards (BoardList:SNS_Board[]):SNS_Folder {\n    if (BoardList.length === 0) { return Application.Project as SNS_Folder }\n\n    let Result:SNS_Folder = BoardList[0].Folder as SNS_Folder\n      if (BoardList.some((Board:SNS_Board) => Board.Folder !== Result)) throwError(\n        'InvalidArgument: the given boards do not all belong to the same folder'\n      )\n    return Result\n  }\n\n/**** BoardsSortedByIndex ****/\n\n  function BoardsSortedByIndex (BoardList:SNS_Board[]):SNS_Board[] {\n    if (BoardList.length === 0) { return [] }\n\n    const Result:Indexable[] = BoardList.map(\n      (Board:SNS_Board) => ({ Board, Index:Board.Index })\n    )\n      Result.sort(\n        (EntryA:Indexable,EntryB:Indexable) => EntryA.Index-EntryB.Index\n      )\n    return Result.map((Entry:Indexable) => Entry.Board)\n  }\n\n/**** IndexPathsOfBoards ****/\n\n  function IndexPathsOfBoards (BoardList:SNS_Board[]):number[][] {\n    return BoardList.map((Board:SNS_Board) => Board.IndexPath)\n  }\n\n/**** BoardsAtIndexPaths ****/\n\n  function BoardsAtIndexPaths (IndexPathList:number[][]):SNS_Board[] {\n    const Project = Application.Project as SNS_Project\n    return IndexPathList.map(\n      (IndexPath:number[]) => Project.BoardAtIndexPath(IndexPath)\n    ).filter((Item:any) => Item != null) as SNS_Board[]\n  }\n\n/**** BoardsUpdatedbyId **** /\n\n  function BoardsUpdatedbyId (BoardList:SNS_Board[]):SNS_Board[] {\n    if (BoardList.length === 0) { return [] }\n\n    const Project = Application.Project\n    return BoardList.map(\n      (Board:SNS_Board) => Project.BoardWithId(Board.Id)\n    ).filter(\n      (Board:SNS_Board) => (Board != null) && ValueIsBoard(Board)\n    )\n  }\n*/\n/**** BoardsMayBeShiftedUp ****/\n\n  function BoardsMayBeShiftedUp (BoardList:SNS_Board[]):boolean {\n    if (BoardList.length === 0) { return false }\n\n    const topmostIndex = topmostIndexOfBoards(BoardList)\n    if (topmostIndex > 0) { return true }\n\n    const bottommostIndex = bottommostIndexOfBoards(BoardList)\n    return (bottommostIndex > BoardList.length)\n  }\n\n/**** BoardsMayBeShiftedDown ****/\n\n  function BoardsMayBeShiftedDown (BoardList:SNS_Board[]):boolean {\n    if (BoardList.length === 0) { return false }\n\n    const BoardCount = (BoardList[0].Folder as SNS_Board).BoardCount\n\n    const bottommostIndex = bottommostIndexOfBoards(BoardList)\n    if (bottommostIndex < BoardCount-1) { return true }\n\n    const topmostIndex = topmostIndexOfBoards(BoardList)\n    return (topmostIndex < BoardCount-BoardList.length)\n  }\n\n/**** BoardsMayBeShiftedIn ****/\n\n  function BoardsMayBeShiftedIn (BoardList:SNS_Board[]):boolean {\n    if (BoardList.length === 0) { return false }\n    return BoardsMayBeShiftedDown(BoardList)\n  }\n\n/**** BoardsMayBeShiftedOut ****/\n\n  function BoardsMayBeShiftedOut (BoardList:SNS_Board[]):boolean {\n    if (BoardList.length === 0) { return false }\n    return (BoardList[0]?.Folder?.Folder != null)\n  }\n\n/**** topmostIndexOfBoards ****/\n\n  function topmostIndexOfBoards (BoardList:SNS_Board[]):number {\n    if (BoardList.length === 0) { return -1 }\n\n    let Result:number = Infinity\n      BoardList.forEach((Board:SNS_Board) => Result = Math.min(Result,Board.Index))\n    return Result\n  }\n\n/**** bottommostIndexOfBoards ****/\n\n  function bottommostIndexOfBoards (BoardList:SNS_Board[]):number {\n    if (BoardList.length === 0) { return -1 }\n\n    let Result:number = 0\n      BoardList.forEach((Board:SNS_Board) => Result = Math.max(Result,Board.Index))\n    return Result\n  }\n\n/**** PropertiesOfBoard ****/\n\n  function PropertiesOfBoard (Board:SNS_Board|undefined):SNS_BoardProperties {\n    if (Board == null) { return SNS_BoardDefaults }\n\n    const Result:Indexable = {}\n      Object.keys(SNS_BoardDefaults).forEach(\n        (Property:string) => Result[Property] = Board[Property]\n      )\n    return Result as SNS_BoardProperties\n  }\n\n/**** commonBoardOfStickers ****/\n\n  function commonBoardOfStickers (StickerList:SNS_Sticker[]):SNS_Board|undefined {\n    if (StickerList.length === 0) { return undefined }\n\n    let Result:SNS_Board = StickerList[0].Board\n      if (StickerList.some((Sticker:SNS_Sticker) => Sticker.Board !== Result)) throwError(\n        'InvalidArgument: the given stickers do not all belong to the same board'\n      )\n    return Result\n  }\n\n/**** StickersSortedByIndex ****/\n\n  function StickersSortedByIndex (StickerList:SNS_Sticker[]):SNS_Sticker[] {\n    if (StickerList.length === 0) { return [] }\n\n    const Result:Indexable[] = StickerList.map(\n      (Sticker:SNS_Sticker) => ({ Sticker, Index:Sticker.Index })\n    )\n      Result.sort(\n        (EntryA:Indexable,EntryB:Indexable) => EntryA.Index-EntryB.Index\n      )\n    return Result.map((Entry:Indexable) => Entry.Sticker)\n  }\n\n/**** PropertiesOfSticker ****/\n\n  function PropertiesOfSticker (Sticker:SNS_Sticker):SNS_StickerProperties {\n    const Result:Indexable = {}\n      Object.keys(SNS_StickerDefaults).forEach(\n        (Property:string) => Result[Property] = Sticker[Property]\n      )\n    return Result as SNS_StickerProperties\n  }\n\n/**** PropertiesOfStickers ****/\n\n  function PropertiesOfStickers (StickerList:SNS_Sticker[]):SNS_StickerProperties {\n    if (StickerList.length === 0) {\n      return { ...SNS_StickerDefaults }\n    }\n\n    const Result:Indexable = PropertiesOfSticker(StickerList[0])\n      StickerList.slice(1).forEach((Sticker:SNS_Sticker) => {\n        Object.keys(SNS_StickerDefaults).forEach((Property:string) => {\n          const Value:any = Sticker[Property]\n          if (ValuesDiffer(Value,Result)) { Result[Property] = mixedValues }\n        })\n      })\n    return Result as SNS_StickerProperties\n  }\n\n/**** StickersMayBeShiftedUp ****/\n\n  function StickersMayBeShiftedUp (StickerList:SNS_Sticker[]):boolean {\n    if (StickerList.length === 0) { return false }\n\n    const topmostIndex = topmostIndexOfStickers(StickerList)\n    if (topmostIndex > 0) { return true }\n\n    const bottommostIndex = bottommostIndexOfStickers(StickerList)\n    return (bottommostIndex > StickerList.length)\n  }\n\n/**** StickersMayBeShiftedDown ****/\n\n  function StickersMayBeShiftedDown (StickerList:SNS_Sticker[]):boolean {\n    if (StickerList.length === 0) { return false }\n\n    const StickerCount = (StickerList[0].Folder as SNS_Board).StickerCount\n\n    const bottommostIndex = bottommostIndexOfStickers(StickerList)\n    if (bottommostIndex < StickerCount-1) { return true }\n\n    const topmostIndex = topmostIndexOfStickers(StickerList)\n    return (topmostIndex < StickerCount-StickerList.length)\n  }\n\n/**** topmostIndexOfStickers ****/\n\n  function topmostIndexOfStickers (StickerList:SNS_Sticker[]):number {\n    if (StickerList.length === 0) { return -1 }\n\n    let Result:number = Infinity\n      StickerList.forEach((Sticker:SNS_Sticker) => Result = Math.min(Result,Sticker.Index))\n    return Result\n  }\n\n/**** bottommostIndexOfStickers ****/\n\n  function bottommostIndexOfStickers (StickerList:SNS_Sticker[]):number {\n    if (StickerList.length === 0) { return -1 }\n\n    let Result:number = 0\n      StickerList.forEach((Sticker:SNS_Sticker) => Result = Math.max(Result,Sticker.Index))\n    return Result\n  }\n\n/**** topLeftPositionOfStickers ****/\n\n  function topLeftPositionOfStickers (\n    StickerList:SNS_Sticker[]\n  ):{ minX:number, minY:number } {\n    if (StickerList.length === 0) { return { minX:0, minY:0 } }\n    return {\n      minX:Math.min(...StickerList.map((Sticker:SNS_Sticker) => Sticker.x)),\n      minY:Math.min(...StickerList.map((Sticker:SNS_Sticker) => Sticker.y))\n    }\n  }\n\n/**** commonErrorOf **** /\n\n  function commonErrorOf (\n    ErrorList:SNS_Error[]\n  ):SNS_Error|typeof noSelection|typeof mixedValues|undefined {\n    if (ErrorList.length === 0) { return noSelection }\n\n    let Result:SNS_Error|typeof noSelection|typeof mixedValues|undefined = ErrorList[0]\n      ErrorList.slice(1).forEach((Error:SNS_Error|undefined) => {\n        if (ValuesDiffer(Error,Result)) { Result = mixedValues }\n      })\n    return Result\n  }\n*/\n/**** ValueFor ****/\n\n  function ValueFor (Value:any):any {\n    return (\n      (Value === noSelection) || (Value === mixedValues)\n      ? null\n      : Value\n    )\n  }\n\n/**** PlaceholderFor **** /\n\n  function PlaceholderFor (Value:any, Default:string='Enter Value'):any {\n    switch (Value) {\n      case noSelection: return '(no Selection)'\n      case mixedValues: return '(mixed Values)'\n      default:          return Default\n    }\n  }\n*/\n/**** IntegerFor ****/\n\n  function IntegerFor (Value:any):number|null {\n    return (\n      (Value === noSelection) || (Value === mixedValues)\n      ? null\n      : Math.round(Value)\n    )\n  }\n\n/**** BooleanFor ****/\n\n  function BooleanFor (Value:any, TruthValue:any=true):boolean|null {\n    return (\n      (Value === noSelection) || (Value === mixedValues)\n      ? null\n      : (Value === TruthValue)\n    )\n  }\n\n/**** IndeterminateFor **** /\n\n  function IndeterminateFor (Value:any):boolean {\n    return (Value === noSelection) || (Value === mixedValues) || (Value == null)\n  }\n*/\n/**** ErrorMessageFor ****/\n\n  function ErrorMessageFor (Error:SNS_Error):string {\n    switch (true) {\n      case (Error == null):         return '(no error found)'\n      case (Error === noSelection): return '(no selection)'\n      case (Error === mixedValues): return '(various errors)'\n      default:                      return Error.Type + ': ' + Error.Message\n    }\n  }\n\n/**** isRealValue **** /\n\n  function isRealValue (Value:any):boolean {\n    return (Value !== noSelection) && (Value !== mixedValues) && (Value != null)\n  }\n*/\n/**** showError **** /\n\n  function showError (Error:SNS_Error, Sticker:SNS_Sticker):void {\n    if (window.confirm(\n      Error.Type + '\\n\\n' + Error.Message + '\\n\\n' +\n      'Do you want to proceed to the Script Editor?'\n    )) {\n      selectStickers([Sticker])\n      PUX.openDialog('ScriptEditor')\n    }\n  }\n*/\n/**** showScriptError ****/\n\n  function showScriptError (Error:SNS_Error):void {\n    window.alert(Error.Type + '\\n\\n' + Error.Message)\n  }\n\n/**** applyPendingScriptOfVisual ****/\n\n  function applyPendingScriptOfVisual (Visual:SNS_Visual):SNS_Error|undefined {\n    let pendingScript:string|undefined = (Visual.pendingScript || '').trim()\n//  if (pendingScript === '') { pendingScript = undefined }\n\n    let activeScript:string|undefined = (Visual.activeScript || '').trim()\n    if (activeScript === '') { activeScript = undefined }\n\n    if (activeScript === pendingScript) { return }\n\n    if ((pendingScript == null) || (pendingScript === '')) {\n      Visual.activeScript  = undefined\n      Visual.pendingScript = undefined\n      Visual.activateScript()\n\n      Visual.ScriptError = undefined\n      Visual.Error       = undefined\n    } else {\n      const {\n        activeScript:oldActiveScript, pendingScript:oldPendingScript,\n      } = Visual\n        Visual.activeScript = oldPendingScript\n        Visual.activateScript()\n      if (Visual.Error == null) {\n//      Visual.activeScript  = oldPendingScript\n        Visual.pendingScript = undefined\n\n        Visual.ScriptError = undefined\n      } else {\n        Visual.ScriptError = Visual.Error\n\n        Visual.activeScript = oldActiveScript\n        Visual.activateScript()       // will not set \"ScriptError\", but \"Error\"\n      }\n    }\n    Visual.rerender()\n  }\n\n/**** ListsAreEqual ****/\n\n  function ListsAreEqual (ListA:any[], ListB:any[]):boolean {\n    return (\n      (ListA.length === ListB.length) &&\n      ListA.every((Element:any, i:number) => Element === ListB[i])\n    )\n  }\n\n/**** ListsDiffer **** /\n\n  function ListsDiffer (ListA:any[], ListB:any[]):boolean {\n    return (\n      (ListA.length !== ListB.length) ||\n      ListA.some((Element:any, i:number) => Element !== ListB[i])\n    )\n  }\n*/\n/**** MovesFor ****/\n\n  export type SNS_Move = { oldIndex:number, newIndex:number, Count:number }\n\n  function MovesFor (\n    oldIndices:number[], newIndices:number[],\n    ItemCount:number  // nota bene: this is the total # of stickers in the board\n  ):SNS_Move[] {\n      let IndexListA = Array(ItemCount).fill(NaN).map((_:any, i:number) => i)\n        oldIndices.forEach(         // mark all stickers that are to be moved...\n          (oldIndex:number) => IndexListA[oldIndex] = -1\n        )                                                  // ...and remove them\n        IndexListA = IndexListA.filter((Index:number) => Index !== -1)\n      let IndexListB = Array(ItemCount).fill(-1)\n        newIndices.forEach(           // remember where moved stickers come from\n          (newIndex:number,i:number) => IndexListB[newIndex] = oldIndices[i]\n        )\n        for (let i = 0, l = ItemCount; i < l; i++) {\n          if (IndexListB[i] === -1) {        // fill gaps between moved stickers\n            IndexListB[i] = IndexListA.shift()\n          }\n        }\n\n    /**** compute required moves ****/\n\n      const MoveList:SNS_Move[] = []\n        function move (oldIndex:number,newIndex:number):void {\n          const Index = IndexListA[oldIndex]\n          IndexListA.splice(oldIndex,1)\n          IndexListA.splice(newIndex,0,Index)\n          MoveList.push({ oldIndex, newIndex, Count:1 })\n        }\n\n      IndexListA = Array(ItemCount).fill(NaN).map((_:any, i:number) => i)\n        for (let i = 0, l = ItemCount; i < l; i++) {\n          if (IndexListA[i] !== IndexListB[i]) {\n            move(IndexListA.indexOf(IndexListB[i]),i)\n          }\n        }\n      for (let i = MoveList.length-1; i >= 1; i--) {           // optimize moves\n        const curMove  = MoveList[i]\n        const prevMove = MoveList[i-1]\n        if ((prevMove[0] === curMove[0]-1) && (prevMove[1] === curMove[1]-1)) {\n          MoveList.splice(i,1)\n          prevMove[2] += curMove[2]\n        }\n      }\n\n      return MoveList\n  }\n\n/**** withError **** /\n\n  function withError (Message:SNS_Textline, ...DetailList:any[]):void {\n    if (DetailList.length === 0) {\n      console.error('NoteStickers: ' + Message)\n    } else {\n      console.error.call(null,['NoteStickers: ' + Message].concat(DetailList))\n    }\ndebugger // *C* remove or comment for production\n  }\n*/\n/**** withWarning ****/\n\n  function withWarning (Message:SNS_Textline, ...DetailList:any[]):void {\n    if (DetailList.length === 0) {\n      console.warn('NoteStickers: ' + Message)\n    } else {\n      console.warn.call(null,['NoteStickers: ' + Message].concat(DetailList))\n    }\ndebugger // *C* remove or comment for production\n  }\n\n/**** begin with localForage ****/\n\n  localforage.config({\n    driver: [localforage.INDEXEDDB, localforage.WEBSQL]\n  })\n\n  localforage.ready(function () {\n    ProjectStore = localforage.createInstance({\n      name:'NoteStickers'\n    })\n\n    fetchPersistedProjectList()\n    showDialogCentered('ProjectBrowser')\n\n    print('ready for operation')\nObject.assign(window,{ // just for testing\n  Application,\n  MainScreen:PUX.ScreenNamed('MainScreen'),\n  Inspector:PUX.DialogNamed('Inspector')\n})\n  })\n"],"names":["Serialization","Error","EOLCount","Board","Width","Height"],"mappings":"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"}